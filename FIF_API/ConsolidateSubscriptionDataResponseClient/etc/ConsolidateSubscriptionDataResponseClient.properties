###############################################################################
#
# Configuration file for the FIF ServiceBusClient application
#
# @author Jens Schwarzwaelder
#
###############################################################################

####################
# GENERAL SETTINGS #
####################


# Indicates the location of the configuration file for the message connector framework.
# The location of the file is relative to the work directory. 
servicebusclient.BeanConfigurationFile=etc/mcf-consolidatesubscriptiondataresponseservice.xml

SynchronousServiceBusClient.InitializeMessageCreator=false

###################
# LOGGER SETTINGS #
###################

#
# The FIF Message Creator uses the Apache log4j framework for logging.
# The following entries configure log4j.
# Please refer to http://jakarta.apache.org/log4j/docs/index.html for
# detailed instructions.
#
# The log file name is specified in the log4j.appender.File.File key.
#

# Definition of the logging level and the appenders
log4j.rootLogger=INFO, File, Console

# Console Appender configuration
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d | %-5p | [%t] | %m%n

# File Appender configuration
log4j.appender.File=net.arcor.fif.common.DatedRollingFileAppender
log4j.appender.File.File=./log/FIFServiceBusResponseClient.log
log4j.appender.File.Append=true
log4j.appender.File.MaxFileSize=1MB
log4j.appender.File.DateFormat=.yyyy.MM.dd.HH.mm.ss
log4j.appender.File.layout=org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern=%d | %-5p | [%t] | %m%n


#####################
# DATABASE SETTINGS #
#####################

# The list of database aliases that are being used by the application
# An alias maps to a specific set of database configuration settings
# The DatabaseClient only needs one database alias and this alias should
# be called requestdb
db.aliases=ccmdb, zardb

# The name of the database driver to use
db.ccmdb.Driver=oracle.jdbc.driver.OracleDriver
# The connection string to use to connect to the database
db.ccmdb.ConnectString=jdbc:oracle:thin:@pkgifddb:1717:d4ccb
# The user name to use to connect to the database
db.ccmdb.User=ccm_user
# The password to use to connect to the database (encrypted in CCB format)
db.ccmdb.Password=ernirnlihlrieppg
# The encryption key that was used to encrypt the password (A234567890123456)
db.ccmdb.EncryptionKey=pshsodoehseffjlhsohedqfpnpfssmpleggfqpprnlhjhess
# The maximum number of minutes that a connection can remain active (in minutes)
db.ccmdb.MaximumConnectionLifeTime=240
# The minimum number of open connections in the pool
db.ccmdb.MinimumConnectionCount=0
# The maximum number of open connections in the pool
db.ccmdb.MaximumConnectionCount=15
# The number of minutes to wait between connection cleanup runs
db.ccmdb.HouseKeepingSleepTime=1

# The name of the database driver to use
db.zardb.Driver=oracle.jdbc.driver.OracleDriver
# The connection string to use to connect to the database
db.zardb.ConnectString=jdbc:oracle:thin:@10.207.132.93:1615:zarentw
# The user name to use to connect to the database
db.zardb.User=ccm_user
# The password to use to connect to the database (encrypted in CCB format)
db.zardb.Password=foirinnmrgdlrhfslffpnejiginmlihr
# The encryption key that was used to encrypt the password (A234567890123456)
db.zardb.EncryptionKey=pshsodoehseffjlhsohedqfpnpfssmpleggfqpprnlhjhess
# The maximum number of minutes that a connection can remain active (in minutes)
db.zardb.MaximumConnectionLifeTime=240
# The minimum number of open connections in the pool
db.zardb.MinimumConnectionCount=0
# The maximum number of open connections in the pool
db.zardb.MaximumConnectionCount=5
# The number of minutes to wait between connection cleanup runs
db.zardb.HouseKeepingSleepTime=1


# indicates, which db alias is used for request logging
DataReconciliationClient.ZARClearingRequest.DBAlias=zardb
servicebusclient.RequestLogging.DBAlias=ccmdb
RequestHandler.FailedRequestNotification.DBAlias=ccmdb


##################
# SQL STATEMENTS #
##################

# Statement for inserting a service bus request into the database configured above 
servicebusclient.RequestLogging.InsertRequest.Statement=\
   insert into service_bus_request (transaction_id, package_name, service_name, service_bus_client_name, \
          environment_name, request_type, synchronous_indicator, status, error_code, error_text, \
          recycle_stage, recycle_delay, event_due_date, external_system_id, start_date, end_date, \
          audit_update_date_time) \
   values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate)

# The indexes of the database fields for storing the service bus request
servicebusclient.RequestLogging.InsertRequest.IndexTransactionID=1
servicebusclient.RequestLogging.InsertRequest.IndexPackageName=2
servicebusclient.RequestLogging.InsertRequest.IndexServiceName=3
servicebusclient.RequestLogging.InsertRequest.IndexServiceBusClientName=4
servicebusclient.RequestLogging.InsertRequest.IndexEnvironmentName=5
servicebusclient.RequestLogging.InsertRequest.IndexRequestType=6
servicebusclient.RequestLogging.InsertRequest.IndexSynchronousIndicator=7
servicebusclient.RequestLogging.InsertRequest.IndexStatus=8
servicebusclient.RequestLogging.InsertRequest.IndexErrorCode=9   
servicebusclient.RequestLogging.InsertRequest.IndexErrorText=10
servicebusclient.RequestLogging.InsertRequest.IndexRecycleStage=11
servicebusclient.RequestLogging.InsertRequest.IndexRecycleDelay=12
servicebusclient.RequestLogging.InsertRequest.IndexEventDueDate=13
servicebusclient.RequestLogging.InsertRequest.IndexExternalSystemId=14
servicebusclient.RequestLogging.InsertRequest.IndexStartDate=15
servicebusclient.RequestLogging.InsertRequest.IndexEndDate=16
   
# Statement for inserting a service bus request parameter into the database configured above 
servicebusclient.RequestLogging.InsertRequestParam.Statement=\
   insert into service_bus_request_param (transaction_id, request_type, param, value, LONG_VALUE) \
   values (?, ?, ?, ?, ?)   

# The indexes of the database fields for storing the service bus request parameter
servicebusclient.RequestLogging.InsertRequestParam.IndexTransactionID=1
servicebusclient.RequestLogging.InsertRequestParam.IndexRequestType=2
servicebusclient.RequestLogging.InsertRequestParam.IndexParam=3
servicebusclient.RequestLogging.InsertRequestParam.IndexValue=4
servicebusclient.RequestLogging.InsertRequestParam.IndexClob=5
   
# Statement for inserting a service bus request parameter list into the database configured above 
servicebusclient.RequestLogging.InsertRequestParamList.Statement=\
   insert into service_bus_request_param_list (transaction_id, request_type, param_list, param, value, list_item_number) \
   values (?, ?, ?, ?, ?, ?)
   
# The indexes of the database fields for storing the service bus request parameter list
servicebusclient.RequestLogging.InsertRequestParamList.IndexTransactionID=1
servicebusclient.RequestLogging.InsertRequestParamList.IndexRequestType=2   
servicebusclient.RequestLogging.InsertRequestParamList.IndexParamList=3
servicebusclient.RequestLogging.InsertRequestParamList.IndexParam=4
servicebusclient.RequestLogging.InsertRequestParamList.IndexValue=5
servicebusclient.RequestLogging.InsertRequestParamList.IndexListItemNumber=6
   
# Statement for inserting a service bus request result parameter into the database configured above 
servicebusclient.RequestLogging.InsertRequestResult.Statement=\
   insert into service_bus_request_result (transaction_id, request_type, return_param, return_value) \
   values (?, ?, ?, ?)
   
# The indexes of the database fields for storing the service bus request result parameter
servicebusclient.RequestLogging.InsertRequestResult.IndexTransactionID=1
servicebusclient.RequestLogging.InsertRequestResult.IndexRequestType=2
servicebusclient.RequestLogging.InsertRequestResult.IndexParam=3
servicebusclient.RequestLogging.InsertRequestResult.IndexValue=4

# Statement for inserting a service bus request into the database configured above 
servicebusclient.RequestLogging.UpdateRequest.Statement=\
   update service_bus_request \
   set audit_update_date_time = sysdate, status = ?, error_code = ?, error_text = ?, \
       recycle_stage = ?, recycle_delay = ?, start_date = ?, end_date = ?\
   where transaction_id = ? \
   and request_type = ?

# The indexes of the database fields for storing the service bus request
servicebusclient.RequestLogging.UpdateRequest.IndexStatus=1
servicebusclient.RequestLogging.UpdateRequest.IndexErrorCode=2
servicebusclient.RequestLogging.UpdateRequest.IndexErrorText=3
servicebusclient.RequestLogging.UpdateRequest.IndexRecycleStage=4
servicebusclient.RequestLogging.UpdateRequest.IndexRecycleDelay=5
servicebusclient.RequestLogging.UpdateRequest.IndexStartDate=6
servicebusclient.RequestLogging.UpdateRequest.IndexEndDate=7
servicebusclient.RequestLogging.UpdateRequest.IndexTransactionID=8   
servicebusclient.RequestLogging.UpdateRequest.IndexRequestType=9

# Statement for inserting a service bus request into the database configured above 
servicebusclient.RequestLogging.RetrieveRequest.Statement=\
   select package_name, service_name, synchronous_indicator, status, recycle_stage, \
   recycle_delay, start_date, end_date, external_system_id \
   from service_bus_request \
   where transaction_id = ? \
   and request_type = ?

# The indexes of the database fields for storing the service bus request
servicebusclient.RequestLogging.RetrieveRequest.IndexTransactionID=1
servicebusclient.RequestLogging.RetrieveRequest.IndexRequestType=2

servicebusclient.RequestLogging.RetrieveRequest.IndexPackageName=1
servicebusclient.RequestLogging.RetrieveRequest.IndexServiceName=2
servicebusclient.RequestLogging.RetrieveRequest.IndexSynchronousIndicator=3
servicebusclient.RequestLogging.RetrieveRequest.IndexStatus=4
servicebusclient.RequestLogging.RetrieveRequest.IndexRecycleStage=5
servicebusclient.RequestLogging.RetrieveRequest.IndexRecycleDelay=6
servicebusclient.RequestLogging.RetrieveRequest.IndexStartDate=7
servicebusclient.RequestLogging.RetrieveRequest.IndexEndDate=8
servicebusclient.RequestLogging.RetrieveRequest.IndexExternalSystemId=9

# Statement for inserting a service bus request into the database configured above 
servicebusclient.RequestLogging.RetrieveRequestParams.Statement=\
  select param, value, long_value \
   from service_bus_request_param \
   where transaction_id = ? \
   and request_type = ?
# The indexes of the database fields for storing the service bus request
servicebusclient.RequestLogging.RetrieveRequestParams.IndexTransactionID=1
servicebusclient.RequestLogging.RetrieveRequestParams.IndexRequestType=2
servicebusclient.RequestLogging.RetrieveRequestParams.IndexParam=1
servicebusclient.RequestLogging.RetrieveRequestParams.IndexValue=2
servicebusclient.RequestLogging.RetrieveRequestParams.IndexLongValue=3


DataReconciliationClient.WriteFifRequests=true


SynchronousDatabaseClient.FifRequest.EnableInsertFifRequest=true
SynchronousDatabaseClient.FifRequest.EnableExternalSystemId=true
SynchronousDatabaseClient.FifRequest.EnableFifRequestsForExternalSystemIdExists=true


# statement for updating a FifRequest
SynchronousDatabaseClient.FifRequest.InsertFifRequest=\
INSERT INTO CCM_FIF_REQUEST \
(TRANSACTION_ID, TARGET_CLIENT, STATUS, ACTION_NAME, PRIORITY, DUE_DATE, \
EXTERNAL_SYSTEM_ID, AUDIT_UPDATE_DATE_TIME, CREATION_DATE, AUDIT_UPDATE_USER_ID, UPDATE_NUMBER) \
VALUES (?, 'CCMJS', ?, ?, ?, ?, ?, sysdate, sysdate, 'FIF', 1)

SynchronousDatabaseClient.FifRequest.InsertFifRequestParam=\
INSERT INTO CCM_FIF_REQUEST_PARAM \
(TRANSACTION_ID, PARAM, VALUE) \
VALUES (?, ?, ?)

SynchronousDatabaseClient.FifRequest.InsertFifRequestParamList=\
INSERT INTO CCM_FIF_REQUEST_PARAM_LIST \
(TRANSACTION_ID, PARAM_LIST, PARAM, VALUE, LIST_ITEM_NUMBER) \
VALUES (?, ?, ?, ?, ?)

# statement for retrieving a FifRequest from the front end by transactionID
SynchronousDatabaseClient.FifRequest.FetchFifRequestById=\
SELECT TRANSACTION_ID, STATUS, TRANSACTION_LIST_ID, TRANSACTION_LIST_STATUS, \
dependent_transaction_id, DUE_DATE, START_DATE, END_DATE, \
ACTION_NAME, EXTERNAL_SYSTEM_ID FROM CCM_FIF_REQUEST \
WHERE TARGET_CLIENT = 'CCMJS' AND TRANSACTION_ID = ?

# statement for retrieving a FifRequestList from the front end by transactionListID
SynchronousDatabaseClient.FifRequest.FetchFifRequestListById=\
SELECT TRANSACTION_ID FROM CCM_FIF_REQUEST \
WHERE TARGET_CLIENT = 'CCMJS' AND TRANSACTION_LIST_ID = ?

# statement for retrieving the parameters for a FifRequest
SynchronousDatabaseClient.FifRequest.FetchFifRequestParam=\
SELECT PARAM, VALUE FROM CCM_FIF_REQUEST_PARAM \
WHERE TRANSACTION_ID = ?

# statement for retrieving the parameter lists for a FifRequest
SynchronousDatabaseClient.FifRequest.FetchFifRequestParamList=\
SELECT PARAM_LIST, LIST_ITEM_NUMBER, PARAM, VALUE FROM CCM_FIF_REQUEST_PARAM_LIST \
WHERE TRANSACTION_ID = ? \
ORDER BY PARAM_LIST, LIST_ITEM_NUMBER

# statement for retrieving a batch of pending FifRequests
SynchronousDatabaseClient.FifRequest.FetchPendingFifRequests=\
SELECT /*+ index(CCM_FIF_REQUEST, CCMFR_IND_6) */ TRANSACTION_ID \
FROM CCM_FIF_REQUEST CCM1 \
WHERE TARGET_CLIENT = 'CCMJS' \
AND STATUS='NOT_STARTED' \
AND ( \
  TRANSACTION_LIST_ID IS NOT NULL \
  AND TRANSACTION_LIST_STATUS='NOT_STARTED' \
  AND NOT EXISTS ( \
    SELECT 1 FROM CCM_FIF_REQUEST CCM2 \
	WHERE CCM1.TRANSACTION_LIST_ID = CCM2.TRANSACTION_LIST_ID \
	AND (TRANSACTION_LIST_STATUS != 'NOT_STARTED' OR STATUS != 'NOT_STARTED')) \
    OR \
    TRANSACTION_LIST_ID IS NULL) \
AND SYSDATE >= DUE_DATE \
AND ROWNUM <= ? \
ORDER BY PRIORITY DESC, TRANSACTION_ID ASC

# statement for locking a FifRequest
SynchronousDatabaseClient.FifRequest.LockFifRequest=\
SELECT 1 FROM CCM_FIF_REQUEST WHERE TRANSACTION_ID = ? \
AND STATUS='NOT_STARTED' FOR UPDATE

# statement for updating a FifRequest
SynchronousDatabaseClient.FifRequest.UpdateFifRequest=\
UPDATE CCM_FIF_REQUEST SET \
DUE_DATE = ?, START_DATE = ?, END_DATE = ?, STATUS = ?, \
ERROR_TEXT = ?, TRANSACTION_LIST_STATUS = ? \
WHERE TRANSACTION_ID = ?

# statement for populating the results of a FifRequest on the front end
SynchronousDatabaseClient.FifRequest.InsertFifRequestResult=\
INSERT INTO CCM_FIF_REQUEST_RESULT (TRANSACTION_ID, RETURN_PARAM, RETURN_VALUE) \
VALUES (?, ?, ?)

SynchronousDatabaseClient.FifRequest.FifRequestsForExternalSystemIdExists=\
select 1 from ccm_fif_request where external_system_id = ?


DataReconciliationClient.DataReconReport.InsertDataReconReport=\
INSERT INTO DATA_RECON_REPORT ( \
DATA_RECON_REPORT_ID, CUSTOMER_NUMBER, BUNDLE_ID, ORDER_ID, ORDER_POSITION_NUMBER, \
REPORT_DATE, BKS_RESULT, BKS_ERROR_CODE, BKS_ERROR_MESSAGE, VALIDATED_CCM, VALIDATED_AIDA, \
VALIDATED_ZAR, VALIDATED_CRAMER, PROCESSED_CCM, PROCESSED_AIDA, PROCESSED_ZAR, PROCESSED_CRAMER, \
PROCESSED_SLS, SBUS_CORRELATION_ID, AUDIT_UPDATE_DATE_TIME, AUDIT_UPDATE_USER_ID, VALIDATED_INFPORT, PROCESSED_INFPORT) \
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

DataReconciliationClient.DataReconReportAction.InsertDataReconReportAction=\
INSERT INTO DATA_RECON_REPORT_ACTION (DATA_RECON_REPORT_ID, DATA_RECON_REPORT_ACTION_ID, SCENARIO_TYPE, \
ACTION_TYPE, CLEARING_SYSTEM, ERROR_CODE, ERROR_MESSAGE, VALUE_CCM, VALUE_AIDA, VALUE_ZAR, VALUE_CRAMER, \
LEADING_SYSTEM, SERVICE_SUBSCRIPTION_ID, SERVICE_CHAR_CODE, SERVICE_CHAR_DESCRIPTION, DATA_TYPE, \
TARGET_VALUE, RELATED_OBJECT_ID, RELATED_OBJECT_TYPE, AUDIT_UPDATE_DATE_TIME, AUDIT_UPDATE_USER_ID, VALUE_INFPORT) \
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

DataReconciliationClient.GetReportID.Statement=\
select 'DR' || LPAD (FIF_TRANSACTION_ID_SEQ.nextval, 15, '0') from dual

DataReconciliationClient.CCMData.GetProductCodeForServiceSubscription=\
select ofpc.product_code from order_form_product_commit ofpc \
where ofpc.effective_date = ( \
  select max(ofpc1.effective_date) from order_form_product_commit ofpc1 \
  where ofpc.product_commitment_number = ofpc1.product_commitment_number) \
and ofpc.product_commitment_number in ( \
  select ps.product_commitment_number from product_subscription ps \
  where ps.product_subscription_id in ( \
    select product_subscription_id from service_subscription ss \
    where ss.service_subscription_id = ?)) \
union \
select sdcpc.product_code from serv_deliv_cont_product_commit sdcpc \
where sdcpc.effective_date = ( \
  select max(sdcpc1.effective_date) from serv_deliv_cont_product_commit sdcpc1 \
  where sdcpc.product_commitment_number = sdcpc1.product_commitment_number) \
and sdcpc.product_commitment_number in ( \
  select ps.product_commitment_number from product_subscription ps \
  where ps.product_subscription_id in ( \
    select product_subscription_id from service_subscription ss \
    where ss.service_subscription_id = ?))

DataReconciliationClient.CCMData.GetCustomerNumberForServiceSubscription=\
select customer_number from product_subscription ps \
where effective_date = ( \
  select max(ps1.effective_date) from product_subscription ps1 \
  where ps.product_subscription_id = ps1.product_subscription_id) \
and ps.product_subscription_id in ( \
  select product_subscription_id from service_subscription ss \
  where ss.service_subscription_id = ?)


DataReconciliationClient.ZARClearingRequest.InsertZARClearingRequest=\
INSERT INTO FREYMANJ.SLS_CLEARING_WORK_TABLE \
(COL_CLEARING_ID, COL_CCM_SS_ID, COL_RUF_KUNDENUMMER_CCM, COL_RUF_KUNDENUMMER_ZAR, COL_ONB_VORWAHL, \
COL_RUF_START, COL_RUF_END, COL_CCM_SCENARIO, COL_PRODUCT_CODE, COL_INSERT_DATE, COL_LAST_UPDATE, COL_LAST_SYSTEM) \
values (?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate, sysdate, 'FIF')

DataReconciliationClient.ZARClearingRequest.AlterSession=\
alter session set global_names = false

