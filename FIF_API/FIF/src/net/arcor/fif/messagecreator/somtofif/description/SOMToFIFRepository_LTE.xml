<?xml version="1.0" encoding="UTF-8"?>
<TransformationRepository xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.arcor.de/transformer/SOMToFIFTransformationSchema"
  xmlns:base="http://www.arcor.de/transformer/BaseTransformationSchema"
  xsi:schemaLocation="http://www.arcor.de/transformer/SOMToFIFTransformationSchema SOMToFIFTransformationSchema.xsd"
  docTypeQualifiedName="request-list" docTypeSystemId="request-list.dtd">
  <RootTemplate>
    <RequestListTemplate orderIdPath="//order[@orderID]">

      <base:Include fileID="functionParameters" fileName="FunctionParameters.xml"/>

      <base:DataBufferWriter keyValue="isWF12" staticValue="true" />
      <base:DataBufferWriter keyValue="trxBuilder" staticValue="consumer" />
      <base:DataBufferWriter keyValue="orderIdPath" sourceAttrName="count(/*/barcode) > 0"
        decoding="'true', '/*/barcode', '/order/@orderID'"/>

      <!-- global request list parameters -->
      <RLPMapping targetName="sourceSystem" sourceAttrName="/order/customerContactPoint"/>
      <RLPMapping targetName="userName" sourceAttrName="/order/entryUser"/>
      <RLPMapping targetName="rollenBezeichnung" sourceAttrName="/order/entryRole"/>
      <RLPMapping targetName="somDate" sourceAttrName="/order/entryDateTime" formatter="SOMToCCBDateFormatter"/>
      <RLPMapping targetName="orderId" sourceAttrName="/order/@orderID"/>
      <RLPMapping targetName="OMTSOrderID" sourceAttrName="${#:orderIdPath}"/>
      <RLPMapping targetName="salesOrganisationNumber" sourceAttrName="/*/*/salesOrganisationNumber[@type='A']"/>
      <RLPMapping targetName="salesOrganisationNumberVF" sourceAttrName="/*/*/salesOrganisationNumber[@type='V']"/>
      <RLPMapping targetName="desiredDate" sourceAttrName="/order/*/desiredDate" formatter="SOMToCCBDateFormatter"/>
      <RLPMapping targetName="orderPositionNumber" sourceAttrName="/order/*/@orderPositionNumber"/>
      <RLPMapping targetName="scanDate" sourceAttrName="/order/scanDate" formatter="SOMToCCBDateFormatter"/>
      <RLPMapping targetName="orderAcceptedDate" sourceAttrName="/order/orderAcceptedDate" formatter="SOMToCCBDateFormatter"/>
      <RLPMapping targetName="superCustomerTrackingId" sourceAttrName="/order/superCustomerTrackingId"/>
      <RLPMapping targetName="reason" sourceAttrName="/order/*/reason"/>
      <RLPMapping targetName="validateDuplicateAccessNumbers" staticValue="Y"/>
      <RLPMapping targetName="workflowType" staticValue="COM-OPM-FIF" />      
            
      <base:DataBufferWriter keyValue="isOPMOrder" sourceAttrName="count(/*/*/functions/*[
        completionStatusOldCcbId = 'acknowledgedOPM' or 
        completionStatusOldCcbId = 'precompletedOPM' or 
        completionStatusOldCcbId = 'completedOPM' or 
        completionStatusOldCcbId = 'cancelledOPM' or 
        completionStatusNewCcbId = 'acknowledgedOPM' or 
        completionStatusNewCcbId = 'precompletedOPM' or 
        completionStatusNewCcbId = 'completedOPM' or 
        completionStatusNewCcbId = 'cancelledOPM' or 
        previousCompletionStatusOldCcbId = 'acknowledgedOPM' or 
        previousCompletionStatusOldCcbId = 'precompletedOPM' or 
        previousCompletionStatusOldCcbId = 'completedOPM' or 
        previousCompletionStatusOldCcbId = 'cancelledOPM' or 
        previousCompletionStatusNewCcbId = 'acknowledgedOPM' or 
        previousCompletionStatusNewCcbId = 'precompletedOPM' or 
        previousCompletionStatusNewCcbId = 'completedOPM' or 
        previousCompletionStatusNewCcbId = 'cancelledOPM']) 
        + 
        count(/*/*/accesses/*[
        completionStatusOldCcbId = 'acknowledgedOPM' or 
        completionStatusOldCcbId = 'precompletedOPM' or 
        completionStatusOldCcbId = 'completedOPM' or 
        completionStatusOldCcbId = 'cancelledOPM' or 
        completionStatusNewCcbId = 'acknowledgedOPM' or 
        completionStatusNewCcbId = 'precompletedOPM' or 
        completionStatusNewCcbId = 'completedOPM' or 
        completionStatusNewCcbId = 'cancelledOPM' or 
        previousCompletionStatusOldCcbId = 'acknowledgedOPM' or 
        previousCompletionStatusOldCcbId = 'precompletedOPM' or 
        previousCompletionStatusOldCcbId = 'completedOPM' or 
        previousCompletionStatusOldCcbId = 'cancelledOPM' or 
        previousCompletionStatusNewCcbId = 'acknowledgedOPM' or 
        previousCompletionStatusNewCcbId = 'precompletedOPM' or 
        previousCompletionStatusNewCcbId = 'completedOPM' or 
        previousCompletionStatusNewCcbId = 'cancelledOPM']) > 0"/>
      
      <base:DataBufferWriter keyValue="isOpenOPMOrder" sourceAttrName="count(/*/*/functions/*[
        completionStatusNewCcbId = 'acknowledgedOPM' or 
        completionStatusOldCcbId = 'acknowledgedOPM' or
        completionStatusNewCcbId = 'precompletedOPM' or 
        completionStatusOldCcbId = 'precompletedOPM' or
        completionStatusNewCcbId = 'precompletedCCM' or 
        completionStatusOldCcbId = 'precompletedCCM'])
        +
        count(/*/*/accesses/*[
        completionStatusNewCcbId = 'acknowledgedOPM' or 
        completionStatusOldCcbId = 'acknowledgedOPM' or
        completionStatusNewCcbId = 'precompletedOPM' or 
        completionStatusOldCcbId = 'precompletedOPM' or
        completionStatusNewCcbId = 'precompletedCCM' or 
        completionStatusOldCcbId = 'precompletedCCM']) > 0"/>
      
      <base:DataBufferWriter keyValue="isOpenOPMOrderIgnoreDE" sourceAttrName="count(
      	/*/*/functions/*[name(.) != 'directoryEntry' and (
        completionStatusNewCcbId = 'acknowledgedOPM' or 
        completionStatusOldCcbId = 'acknowledgedOPM' or
        completionStatusNewCcbId = 'precompletedOPM' or 
        completionStatusOldCcbId = 'precompletedOPM' or
        completionStatusNewCcbId = 'precompletedCCM' or 
        completionStatusOldCcbId = 'precompletedCCM')])
        +
        count(/*/*/accesses/*[
        completionStatusNewCcbId = 'acknowledgedOPM' or 
        completionStatusOldCcbId = 'acknowledgedOPM' or
        completionStatusNewCcbId = 'precompletedOPM' or 
        completionStatusOldCcbId = 'precompletedOPM' or
        completionStatusNewCcbId = 'precompletedCCM' or 
        completionStatusOldCcbId = 'precompletedCCM']) > 0"/>
      
      <base:DataBufferWriter keyValue="isOrderCancelled" sourceAttrName="count(/*/*/functions/*[
        completionStatusNewCcbId = 'cancelledCCM' or 
        completionStatusNewCcbId = 'cancelledOPM' or 
        completionStatusOldCcbId = 'cancelledCCM' or 
        completionStatusOldCcbId = 'cancelledOPM' or 
        previousCompletionStatusNewCcbId = 'cancelledCCM' or 
        previousCompletionStatusNewCcbId = 'cancelledOPM' or 
        previousCompletionStatusOldCcbId = 'cancelledCCM' or 
        previousCompletionStatusOldCcbId = 'cancelledOPM'])
        +
        count(/*/*/accesses/*[
        completionStatusNewCcbId = 'cancelledCCM' or 
        completionStatusNewCcbId = 'cancelledOPM' or 
        completionStatusOldCcbId = 'cancelledCCM' or 
        completionStatusOldCcbId = 'cancelledOPM' or 
        previousCompletionStatusNewCcbId = 'cancelledCCM' or 
        previousCompletionStatusNewCcbId = 'cancelledOPM' or 
        previousCompletionStatusOldCcbId = 'cancelledCCM' or 
        previousCompletionStatusOldCcbId = 'cancelledOPM']) > 0"/>
            
      <base:DataBufferWriter keyValue="fifActionExecuted" sourceAttrName="count(/*/*/functions/*[
        completionStatusOldCcbId = 'acknowledgedCCM' or 
        completionStatusOldCcbId = 'precompletedCCM' or 
        completionStatusOldCcbId = 'cancelledCCM' or 
        completionStatusOldCcbId = 'completedCCM']) > 0"/>
      
      <base:DataBufferWriter keyValue="fifActionTriggered" staticValue="false" />
      
      <base:DataBufferWriter keyValue="downstreamBandwidthHelper"
        sourceAttrName="concat(
        count(/*/*/*/internet/*/DSLBandwidth/configured),
        count(/*/*/*/internet/*/DSLBandwidth[@action = 'remove']),
        count(/*/*/*/internet[processingType = 'TERM']))"
        decoding="'000', 'existing', '100', 'configured', 'nothing'" />
      <base:DataBufferWriter keyValue="upstreamBandwidthHelper"
        sourceAttrName="concat(
        count(/*/*/*/internet/*/upstreamBandwidth/configured),
        count(/*/*/*/internet/*/upstreamBandwidth[@action = 'remove']),
        count(/*/*/*/internet[processingType = 'TERM']))"
        decoding="'000', 'existing', '100', 'configured', 'nothing'" />
      
      <base:DataBufferWriter keyValue="currentBandwidth"
        sourceAttrName="/*/*/*/internet/*/DSLBandwidth/existing" />
      <base:DataBufferWriter keyValue="targetBandwidth"
        sourceAttrName="/*/*/*/internet/*/DSLBandwidth/${#:downstreamBandwidthHelper}" />
      
      <base:DataBufferWriter keyValue="currentUpstreamBandwidth"
        sourceAttrName="/*/*/*/internet/*/upstreamBandwidth/existing" />
      <base:DataBufferWriter keyValue="targetUpstreamBandwidth"
        sourceAttrName="/*/*/*/internet/*/upstreamBandwidth/${#:upstreamBandwidthHelper}" />
      
      <base:DataBufferWriter keyValue="isBandwidthChange"
        sourceAttrName="'${#:currentBandwidth}' != ''
        and '${#:targetBandwidth}' != '' 
        and '${#:currentBandwidth}' != '${#:targetBandwidth}'"/>
      <base:DataBufferWriter keyValue="isUpstreamBandwidthChange"
        sourceAttrName="'${#:currentUpstreamBandwidth}' != ''
        and '${#:targetUpstreamBandwidth}' != '' 
        and '${#:currentUpstreamBandwidth}' != '${#:targetUpstreamBandwidth}'"/>
      
      <base:DataBufferWriter keyValue="existingMainAccessID"
        sourceAttrName="
        /*/*/*/isdn/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/isdnP2P/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/ngn/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/ipBitstream/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/preselect[@ID = '${/*/*/*/voice[processingType = 'CHANGE']/@refAccessID}']/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/dslr[count(../preselect) = 0 and count(../sip) = 0]/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/sip[count(../dslr) > 0]/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/lte/ccbId[@type='S']/existing/../../@ID"/>
      
      <base:DataBufferWriter keyValue="configuredMainAccessID"
        sourceAttrName="
        /*/*/*/isdn/*/*/configured/../../../@ID |
        /*/*/*/isdnP2P/*/*/configured/../../../@ID |
        /*/*/*/ngn/*/*/configured/../../../@ID |
        /*/*/*/ipBitstream/*/*/configured/../../../@ID |
        /*/*/*/preselect/*/*/configured/../../../@ID |
        /*/*/*/dslr[count(../preselect) = 0]/*/*/configured/../../../@ID |
        /*/*/*/lte/*/*/configured/../../../@ID"/>
      
      <base:DataBufferWriter keyValue="currentMainAccessIDTag"
        sourceAttrName="string-length('${#:existingMainAccessID}') = 0"
        decoding="'true', 'configuredMainAccessID', 'existingMainAccessID'" />
      
      <base:DataBufferWriter keyValue="currentMainAccessID"
        sourceAttrName="/*/*/accesses/*[@ID = '${#:${#:currentMainAccessIDTag}}']/@ID" />      

      <!-- target access is either taken from a @targetAccessID or set to currentMainAccessID -->
      <base:DataBufferWriter keyValue="targetAccessID1"
        sourceAttrName="/*/*/functions/*/@targetAccessID" />      
      <base:DataBufferWriter keyValue="targetAccessID2"
        sourceAttrName="#:currentMainAccessID" />            
      <base:DataBufferWriter keyValue="targetAccessElement"
        sourceAttrName="count(/*/*/functions/*/@targetAccessID) > 0" 
        decoding="'true', 'targetAccessID1', 'false', 'targetAccessID2'"/>            
      <base:DataBufferWriter keyValue="targetAccessID" sourceAttrName="string('${#:${#:targetAccessElement}}')" />      
      
      <base:DataBufferWriter keyValue="voiceFunctionIDHelper"
        sourceAttrName="concat(
        count(/*/*/*/voice[
        @refAccessID = '${#:currentMainAccessID}' or 
        @refAccessID = '${#:targetAccessID}' or         
        @refAccessID = '${#:configuredMainAccessID}' or         
        @targetAccessID = '${#:currentMainAccessID}' or         
        @targetAccessID = '${#:targetAccessID}' or         
        @targetAccessID = '${#:configuredMainAccessID}']) > 0,
        count(/*/*/*/voice[processingType = 'ADD']) > 0)" 
        decoding="
        'falsefalse', 'invalid SOM',
        'falsetrue', 'voiceFunctionIDHelper1',
        'truefalse', 'voiceFunctionIDHelper2',
        'truetrue', 'voiceFunctionIDHelper2'"/>      

      <base:DataBufferWriter keyValue="voiceFunctionIDHelper1"
        sourceAttrName="/*/*/*/voice[processingType = 'ADD']/@ID" />      
      <base:DataBufferWriter keyValue="voiceFunctionIDHelper2"
        sourceAttrName="/*/*/*/voice[
        @refAccessID = '${#:currentMainAccessID}' or 
        @refAccessID = '${#:targetAccessID}' or         
        @refAccessID = '${#:configuredMainAccessID}' or         
        @targetAccessID = '${#:currentMainAccessID}' or         
        @targetAccessID = '${#:targetAccessID}' or         
        @targetAccessID = '${#:configuredMainAccessID}']/@ID" />      
      
      <base:DataBufferWriter keyValue="internetFunctionIDHelper"
        sourceAttrName="concat(
        count(/*/*/*/internet[
        @refAccessID = '${#:currentMainAccessID}' or 
        @refAccessID = '${#:targetAccessID}' or         
        @refAccessID = '${#:configuredMainAccessID}' or         
        @targetAccessID = '${#:currentMainAccessID}' or         
        @targetAccessID = '${#:targetAccessID}' or         
        @targetAccessID = '${#:configuredMainAccessID}' or
        count(@refAccessID) = 0]) > 0,
        count(/*/*/*/internet[processingType = 'ADD']) > 0)" 
        decoding="
        'falsefalse', 'invalid SOM',
        'falsetrue', 'internetFunctionIDHelper1',
        'truefalse', 'internetFunctionIDHelper2',
        'truetrue', 'internetFunctionIDHelper2'"/>      
      
      <base:DataBufferWriter keyValue="internetFunctionIDHelper1"
        sourceAttrName="/*/*/*/internet[processingType = 'ADD']/@ID" />      
      <base:DataBufferWriter keyValue="internetFunctionIDHelper2"
        sourceAttrName="/*/*/*/internet[
        @refAccessID = '${#:currentMainAccessID}' or 
        @refAccessID = '${#:targetAccessID}' or         
        @refAccessID = '${#:configuredMainAccessID}' or         
        @targetAccessID = '${#:currentMainAccessID}' or         
        @targetAccessID = '${#:targetAccessID}' or         
        @targetAccessID = '${#:configuredMainAccessID}' or
        count(@refAccessID) = 0]/@ID" />      
            
      <base:DataBufferWriter keyValue="mainVoiceFunctionID" sourceAttrName="string('${#:${#:voiceFunctionIDHelper}}')" /> 
      <base:DataBufferWriter keyValue="mainInternetFunctionID" sourceAttrName="string('${#:${#:internetFunctionIDHelper}}')" /> 
      
      <base:DataBufferWriter keyValue="internetConfiguration"
        sourceAttrName="
        name(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/*[contains(name(.), 'Configuration')
        and (count(*/existing | */*/existing) = 0
        or count(*/existing | */*/existing) > 0 and count(*/configured | */*/configured) > 0
        or count(*/existing | */*/existing) > 0 and count(../*/*/configured | ../*/*/*/configured) = 0)])" />
      
      <base:DataBufferWriter keyValue="targetTechnology"
        sourceAttrName="concat(name(/*/*/accesses/*[@ID = '${#:targetAccessID}']), '${#:internetConfiguration}')"
        decoding="
        'isdnadslInternetConfiguration', 'ISDN', 
        'isdn', 'ISDN', 
        'isdnP2PadslInternetConfiguration', 'ISDNP2P', 
        'isdnP2P', 'ISDNP2P', 
        'ngnadslInternetConfiguration', 'NGN', 
        'ngnfttxInternetConfiguration', 'FTTx', 
        'ngnfibreInternetConfiguration', 'FTTH', 
        'ipBitstreamadslInternetConfiguration', 'BitStream', 
        'lteadslInternetConfiguration', 'LTE',
        ''" />      

      <base:DataBufferWriter keyValue="currentTechnology"
        sourceAttrName="
        concat(name(/*/*/accesses/*[@ID='${#:currentMainAccessID}']),
        (count(/*/*/*/internet[@refAccessID=/*/*/accesses/ngn/@ID]/fttxInternetConfiguration/*/existing) > 0),
        (count(/*/*/*/internet[@refAccessID=/*/*/accesses/ngn/@ID]/fibreInternetConfiguration/*/existing) > 0
         and count(/*/*/*/internet[@refAccessID=/*/*/accesses/ngn/@ID]/*[not (name(.) = 'fibreInternetConfiguration')]/*/existing) = 0))"
        decoding="
        'isdnfalsefalse', 'ISDN', 
        'isdnP2Pfalsefalse', 'ISDNP2P', 
        'ngnfalsefalse', 'NGN', 
        'ngntruefalse', 'FTTx', 
        'ngnfalsetrue', 'FTTH', 
        'ipBitstreamfalsefalse', 'BitStream',
        'preselectfalsefalse', 'preselect', 
        'sipfalsefalse', 'DSLR-SIP', 
        'dslrfalsefalse', 'DSLR-Only', 
        'ltefalsefalse', 'LTE'"/>

      <base:DataBufferWriter keyValue="currentProductType"
        sourceAttrName="/*/*/functions/voice[@ID = '${#:mainVoiceFunctionID}']/*/mainAccessServiceCode/existing"
        decoding="'VI002','Basis','VI018','Basis','VI009','Basis','V0003','Basis','Premium'"/>
      
      <base:DataBufferWriter keyValue="targetProductTypeHelper"
        sourceAttrName="concat(
        count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/voiceBasisConfiguration/*/configured) > 0, 
        count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/voicePremiumConfiguration/*/configured) > 0)"
        decoding="'truetrue', 'targetProductTypeAmbiguous', 'truefalse', 'Basis', 
        'falsetrue', 'Premium', 'falsefalse', ''"/>
      
      <base:DataBufferWriter keyValue="targetProductType"
        sourceAttrName="concat('${#:currentProductType}', ';', '${#:targetProductTypeHelper}')"
        decoding="
        'Basis;', 'Basis',
        'Premium;', 'Premium',
        'Basis;Basis', 'Basis',
        'Premium;Basis', 'Basis',
        'Basis;Premium', 'Premium',
        'Premium;Premium', 'Premium',
        'targetProductTypeAmbiguous'"/>
      
      <base:DataBufferWriter keyValue="isRelocation" sourceAttrName="count(/*/relocation) > 0"/>

      <base:DataBufferWriter keyValue="isTechnologyChange"
        sourceAttrName="'${#:targetTechnology}' != '${#:currentTechnology}' and '${#:targetTechnology}' != ''
        and (
        '${#:currentTechnology}' != 'preselect' and (
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingType = 'CHANGE'
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingType = 'ADD'
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingType = 'TERM')
        or
        '${#:currentTechnology}' = 'preselect' and 
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingType = 'CHANGE')"/>

      <base:DataBufferWriter keyValue="isProductTypeChange"
        sourceAttrName="'${#:targetProductType}' != '${#:currentProductType}' and '${#:targetProductType}' != ''
        and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingType = 'CHANGE'"/>
      
      <!-- indicates, if a new main access service will be created for internet in this SOM -->  
      <base:DataBufferWriter keyValue="newInternetMainAccess"
        sourceAttrName="/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingType != 'TERM' and (
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingType = 'ADD' 
        or '${#:isTechnologyChange}'= 'true'
        or '${#:isRelocation}'= 'true'
        or count(/*/contractPartnerChange) > 0
        or count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/@targetAccessID) > 0 
        and /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/@targetAccessID != /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/@refAccessID)"/>
      
      <!-- indicates, if a new main access service will be created for voice in this SOM -->
      <base:DataBufferWriter keyValue="newVoiceMainAccess"
        sourceAttrName="/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingType = 'ADD' 
        or '${#:isRelocation}' = 'true' and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingType = 'CHANGE' 
        or '${#:isTechnologyChange}' = 'true'
        or count(/*/contractPartnerChange) > 0
        or count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/@targetAccessID) > 0 and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/@targetAccessID != /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/@refAccessID
        or '${#:isProductTypeChange}' =  'true'"/>
      
      <base:DataBufferWriter keyValue="isDSLDowngrade"
        sourceAttrName="
        (count(/*/*/accesses/isdn/ccbId[@type = 'S']/existing) > 0 and '${#:currentTechnology}' = 'ISDN' or
        count(/*/*/accesses/isdnP2P/ccbId[@type = 'S']/existing) > 0 and '${#:currentTechnology}' = 'ISDNP2P') and 
        '${#:newVoiceMainAccess}' != 'true' and 
        '${#:currentBandwidth}' != '' and '${#:targetBandwidth}' = ''"/>
      <base:DataBufferWriter keyValue="isDSLUpgrade"
        sourceAttrName="
        (count(/*/*/accesses/isdn/ccbId[@type = 'S']/existing) > 0 and '${#:currentTechnology}' = 'ISDN' or
        count(/*/*/accesses/isdnP2P/ccbId[@type = 'S']/existing) > 0 and '${#:currentTechnology}' = 'ISDNP2P') and
        '${#:newVoiceMainAccess}' != 'true' and 
        '${#:currentBandwidth}' = '' and '${#:targetBandwidth}' != ''"/>
      
      <base:DataBufferWriter keyValue="isISDNDSLChangeScenario"
        sourceAttrName="
        ('${#:currentTechnology}' = 'ISDN' and '${#:targetTechnology}' = 'ISDN' or
        '${#:currentTechnology}' = 'ISDNP2P' and '${#:targetTechnology}' = 'ISDNP2P') and (
        '${#:isDSLDowngrade}' = 'true' or 
        '${#:isDSLUpgrade}' = 'true' or
        '${#:isBandwidthChange}' = 'true' or
        '${#:isUpstreamBandwidthChange}' = 'true')"/>
      
      <base:DataBufferWriter keyValue="isAccessParameterForVoiceAndInternetChanged"
        sourceAttrName="
        (('${#:currentTechnology}' = 'NGN' and '${#:targetTechnology}' = 'NGN' or
        '${#:currentTechnology}' = 'BitStream' and '${#:targetTechnology}' = 'BitStream')
        and count(/*/*/accesses/*/*/technicalServiceId/existing) + count(/*/*/accesses/*/*/technicalServiceId/configured) = 2 
        and /*/*/accesses/*/*/technicalServiceId/existing != /*/*/accesses/*/*/technicalServiceId/configured)
        or ('${#:currentTechnology}' = 'BitStream' and '${#:targetTechnology}' = 'BitStream'
        and count(/*/*/accesses/*/*/technicalServiceGroup/existing) + count(/*/*/accesses/*/*/technicalServiceGroup/configured) = 2 
        and /*/*/accesses/*/*/technicalServiceGroup/existing != /*/*/accesses/*/*/technicalServiceGroup/configured)"/>            
      
      <base:DataBufferWriter keyValue="isVoiceLocationAddressChange"
        sourceAttrName="
        ('${#:currentTechnology}' = 'NGN' and '${#:targetTechnology}' = 'NGN' or
        '${#:currentTechnology}' = 'ISDN' and '${#:targetTechnology}' = 'ISDN' or
        '${#:currentTechnology}' = 'ISDNP2P' and '${#:targetTechnology}' = 'ISDNP2P' or
        '${#:currentTechnology}' = 'BitStream' and '${#:targetTechnology}' = 'BitStream' or
        '${#:currentTechnology}' = 'LTE' and '${#:targetTechnology}' = 'LTE')
        and (
        /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/street != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/street
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/streetNumber != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/streetNumber
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/postalCode != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/postalCode
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/city != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/city
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/citySuffix != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/citySuffix
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/additionalAddressDescription != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/additionalAddressDescription
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/streetNumberSuffix != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/streetNumberSuffix)"/>            
      
      <base:DataBufferWriter keyValue="isInternetLocationAddressChange"
        sourceAttrName="
        ('${#:currentTechnology}' = 'NGN' and '${#:targetTechnology}' = 'NGN' or
        '${#:currentTechnology}' = 'BitStream' and '${#:targetTechnology}' = 'BitStream' or
        '${#:currentTechnology}' = 'LTE' and '${#:targetTechnology}' = 'LTE')
        and (
        /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/street != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/street
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/streetNumber != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/streetNumber
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/postalCode != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/postalCode
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/city != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/city
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/citySuffix != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/citySuffix
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/additionalAddressDescription != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/additionalAddressDescription
        or /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/existing/streetNumberSuffix != /*/lineChange/accesses/*[@ID = '${#:currentMainAccessID}']/*/locationAddress/configured/streetNumberSuffix)"/>            
      
      <!-- indicates, if the respective function is terminated in this step -->
      <base:DataBufferWriter keyValue="terminateInternet"
        sourceAttrName="
        '${#:newInternetMainAccess}' = 'true' and 
        count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/ccbId[@type = 'S']/existing) > 0 and (
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'completedOPM' and count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId | /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId) = 0 or 
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'completedOPM' and 
        (count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/previousCompletionStatusOldCcbId) = 0 
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/previousCompletionStatusOldCcbId != 'precompletedCCM'))
        or
        '${#:newInternetMainAccess}' = 'true' and 
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'cancelledOPM' and 
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/previousCompletionStatusNewCcbId = 'precompletedCCM'
        or
        '${#:newInternetMainAccess}' != 'true' and /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingType = 'TERM' and (
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'completedOPM' and count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId) = 0 or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'completedOPM')"/>

      <!-- indicates, if the resp. function will be terminated (or not existing at all) 
        after the current request has been processed -->
      <base:DataBufferWriter keyValue="existingInternetTerminated"
        sourceAttrName="'${#:terminateInternet}' = 'true' or
        count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/ccbId[@type = 'S']/existing) = 0 or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'completedCCM' or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'acknowledgedCCM'"/>
                  
      <!-- indicates, that in this step, a new respective main access has to be created -->
      <base:DataBufferWriter keyValue="createInternet"
        sourceAttrName="
        '${#:newInternetMainAccess}' = 'true' and (
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'completedOPM' and count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId | /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId) = 0
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'precompletedOPM'  and count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId | /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId) = 0
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'completedOPM' and /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/previousCompletionStatusNewCcbId != 'precompletedCCM'
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'precompletedOPM' and /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/previousCompletionStatusNewCcbId != 'precompletedCCM')
        and (
        '${#:existingInternetTerminated}' = 'true'
        or /*/relocation/relocationVariant = 'Parallel')"/>
      
      <!-- indicates, that in this step, the respective main access has to be reconfigured -->
      <base:DataBufferWriter keyValue="reconfigureInternet"
        sourceAttrName="
        '${#:newInternetMainAccess}' != 'true' and
        '${#:currentTechnology}' != 'ISDN' and '${#:currentTechnology}' != 'ISDNP2P' and 
        /*/*/accesses/*[@ID = '${#:currentMainAccessID}']/completionStatusOldCcbId = 'completedOPM' and (
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'noactionOPM' or 
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'noactionCOM')
        or
        '${#:newInternetMainAccess}' = 'true' and (
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'completedOPM' and /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/previousCompletionStatusNewCcbId = 'precompletedCCM' or 
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'precompletedOPM' and /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/previousCompletionStatusNewCcbId = 'precompletedCCM')
        or
        '${#:newInternetMainAccess}' != 'true' and 
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingType = 'CHANGE' and (
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'completedOPM' and count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId | /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId) = 0
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'completedOPM' and count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId) = 0
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'precompletedOPM' and count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId) = 0
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'completedOPM' and /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'completedOPM'
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'completedCCM' and /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'completedOPM')
        or
        '${#:isInternetLocationAddressChange}' = 'true' and
        '${#:newInternetMainAccess}' != 'true' and 
        (/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'noactionOPM' 
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'noactionCOM')"/>
      
      <!-- indicates, that in case of one ccbId and two states internet is now reconfigured (IT-k-33552) -->
      <base:DataBufferWriter keyValue="reconfigurePrecompletedInternet"
        sourceAttrName="
        '${#:newInternetMainAccess}' != 'true' and 
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'precompletedOPM' and
        count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId) > 0"/>
                              
      <!-- indicates, that all dependent functions can now be created (i.e. the parent was already created) -->
      <base:DataBufferWriter keyValue="internetReadyForDependentFunctions"
        sourceAttrName="
        (count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId) = 0 or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId != 'cancelledCCM' and
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId != 'cancelledOPM')
        and
        ('${#:newInternetMainAccess}' != 'true' or
        '${#:reconfigureInternet}' = 'true' or
        '${#:createInternet}' = 'true' or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingType = 'IGNORE' or
        count(/*/*/*/internet) = 0 or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'noactionOPM' or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'completedCCM' or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'precompletedCCM' or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'completedCCM' or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'precompletedCCM')"/>
      
      <!-- indicates, that in this particular step, features of the respective function have to be created -->
      <base:DataBufferWriter keyValue="internetReadyForFeatures"
        sourceAttrName="
        '${#:newInternetMainAccess}' = 'true' and '${#:createInternet}' = 'true'
        or '${#:newInternetMainAccess}' != 'true' and '${#:reconfigureInternet}' = 'true'
        or 
        '${#:isOpenOPMOrderIgnoreDE}' = 'false' and '${#:isOrderCancelled}' = 'false' and (
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'noactionCOM' or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/processingStatus = 'noactionOPM')"/>      
      
      <!-- indicates, that billing changes already have been or will be processed in the current step -->
      <base:DataBufferWriter keyValue="internetBillingChangesReady"
        sourceAttrName="
        '${#:internetReadyForFeatures}' = 'true'
        or '${#:internetReadyForDependentFunctions}' = 'true' and '${#:newInternetMainAccess}' = 'true'
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'completedCCM' and '${#:newInternetMainAccess}' = 'false'
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'acknowledgedCCM' and '${#:newInternetMainAccess}' = 'false'"/>      

      <!-- indicates, if the pricing structure on the corresponding function is changed -->
      <base:DataBufferWriter keyValue="internetHasTariffChange"
        sourceAttrName="count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/*/pricingStructureCode/configured) > 0
        and /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/*/pricingStructureCode/existing != /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/*/pricingStructureCode/configured"/>      
      
      <!-- indicates, if the respective function is terminated in this step -->
      <!-- TODO extend for Preselect termination with noactionOPM and activation of new product -->
      <base:DataBufferWriter keyValue="terminateVoice"
        sourceAttrName="
        '${#:newVoiceMainAccess}' = 'true' and 
        count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/ccbId[@type = 'S']/existing) > 0 and (
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'completedOPM' and count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId | /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId) = 0 or 
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'completedOPM' and 
        (count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/previousCompletionStatusOldCcbId) = 0 
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/previousCompletionStatusOldCcbId != 'precompletedCCM')
        )
        or
        '${#:newVoiceMainAccess}' = 'true' and 
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'cancelledOPM' and 
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/previousCompletionStatusNewCcbId = 'precompletedCCM'
        or
        '${#:newVoiceMainAccess}' != 'true' and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingType = 'TERM' and (
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'completedOPM' and count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId) = 0 or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'completedOPM')"/>
      
      <!-- indicates, if the resp. function will be terminated (or not existing at all) 
        after the current request has been processed -->
      <base:DataBufferWriter keyValue="existingVoiceTerminated"
        sourceAttrName="'${#:terminateVoice}' = 'true' or
        count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/ccbId[@type = 'S']/existing) = 0 or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'completedCCM' or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'noactionOPM' or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'noactionCOM' or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'acknowledgedCCM'"/>
      
      <!-- indicates, that in this step, a new respective main access has to be created -->
      <base:DataBufferWriter keyValue="createVoice"
        sourceAttrName="
        '${#:internetReadyForDependentFunctions}' = 'true' and
        '${#:newVoiceMainAccess}' = 'true' and (
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'completedOPM' and count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId | /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId) = 0
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'precompletedOPM' and count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId | /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId) = 0
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'completedOPM' and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/previousCompletionStatusNewCcbId != 'precompletedCCM'
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'precompletedOPM' and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/previousCompletionStatusNewCcbId != 'precompletedCCM')
        and (
        '${#:existingVoiceTerminated}' = 'true'
        or /*/relocation/relocationVariant = 'Parallel')"/>      
      
      <!-- indicates, that in this step, the respective main access has to be reconfigured -->
      <base:DataBufferWriter keyValue="reconfigureVoice"
        sourceAttrName="
        '${#:newVoiceMainAccess}' != 'true' and
        ('${#:currentTechnology}' = 'ISDN' or '${#:currentTechnology}' = 'ISDNP2P') and 
        /*/*/accesses/*[@ID = '${#:currentMainAccessID}']/completionStatusOldCcbId = 'completedOPM' and (
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'noactionOPM' or 
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'noactionCOM')
        or
        ('${#:isAccessParameterForVoiceAndInternetChanged}' = 'true' or '${#:isISDNDSLChangeScenario}' = 'true') and
        '${#:newVoiceMainAccess}' != 'true' and 
        (/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'noactionOPM' and '${#:isOrderCancelled}' = 'false' 
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'noactionCOM') 
        and (/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'completedOPM' or
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'completedOPM')
        or
        '${#:newVoiceMainAccess}' = 'true' and (
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'completedOPM' and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/previousCompletionStatusNewCcbId = 'precompletedCCM' or 
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'precompletedOPM' and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/previousCompletionStatusNewCcbId = 'precompletedCCM')        
        or
        '${#:newVoiceMainAccess}' != 'true' and 
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingType = 'CHANGE' and (
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'completedOPM' and count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId | /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId) = 0
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'completedOPM' and count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId) = 0
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'precompletedOPM' and count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId) = 0
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'completedOPM' and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'completedOPM'
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'completedCCM' and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'completedOPM')
        or
        '${#:isVoiceLocationAddressChange}' = 'true' and
        '${#:newVoiceMainAccess}' != 'true' and 
        (/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'noactionOPM' 
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'noactionCOM')"/>
      
      <!-- indicates, that in case of one ccbId and two states voice is now reconfigured -->
      <base:DataBufferWriter keyValue="reconfigurePrecompletedVoice"
        sourceAttrName="
        '${#:newVoiceMainAccess}' != 'true' and 
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'precompletedOPM' and
        count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId) > 0"/>
      
      <!-- indicates, that all dependent functions can now be created (i.e. the parent was already created) -->
      <base:DataBufferWriter keyValue="voiceReadyForDependentFunctions"
        sourceAttrName="
        (count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId) = 0 or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId != 'cancelledCCM' and
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId != 'cancelledOPM')
        and '${#:internetReadyForDependentFunctions}' = 'true' 
        and (
        '${#:newVoiceMainAccess}' != 'true' or
        '${#:createVoice}' = 'true' or
        '${#:reconfigureVoice}' = 'true' or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingType = 'IGNORE' or
        count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']) = 0 or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'noactionOPM' or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'completedCCM' or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'precompletedCCM' or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'completedCCM' or
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'precompletedCCM')"/>

      <base:DataBufferWriter keyValue="isOpenISDNBandwidthChange" 
        sourceAttrName="
        ('${#:isUpstreamBandwidthChange}' = 'true' or '${#:isBandwidthChange}' = 'true') and
        ('${#:currentTechnology}' = 'ISDN' or '${#:currentTechnology}' = 'ISDNP2P') and
        '${#:isTechnologyChange}' != 'true' and 
        '${#:newVoiceMainAccess}' != 'true' and 
        /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'acknowledgedOPM'"/>
                  
      <!-- indicates, that in this particular step, features of the respective function have to be created -->
      <base:DataBufferWriter keyValue="voiceReadyForFeatures"
        sourceAttrName="
        '${#:newVoiceMainAccess}' = 'true' and '${#:createVoice}' = 'true'
        or '${#:newVoiceMainAccess}' != 'true' and '${#:reconfigureVoice}' = 'true'
        or 
        '${#:isOpenOPMOrderIgnoreDE}' = 'false' and '${#:isOrderCancelled}' = 'false' and (
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'noactionCOM'
        or 
        /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/processingStatus = 'noactionOPM' 
        and '${#:isOpenISDNBandwidthChange}' != 'true')"/>      

      <!-- indicates, that billing changes already have been or will be processed in the current step -->
      <base:DataBufferWriter keyValue="voiceBillingChangesReady"
        sourceAttrName="
        '${#:voiceReadyForFeatures}' = 'true'
        or '${#:voiceReadyForDependentFunctions}' = 'true' and '${#:newVoiceMainAccess}' = 'true'
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'completedCCM' and '${#:newVoiceMainAccess}' = 'false'
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'acknowledgedCCM' and '${#:newVoiceMainAccess}' = 'false'"/>      
            
      <!-- indicates, if the pricing structure on the corresponding function is changed -->
      <base:DataBufferWriter keyValue="voiceHasTariffChange"
        sourceAttrName="count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/*/pricingStructureCode/configured) > 0
        and /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/*/pricingStructureCode/existing != /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/*/pricingStructureCode/configured"/>      
            
      <base:DataBufferWriter keyValue="newTVCenterMainAccess"
        sourceAttrName="/*/*/*/tvCenter/processingType != 'TERM' and (
        /*/*/*/tvCenter/processingType = 'ADD'
        or '${#:isTechnologyChange}'= 'true'
        or '${#:isRelocation}'= 'true'
        or count(/*/contractPartnerChange) > 0)"/>
      
      <!-- indicates, if the respective function is terminated in this step -->
      <base:DataBufferWriter keyValue="terminateTVCenter"
        sourceAttrName="
        '${#:newTVCenterMainAccess}' = 'true' and 
        count(/*/*/*/tvCenter/ccbId[@type = 'S']/existing) > 0 and (
        /*/*/*/tvCenter/processingStatus = 'completedOPM' and count(/*/*/*/tvCenter/completionStatusNewCcbId | /*/*/*/tvCenter/completionStatusOldCcbId) = 0 or 
        /*/*/*/tvCenter[@refAccessID='${#:currentMainAccessID}']/completionStatusOldCcbId = 'completedOPM' and 
        (count(/*/*/*/tvCenter[@refAccessID='${#:currentMainAccessID}']/previousCompletionStatusOldCcbId) = 0 
        or /*/*/*/tvCenter[@refAccessID='${#:currentMainAccessID}']/previousCompletionStatusOldCcbId != 'precompletedCCM')
        )
        or
        '${#:newTVCenterMainAccess}' = 'true' and 
        /*/*/*/tvCenter/completionStatusNewCcbId = 'cancelledOPM' and 
        /*/*/*/tvCenter/previousCompletionStatusNewCcbId = 'precompletedCCM'
        or
        '${#:newTVCenterMainAccess}' != 'true' and /*/*/*/tvCenter/processingType = 'TERM' and (
        /*/*/*/tvCenter/processingStatus = 'completedOPM' and count(/*/*/*/tvCenter/completionStatusOldCcbId) = 0 or
        /*/*/*/tvCenter/completionStatusOldCcbId = 'completedOPM')"/>
      
      <!-- indicates, that in this step, a new respective main access has to be created -->
      <base:DataBufferWriter keyValue="createTVCenter"
        sourceAttrName="
        '${#:internetReadyForDependentFunctions}' = 'true' and
        '${#:newTVCenterMainAccess}' = 'true' and (
        /*/*/*/tvCenter/processingStatus = 'completedOPM' and count(/*/*/*/tvCenter/completionStatusNewCcbId | /*/*/*/tvCenter/completionStatusOldCcbId) = 0
        or /*/*/*/tvCenter/processingStatus = 'precompletedOPM' and count(/*/*/*/tvCenter/completionStatusNewCcbId | /*/*/*/tvCenter/completionStatusOldCcbId) = 0
        or /*/*/*/tvCenter/completionStatusNewCcbId = 'completedOPM' and /*/*/*/tvCenter/previousCompletionStatusNewCcbId != 'precompletedCCM'
        or /*/*/*/tvCenter/completionStatusNewCcbId = 'precompletedOPM' and /*/*/*/tvCenter/previousCompletionStatusNewCcbId != 'precompletedCCM')"/>
      
      <!-- indicates, that in this step, the respective main access has to be reconfigured -->
      <base:DataBufferWriter keyValue="reconfigureTVCenter"
        sourceAttrName="
        '${#:newTVCenterMainAccess}' = 'true' and (
        /*/*/*/tvCenter/completionStatusNewCcbId = 'completedOPM' and /*/*/*/tvCenter/previousCompletionStatusNewCcbId = 'precompletedCCM' or 
        /*/*/*/tvCenter/completionStatusNewCcbId = 'precompletedOPM' and /*/*/*/tvCenter/previousCompletionStatusNewCcbId = 'precompletedCCM')        
        or
        '${#:newTVCenterMainAccess}' != 'true' and 
        /*/*/*/tvCenter/processingType = 'CHANGE' and (
        /*/*/*/tvCenter/processingStatus = 'completedOPM' and count(/*/*/*/tvCenter/completionStatusNewCcbId | /*/*/*/tvCenter/completionStatusOldCcbId) = 0
        or /*/*/*/tvCenter/completionStatusOldCcbId = 'completedOPM'
        or /*/*/*/tvCenter/completionStatusOldCcbId = 'precompletedOPM')"/>
      
      <!-- indicates, that all dependent functions can now be created (i.e. the parent was already created) -->
      <base:DataBufferWriter keyValue="tvCenterReadyForDependentFunctions"
        sourceAttrName="
        (count(/*/*/*/tvCenter/completionStatusNewCcbId) = 0 or
        /*/*/*/tvCenter/completionStatusNewCcbId != 'cancelledCCM' and
        /*/*/*/tvCenter/completionStatusNewCcbId != 'cancelledOPM')
        and '${#:internetReadyForDependentFunctions}' = 'true' 
        and (
        '${#:newTVCenterMainAccess}' != 'true' or
        '${#:createTVCenter}' = 'true' or
        '${#:reconfigureTVCenter}' = 'true' or
        /*/*/*/tvCenter/processingType = 'IGNORE' or
        /*/*/*/tvCenter/processingStatus = 'noactionOPM' or
        /*/*/*/tvCenter/processingStatus = 'completedCCM' or
        /*/*/*/tvCenter/processingStatus = 'precompletedCCM' or
        /*/*/*/tvCenter/completionStatusNewCcbId = 'completedCCM' or
        /*/*/*/tvCenter/completionStatusNewCcbId = 'precompletedCCM')"/>
      
      <!-- indicates, that in this particular step, features of the respective function have to be created -->
      <base:DataBufferWriter keyValue="tvCenterReadyForFeatures"
        sourceAttrName="
        '${#:newTVCenterMainAccess}' = 'true' and '${#:createTVCenter}' = 'true'
        or '${#:newTVCenterMainAccess}' != 'true' and '${#:reconfigureTVCenter}' = 'true'
        or 
        '${#:isOpenOPMOrderIgnoreDE}' = 'false' and '${#:isOrderCancelled}' = 'false' and 
        (/*/*/*/tvCenter/processingStatus = 'noactionCOM' or /*/*/*/tvCenter/processingStatus = 'noactionOPM')"/>
                  
      <!-- indicates, that in this particular step, features of the respective function have to be created -->
      <base:DataBufferWriter keyValue="safetyPackageReadyForFeatures"
        sourceAttrName="
        '${#:internetReadyForDependentFunctions}' = 'true' and
        (/*/*/*/safetyPackage/processingStatus = 'completedOPM'
        or
        (/*/*/*/safetyPackage/processingStatus = 'noactionOPM' or /*/*/*/safetyPackage/processingStatus = 'noactionCOM')
        and '${#:isOpenOPMOrderIgnoreDE}' = 'false' 
        and '${#:isOrderCancelled}' = 'false')"/>
      
      <base:DataBufferWriter keyValue="terminateSafetyPackageOnCancellation"
        sourceAttrName="
        (count(/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId) = 0
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'completedOPM'
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId = 'completedCCM')
        and
        (/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'cancelledOPM'
        or /*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId = 'cancelledCCM')
        and
        (count(/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId) = 0
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'completedOPM'
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusOldCcbId = 'completedCCM')
        and
        (/*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'cancelledOPM'
        or /*/*/*/internet[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId = 'cancelledCCM')
        and
        (/*/*/*/safetyPackage/processingType = 'IGNORE'
        or /*/*/*/safetyPackage/processingType = 'CHANGE'
        or /*/*/*/safetyPackage/processingType = 'ADD' and /*/*/*/safetyPackage/completionStatusNewCcbId = 'completedCCM')"/>
      
      <base:DataBufferWriter keyValue="createUpstreamBandwidth"
        sourceAttrName="
        ('${#:targetTechnology}' = 'ISDN' or '${#:targetTechnology}' = 'ISDNP2P')
        and (
        '${#:newVoiceMainAccess}' = 'true' 
        and '${#:targetUpstreamBandwidth}' != 'Standard'
        and '${#:targetUpstreamBandwidth}' != ''
        or '${#:newVoiceMainAccess}' != 'true' 
        and (
        '${#:isBandwidthChange}' != 'true' 
        and '${#:isUpstreamBandwidthChange}' = 'true'  
        or '${#:isBandwidthChange}' = 'true' 
        and '${#:targetUpstreamBandwidth}' != 'Standard'
        and '${#:targetUpstreamBandwidth}' != ''))
        or
        ('${#:targetTechnology}' != 'ISDN' and '${#:targetTechnology}' != 'ISDNP2P')
        and (
        '${#:newInternetMainAccess}' = 'true' 
        and '${#:targetUpstreamBandwidth}' != 'Standard'
        and '${#:targetUpstreamBandwidth}' != ''
        or 
        '${#:newInternetMainAccess}' != 'true' 
        and (
        '${#:isBandwidthChange}' != 'true' 
        and '${#:isUpstreamBandwidthChange}' = 'true'  
        or '${#:isBandwidthChange}' = 'true' 
        and '${#:targetUpstreamBandwidth}' != 'Standard'
        and '${#:targetUpstreamBandwidth}' != '')) "/>
      
      <!-- helpers for determination of reason and detailed reason START -->
      <base:DataBufferWriter 
        keyValue="scenarioTypeHelper"
        sourceAttrName="concat(name(/*/*/accesses/..), ';', '${#:isTechnologyChange}', ';', '${#:isProductTypeChange}')"         
        decoding="
        'lineCreation;false;false', 'lineCreation', 
        'lineCreation;false;true', 'lineCreation', 
        'lineCreation;true;false', 'lineCreation', 
        'lineCreation;true;true', 'lineCreation',
        'lineChange;false;false', 'simple', 
        'lineChange;false;true', 'productTypeChange', 
        'lineChange;true;false', 'technologyChange', 
        'lineChange;true;true', 'technologyChange',
        'relocation;false;false', 'relocation', 
        'relocation;false;true', 'relocation', 
        'relocation;true;false', 'relocation', 
        'relocation;true;true', 'relocation',
        'termination;false;false', 'termination', 
        'termination;false;true', 'termination', 
        'termination;true;false', 'termination', 
        'termination;true;true', 'termination',
        'contractPartnerChange;false;false', 'contractPartnerChange', 
        'contractPartnerChange;false;true', 'contractPartnerChange', 
        'contractPartnerChange;true;false', 'contractPartnerChange', 
        'contractPartnerChange;true;true', 'contractPartnerChange'"/>          
      
      <base:DataBufferWriter 
        keyValue="scenarioType" 
        sourceAttrName="concat('${#:scenarioTypeHelper}', ';', '${#:targetProductType}')"
        decoding="
        'lineCreation;Basis', 'lineCreation', 
        'lineCreation;Premium', 'lineCreation', 
        'simple;Basis', 'simple', 
        'simple;Premium', 'simple', 
        'relocation;Basis', 'relocation', 
        'relocation;Premium', 'relocation', 
        'termination;Basis', 'termination', 
        'termination;Premium', 'termination', 
        'technologyChange;Basis', 'technologyChange', 
        'technologyChange;Premium', 'technologyChange', 
        'contractPartnerChange;Basis', 'contractPartnerChange', 
        'contractPartnerChange;Premium', 'contractPartnerChange', 
        'productTypeChange;Basis', 'productTypeChangeToBasis', 
        'productTypeChange;Premium', 'productTypeChangeToPremium'"/>
      <!-- helpers for determination of reason and detailed reason END -->
      

      <!-- PPM155469 indicates, if the activation of billing should be postponed -->
      <base:DataBufferWriter keyValue="billingActivationRelevant"
        sourceAttrName="
        /order/*/transactionType = 'execute'
        and (name(/*/*/accesses/..) = 'lineCreation' or name(/*/*/accesses/..) = 'relocation')
        and ('${#:targetTechnology}' = 'ISDN' or '${#:targetTechnology}' = 'NGN' or '${#:targetTechnology}' = 'FTTx' or '${#:targetTechnology}' = 'FTTH' or '${#:targetTechnology}' = 'BitStream' or '${#:targetTechnology}' = 'ISDNP2P')"/>
                              
      <base:Include fileIDRef="functionParameters" partIDRef="masterdataParameters"/>
      <!--  Allocate step  -->
      
      <!-- IT-k-32186 Validate during allocate step, that V0017 (monthly charge) is not removed -->
      <RequestTemplate fif-request-name="raiseError"
        sourceWorkingPath="/*/*/functions/*[@ID = '${#:mainVoiceFunctionID}' or @ID = '${#:mainInternetFunctionID}']">
        <TemplateConditions>
          <base:IsNotMember value="false" sourceAttrName="internal/validateMonthlyCharge"/>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <!-- ISDN internet doesn't require V0017, ignore in validation -->
          <OrComposite>
            <base:IsNotMember value="internet" sourceAttrName="name(.)"/>
            <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology"/>
          </OrComposite>
          <!-- existing V0017 -->
          <OrComposite>
            <base:IsExisting sourceAttrName="*/featuresList/existing[featureServiceCode = 'V0017']" />
            <base:IsExisting sourceAttrName="*/featuresList/existing/featureService[featureServiceCode = 'V0017']" />
          </OrComposite>
          <!-- no V0017 in the future -->
          <OrComposite>
            <base:IsMember value="remove" sourceAttrName="*/featuresList/@action"/>
            <AndComposite>
              <!-- Configured node exists ==> existing == configured -->
              <base:IsExisting sourceAttrName="*/featuresList/configured"/>
              <base:IsMember value="true" sourceAttrName="
                count(*/featuresList/configured[featureServiceCode = 'V0017']) + 
                count(*/featuresList/configured/featureService[featureServiceCode = 'V0017']) = 0"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="errorMessage" staticValue="Monthly charge (serviceCode V0017) would be removed with this order. Please correct order (COM-SLS or development)." />
        <base:DataBufferWriter keyValue="errorRaised" staticValue="true" />
      </RequestTemplate>        
      <!-- IT-k-32186 end -->
      
      <!-- For RMS_172575_PPM_320858_GigaGemeinde -->
      <RequestTemplate fif-request-name="raiseError"
        sourceWorkingPath="/*/*/functions/*[@ID = '${#:mainInternetFunctionID}']">
        <TemplateConditions>
          <base:IsNotMember value="false" sourceAttrName="internal/validateFibreFee"/>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsMember value="internet" sourceAttrName="name(.)"/>
          <base:IsMember value="FTTH" sourceAttrName="#:targetTechnology"/>
          <base:IsNotExisting sourceAttrName="*/fibreFee/existing" />
          <base:IsNotExisting sourceAttrName="*/fibreFee/configured" />
        </TemplateConditions>
        <RPMapping targetName="errorMessage" staticValue="This Fiber configuration requires fibre fee" />
        <base:DataBufferWriter keyValue="errorRaised" staticValue="true" />
      </RequestTemplate> 
      <!-- For RMS_172575_PPM_320858_GigaGemeinde ended-->

      <!-- SPN-FIF-000126894 Validate during allocate step, that condition is not empty -->
      <RequestTemplate fif-request-name="raiseError"
        sourceWorkingPath="/*/*/functions/*[@ID = '${#:mainVoiceFunctionID}' or @ID = '${#:mainInternetFunctionID}']">
        <TemplateConditions>
          <base:IsNotMember value="false" sourceAttrName="internal/validateEmptyCondition"/>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsMember value="true" sourceAttrName="count(*/conditionsList/configured/conditionService[count(conditionServiceName) = 0 and count(conditionServiceID) = 0]) > 0" />
        </TemplateConditions>
        <RPMapping targetName="errorMessage" staticValue="Empty conditionService found in order. Please correct order (COM-SLS or development)." />
        <base:DataBufferWriter keyValue="errorRaised" staticValue="true" />
      </RequestTemplate>        
      <!-- SPN-FIF-000126894 end -->
      
      <!-- allocate for lineChanges
        1. processingType ADD always generates a new CCB id
        2. processingType CHANGE only generates a new CCB id, if the change will lead to new main access service
        3. In case of relocations, a new service is always created
      -->
      <RequestTemplate fif-request-name="allocateCcbId"
        sourceWorkingPath="/*/relocation/functions/* | /*/lineChange/functions/* | /*/lineCreation/functions/* | /*/contractPartnerChange/functions/*">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <OrComposite>
            <base:IsNotMember value="lineChange" sourceAttrName="name(../..)"/>
            <base:IsNotExisting sourceAttrName="/order/lineCreation"/>
            <base:IsMember value="ADD" sourceAttrName="processingType"/>
          </OrComposite>
          <OrComposite>
            <AndComposite>
              <base:IsMember value="voice" sourceAttrName="name(.)"/>
              <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              <base:IsMember value="true" 
                sourceAttrName="@refAccessID = '${#:targetAccessID}' or @targetAccessID = '${#:targetAccessID}'"/>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="internet" sourceAttrName="name(.)"/>
              <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
              <base:IsMember value="true" sourceAttrName="#:newTVCenterMainAccess"/>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="extraLine" sourceAttrName="name(.)"/>
              <OrComposite>
                <base:IsMember value="ADD" sourceAttrName="processingType"/>
                <AndComposite>
                  <base:IsNotMember value="TERM" sourceAttrName="processingType"/>                  
                  <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>                  
                </AndComposite>
              </OrComposite>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
              <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
              <base:IsMember value="contractPartnerChange" sourceAttrName="name(../..)"/>
            </AndComposite>
            <base:IsMember value="ADD" sourceAttrName="processingType"/>
            <AndComposite>
              <base:IsMember value="hardware" sourceAttrName="name(.)"/>
              <OrComposite>
                <base:Include fileIDRef="functionParameters" partIDRef="hardwareServiceByTechnology"/>
              </OrComposite>
              <OrComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="refFunctionID/configured != refFunctionID/existing"/>
                  <base:IsExisting sourceAttrName="refFunctionID/configured"/>
                </AndComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
                  <base:IsExisting sourceAttrName="/*/*/functions/internet[@ID='${refFunctionID/existing}']"/>
                </AndComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                  <base:IsExisting sourceAttrName="/*/*/functions/voice[@ID='${refFunctionID/existing}']"/>
                </AndComposite>
              </OrComposite>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
              <OrComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                </AndComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                  <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
                </AndComposite>
                <AndComposite>
                  <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                  <base:IsExisting sourceAttrName="*/listedPhoneNumber/configured"/>
                  <OrComposite>
                    <base:IsMember value="true" sourceAttrName="*/listedPhoneNumber/configured/countryCode != */listedPhoneNumber/existing/countryCode"/>
                    <base:IsMember value="true" sourceAttrName="*/listedPhoneNumber/configured/localAreaCode != */listedPhoneNumber/existing/localAreaCode"/>
                    <base:IsMember value="true" sourceAttrName="*/listedPhoneNumber/configured/pilotNumber != */listedPhoneNumber/existing/pilotNumber"/>                    
                  </OrComposite>
                </AndComposite>
              </OrComposite>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="mobileUsage" sourceAttrName="name(.)"/>
              <OrComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="refFunctionID/configured != refFunctionID/existing"/>
                  <base:IsExisting sourceAttrName="refFunctionID/configured"/>
                </AndComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
                  <base:IsExisting sourceAttrName="/*/*/functions/internet[@ID='${refFunctionID/existing}']"/>
                </AndComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                  <base:IsExisting sourceAttrName="/*/*/functions/voice[@ID='${refFunctionID/existing}']"/>
                </AndComposite>
              </OrComposite>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>

        <base:DataBufferWriter keyValue="ccbIdAllocated" staticValue="true"/> 
        <RPMapping staticValue="SERVSUB" targetName="type"/>
        <RPMapping targetName="functionID" sourceAttrName="@ID"/>
        <RPMapping targetName="systemID" sourceAttrName="${#:orderIdPath}"/>
        <RPMapping staticValue="COM" targetName="systemType"/>
      </RequestTemplate>

      <!-- validate, that the account is still ACTIVATED, if new services are to be created -->
      <RequestTemplate fif-request-name="validateAccountActive"
        sourceWorkingPath="/order">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsNotMember value="false" sourceAttrName="internal/validateAccountActive"/>
          <base:IsMember value="true" 
            sourceAttrName="count(/*/*/functions/*[processingType = 'ADD' or processingType = 'CHANGE']) > 0"/>
        </TemplateConditions>
        <RPMapping targetName="accountNumber" sourceAttrName="#:targetAccountNumber" />
      </RequestTemplate>
      
      <base:DataBufferWriter keyValue="customerClassification" 
        sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/classification/*"/>
      
      <!-- validate all tariffs for the respective customers, if they are about to be changed or recreated -->
      <RequestTemplate fif-request-name="validatePricingStructure"
        sourceWorkingPath="/*/*/functions/*">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsNotMember value="false" sourceAttrName="internal/validatePricingStructure"/>
          <!-- don't validate the ISDN-Only workaround from POS -->
          <OrComposite>
            <base:IsNotMember value="internet" sourceAttrName="name(.)"/>
            <base:IsNotMember value="V0002" sourceAttrName="*/productCode/configured" />
          </OrComposite>
          <!-- only contract functions -->
          <base:IsExisting sourceAttrName="*/pricingStructureCode"/>
          <OrComposite>
            <!-- new function -->
            <base:IsNotExisting sourceAttrName="*/pricingStructureCode/existing"/>                  
            <!-- tariff change -->
            <AndComposite>
              <base:IsExisting sourceAttrName="*/pricingStructureCode/configured"/>                  
              <base:IsMember value="true" sourceAttrName="*/pricingStructureCode/configured != */pricingStructureCode/existing"/>
            </AndComposite>
            <!-- clone scenarios -->
            <AndComposite>
              <base:IsMember value="voice" sourceAttrName="name(.)"/>
              <base:IsNotMember value="sip" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
              <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="internet" sourceAttrName="name(.)"/>
              <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
              <base:IsMember value="true" sourceAttrName="#:newTVCenterMainAccess"/>
            </AndComposite>
            <!-- contractPartnerChange -->
            <AndComposite>
              <base:IsMember value="contractPartnerChange" sourceAttrName="name(../..)"/>
              <OrComposite>
                <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
                <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
              </OrComposite>
            </AndComposite>            
          </OrComposite>          
        </TemplateConditions>
        
        <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>        
        <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
        <RPMapping targetName="classification" sourceAttrName="#:customerClassification" />
        <RPMapping targetName="customerCategory" 
          sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/customerCategory" 
          method="configuredExisting" />        
        <RPMapping targetName="pricingStructureCode" 
          sourceAttrName="*/pricingStructureCode" 
          method="configuredExisting" />   
        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />            
          </TemplateConditions>
          <RPListTemplate listName="affinityGroupList">
            <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured/affinityGroup">
              <RPMapping sourceAttrName="." targetName="affinityGroup" />
            </RPListItemTemplate>
          </RPListTemplate>
        </TransformationTemplate>
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />            
          </TemplateConditions>
          <RPListTemplate listName="affinityGroupList">
            <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/existing/affinityGroup">
              <RPMapping sourceAttrName="." targetName="affinityGroup" />
            </RPListItemTemplate>
          </RPListTemplate>
        </TransformationTemplate>
        
      </RequestTemplate>        
      
	<!-- validate tariffs bandwidth service, if it is about to be changed or recreated (Not ISDN)-->
	<RequestTemplate fif-request-name="validatePricingStructure" sourceWorkingPath="/*/*/functions/internet">
	  <TemplateConditions>
	    <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
	    <base:IsNotMember value="false" sourceAttrName="internal/validatePricingStructure"/>
        <base:IsMember value="false" sourceAttrName="*/DSLBandwidth/@action = 'remove'" />        
        <OrComposite>
          <base:IsMember value="true" sourceAttrName="
                '${#:targetTechnology}' = '' and 
                '${#:currentTechnology}' != 'ISDN'and 
                '${#:currentTechnology}' != 'ISDNP2P'"/>
          <base:IsMember value="true" sourceAttrName="
                '${#:targetTechnology}' != '' and 
                '${#:targetTechnology}' != 'ISDN'and 
                '${#:targetTechnology}' != 'ISDNP2P'"/>
        </OrComposite>          
        <OrComposite>
          <!-- new function -->
          <base:IsNotExisting sourceAttrName="*/pricingStructureCode/existing"/>                  
          <!-- tariff change -->
          <AndComposite>
            <base:IsExisting sourceAttrName="*/pricingStructureCode/configured"/>                  
            <base:IsMember value="true" sourceAttrName="*/pricingStructureCode/configured != */pricingStructureCode/existing"/>
          </AndComposite>
          <base:IsMember value="true" sourceAttrName="
                '${#:targetBandwidth}' != '' and 
                '${#:targetBandwidth}' != '${#:currentBandwidth}'"/>
        </OrComposite>          
	  </TemplateConditions>
	        
	  <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>        
	  <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
	  <RPMapping targetName="classification" sourceAttrName="#:customerClassification" />
	  <RPMapping targetName="customerCategory" sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/customerCategory" method="configuredExisting" />
        <RPMapping targetName="pricingStructureCode" sourceAttrName="*/pricingStructureCode" method="configuredExisting" />   
	  <RPMapping targetName="targetServiceCode" sourceAttrName="#:targetBandwidth" />
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsNotExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/existing/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	</RequestTemplate>      
	
	<!-- validate tariffs upstream bandwidth service, if it is about to be changed or recreated (Not ISDN) -->
	<RequestTemplate fif-request-name="validatePricingStructure" sourceWorkingPath="/*/*/functions/internet">
	  <TemplateConditions>
	    <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
	    <base:IsNotMember value="false" sourceAttrName="internal/validatePricingStructure"/>
        <base:IsMember value="false" sourceAttrName="*/upstreamBandwidth/@action = 'remove'" />        
        <base:IsMember value="true" sourceAttrName="'${#:targetUpstreamBandwidth}' != 'Standard'"/>
        <OrComposite>
          <base:IsMember value="true" sourceAttrName="
                '${#:targetTechnology}' = '' and 
                '${#:currentTechnology}' != 'ISDN'and 
                '${#:currentTechnology}' != 'ISDNP2P'"/>
          <base:IsMember value="true" sourceAttrName="
                '${#:targetTechnology}' != '' and 
                '${#:targetTechnology}' != 'ISDN'and 
                '${#:targetTechnology}' != 'ISDNP2P'"/>
        </OrComposite>          
        <OrComposite>
          <!-- new function -->
          <base:IsNotExisting sourceAttrName="*/pricingStructureCode/existing"/>                  
          <!-- tariff change -->
          <AndComposite>
            <base:IsExisting sourceAttrName="*/pricingStructureCode/configured"/>                  
            <base:IsMember value="true" sourceAttrName="*/pricingStructureCode/configured != */pricingStructureCode/existing"/>
          </AndComposite>
          <base:IsMember value="true" sourceAttrName="
                '${#:targetUpstreamBandwidth}' != '' and 
                '${#:targetUpstreamBandwidth}' != '${#:currentUpstreamBandwidth}'"/>
        </OrComposite>          
	  </TemplateConditions>
	        
	  <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>        
	  <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
	  <RPMapping targetName="classification" sourceAttrName="#:customerClassification" />
	  <RPMapping targetName="customerCategory" sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/customerCategory" method="configuredExisting" />
        <RPMapping targetName="pricingStructureCode" sourceAttrName="*/pricingStructureCode" method="configuredExisting" />   
	  <RPMapping targetName="targetServiceCode" sourceAttrName="#:targetUpstreamBandwidth" />
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsNotExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/existing/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	</RequestTemplate>      
	
	<!-- validate tariffs bandwidth service, if it is about to be changed or recreated (ISDN)-->
	<RequestTemplate fif-request-name="validatePricingStructure" sourceWorkingPath="/*/*/functions/voice">
	  <TemplateConditions>
	    <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
	    <base:IsNotMember value="false" sourceAttrName="internal/validatePricingStructure"/>
      <base:IsMember value="false" sourceAttrName="../internet/*/DSLBandwidth/@action = 'remove'" />        
      <OrComposite>
        <base:IsMember value="true" sourceAttrName="
              '${#:targetTechnology}' = '' and 
              ('${#:currentTechnology}' = 'ISDN' or 
              '${#:currentTechnology}' = 'ISDNP2P')"/>
        <base:IsMember value="true" sourceAttrName="
              '${#:targetTechnology}' = 'ISDN'"/>
        <base:IsMember value="true" sourceAttrName="
              '${#:targetTechnology}' = 'ISDNP2P'"/>
      </OrComposite>          
      <OrComposite>
        <base:IsMember value="isdn" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
        <base:IsMember value="isdnP2P" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
      </OrComposite> 
      <OrComposite>
        <!-- new function -->
        <base:IsNotExisting sourceAttrName="*/pricingStructureCode/existing"/>                  
        <!-- tariff change -->
        <AndComposite>
          <base:IsExisting sourceAttrName="*/pricingStructureCode/configured"/>                  
          <base:IsMember value="true" sourceAttrName="*/pricingStructureCode/configured != */pricingStructureCode/existing"/>
        </AndComposite>
        <base:IsMember value="true" sourceAttrName="
              '${#:targetBandwidth}' != '' and 
              '${#:targetBandwidth}' != '${#:currentBandwidth}'"/>
      </OrComposite>          
	  </TemplateConditions>
	        
	  <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>        
	  <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
	  <RPMapping targetName="classification" sourceAttrName="#:customerClassification" />
	  <RPMapping targetName="customerCategory" sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/customerCategory" method="configuredExisting" />
        <RPMapping targetName="pricingStructureCode" sourceAttrName="*/pricingStructureCode" method="configuredExisting" />   
	  <RPMapping targetName="targetServiceCode" sourceAttrName="#:targetBandwidth" />
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsNotExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/existing/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	</RequestTemplate>      
	
	<!-- validate tariffs upstream bandwidth service, if it is about to be changed or recreated (ISDN)-->
	<RequestTemplate fif-request-name="validatePricingStructure" sourceWorkingPath="/*/*/functions/voice">
	  <TemplateConditions>
	    <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
	    <base:IsNotMember value="false" sourceAttrName="internal/validatePricingStructure"/>
      <base:IsMember value="false" sourceAttrName="../internet/*/upstreamBandwidth/@action = 'remove'" />        
      <base:IsMember value="true" sourceAttrName="'${#:targetUpstreamBandwidth}' != 'Standard'"/>
      <OrComposite>
        <base:IsMember value="true" sourceAttrName="
              '${#:targetTechnology}' = '' and 
              ('${#:currentTechnology}' = 'ISDN' or 
              '${#:currentTechnology}' = 'ISDNP2P')"/>
        <base:IsMember value="true" sourceAttrName="
              '${#:targetTechnology}' = 'ISDN'"/>
        <base:IsMember value="true" sourceAttrName="
              '${#:targetTechnology}' = 'ISDNP2P'"/>
      </OrComposite>          
      <OrComposite>
        <base:IsMember value="isdn" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
        <base:IsMember value="isdnP2P" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
      </OrComposite> 
      <OrComposite>
        <!-- new function -->
        <base:IsNotExisting sourceAttrName="*/pricingStructureCode/existing"/>                  
        <!-- tariff change -->
        <AndComposite>
          <base:IsExisting sourceAttrName="*/pricingStructureCode/configured"/>                  
          <base:IsMember value="true" sourceAttrName="*/pricingStructureCode/configured != */pricingStructureCode/existing"/>
        </AndComposite>
        <base:IsMember value="true" sourceAttrName="
              '${#:targetUpstreamBandwidth}' != '' and 
              '${#:targetUpstreamBandwidth}' != '${#:currentUpstreamBandwidth}'"/>
      </OrComposite>          
	  </TemplateConditions>
	        
	  <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>        
	  <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
	  <RPMapping targetName="classification" sourceAttrName="#:customerClassification" />
	  <RPMapping targetName="customerCategory" sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/customerCategory" method="configuredExisting" />
        <RPMapping targetName="pricingStructureCode" sourceAttrName="*/pricingStructureCode" method="configuredExisting" />   
	  <RPMapping targetName="targetServiceCode" sourceAttrName="#:targetUpstreamBandwidth" />
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsNotExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/existing/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	</RequestTemplate>  
	
	<!--ITK-33592 Additional validation for fixedIPAddresstype in allocate step -->
	
	<RequestTemplate fif-request-name="validatePricingStructure" sourceWorkingPath="/*/*/functions/internet">
	  <TemplateConditions>
	    <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
	    <base:IsNotMember value="false" sourceAttrName="internal/validatePricingStructure"/> 
	    <!-- SPN-FIF-000133059 check existence of fixedIPAddressChangeType/configured tag -->
	    <OrComposite>
	    <AndComposite>
	    <base:IsExisting sourceAttrName="*/fixedIPAddressChangeType/configured"/> 
	    <OrComposite>
	    <base:IsMember value="Add" sourceAttrName="*/fixedIPAddressChangeType/configured"/> 
	    <base:IsMember value="Change" sourceAttrName="*/fixedIPAddressChangeType/configured"/>
	    <base:IsMember value="Ignore" sourceAttrName="*/fixedIPAddressChangeType/configured"/>
	    <base:IsMember value="Replace" sourceAttrName="*/fixedIPAddressChangeType/configured"/>
	    </OrComposite>
	    </AndComposite>
	    <AndComposite>
	    <base:IsExisting sourceAttrName="*/fixedIPAddress/existing"/>
	    <base:IsMember value="CHANGE" sourceAttrName="/*/*/functions/internet/processingType"/>
	    </AndComposite>
	    </OrComposite>
	    <!-- SPN-FIF-000133059 check existence of fixedIPAddressChangeType/configured tag --> 
	    <base:IsNotMember value="IGNORE" sourceAttrName="/*/*/functions/internet/processingType"/>    
	  </TemplateConditions>
	        
	  <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>        
	  <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
	  <RPMapping targetName="classification" sourceAttrName="#:customerClassification" />
	  <RPMapping targetName="customerCategory" sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/customerCategory" method="configuredExisting" />
      <RPMapping targetName="pricingStructureCode" sourceAttrName="*/pricingStructureCode" method="configuredExisting" />   
	  <RPMapping targetName="targetServiceCode"  sourceAttrName="#:targetTechnology" 
	  			 decoding="'ISDN', 'I104B', 
            			   'ISDNP2P', 'I104B',
            			   'BitStream','I1222',
            			   'NGN','I1222',
            			   'FTTx','I1222',
            			   'LTE','I1222'"/>
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsNotExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/existing/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	</RequestTemplate>   
	<!-- ITK-33592 Additional validation for fixedIPAddresstype in allocate step -->  
	
	<!-- validate that all mentioned tariff options are of proper serviceType -->      
      <RequestTemplate fif-request-name="validateTariffOptions"
        sourceWorkingPath="/*/*/functions/voice[@ID = '${#:mainVoiceFunctionID}']">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsNotMember value="false" sourceAttrName="internal/validateTariffOptions"/>
          <OrComposite>
            <base:IsExisting sourceAttrName="*/tariffOptionsList/configured" />
            <AndComposite>
              <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              <base:IsExisting sourceAttrName="*/tariffOptionsList/existing" />
            </AndComposite>                  
          </OrComposite>                
        </TemplateConditions>
        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="*/tariffOptionsList/configured" />
          </TemplateConditions>
          <RPListTemplate listName="tariffOptionsList">
            <RPListItemTemplate sourceWorkingPath="*/tariffOptionsList/existing/tariffOption/serviceCode">
              <RPMapping sourceAttrName="." targetName="serviceCode" />                    
            </RPListItemTemplate>
          </RPListTemplate>          
        </TransformationTemplate>                  
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="*/tariffOptionsList/configured" />
          </TemplateConditions>
          <RPListTemplate listName="tariffOptionsList">
            <RPListItemTemplate sourceWorkingPath="*/tariffOptionsList/configured/tariffOption/serviceCode">
              <RPMapping sourceAttrName="." targetName="serviceCode" />                    
            </RPListItemTemplate>
          </RPListTemplate>          
        </TransformationTemplate>                          
      </RequestTemplate> 
      
      <!-- IT-k-33954  Change ManualFee to Manual -->
	  <RequestTemplate fif-request-name="modifyMethodOfPayment"  sourceWorkingPath="/order/relocation | /order/lineChange">
		<TemplateConditions>
			<base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
			<OrComposite>
			<AndComposite>
				<base:IsMember value="true" sourceAttrName="count(//methodOfPayment/paymentMethod/configured) > 0" />
				<base:IsMember value="MANUAL_FEE" sourceAttrName="/*/*/billingAccount[@ID='${/*/*/payerAllCharges/billingAccountNodeRefID}']/methodOfPayment/paymentMethod/configured"/>
			</AndComposite>
			<AndComposite>
				<base:IsMember value="true" sourceAttrName="count(//methodOfPayment/paymentMethod/existing) > 0 and count(//methodOfPayment/paymentMethod/configured)= 0" />
				<base:IsMember value="MANUAL_FEE" sourceAttrName="/*/*/billingAccount[@ID='${/*/*/payerAllCharges/billingAccountNodeRefID}']/methodOfPayment/paymentMethod/existing"/>
			</AndComposite>
			</OrComposite>
			<OrComposite>
			<AndComposite>
				<base:IsExisting sourceAttrName="/order/lineChange"/>
				<OrComposite>
					<base:IsMember value="LineChange" sourceAttrName="customerIntention"/>
					<base:IsMember value="Winback" sourceAttrName="customerIntention"/>
					<base:IsMember value="SetTariffOptions" sourceAttrName="customerIntention"/>
				</OrComposite>
			</AndComposite>
				<base:IsExisting sourceAttrName="/order/relocation"/>
			</OrComposite>
		</TemplateConditions>
			<RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber"/>
			<RPMapping targetName="accountNumber" sourceAttrName="#:targetAccountNumber"/>
			<RPMapping targetName="paymentMethod" staticValue="MANUAL"/>
	</RequestTemplate>
	<!-- End of IT-k-33954 -->
			
      <RequestTemplate fif-request-name="validateReferenceData"
        sourceWorkingPath="/*/*/functions/hardware">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsNotMember value="false" sourceAttrName="internal/validateReferenceData"/>
          <OrComposite>
            <base:IsMember value="ADD" sourceAttrName="processingType" />
            <base:IsMember value="CHANGE" sourceAttrName="processingType" />
          </OrComposite>
          <base:IsMember value="true" sourceAttrName="count(*/conditionsList/*/*[conditionServiceType = 'HW']) > 0" />
          <base:IsMember value="false" sourceAttrName="*/conditionsList/@action = 'remove'" />
        </TemplateConditions>
        
        <RPMapping targetName="groupCode" staticValue="HW_ART_DES" />
        <RPMapping targetName="value" 
          sourceAttrName="*/articleNumber"
          method="configuredExisting" />
        <RPMapping targetName="errorText" sourceAttrName="concat(
          'Hardware ', @ID, ', which contains a hardware bundle service, has an articleNumber (', */articleNumber,  
          '), which is not defined for hardware bundle. See GENERAL_CODE_ITEM, GROUP_CODE = HW_ART_DES')" />
      </RequestTemplate>        
      
      <RequestTemplate fif-request-name="validateBlockingOrder"
        sourceWorkingPath="/*/*/functions/voice | /*/*/functions/internet | /*/*/functions/tvCenter | /*/*/functions/safetyPackage">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsNotMember value="false" sourceAttrName="internal/validateBlockingOrder"/>
          <base:IsExisting sourceAttrName="ccbId[@type = 'S']/existing" />
        </TemplateConditions>
          
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing" />                   

        <TransformationTemplate>
          <TemplateConditions>
	          <base:IsNotMember value="contractPartnerChange" sourceAttrName="name(../..)"/>
	          <OrComposite>
	            <AndComposite>
	              <base:IsMember value="internet" sourceAttrName="name(.)"/>
	              <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess"/>
	            </AndComposite>
	            <AndComposite>
	              <base:IsMember value="voice" sourceAttrName="name(.)"/>
	              <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
	            </AndComposite>
	            <AndComposite>
	              <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
	              <base:IsNotMember value="true" sourceAttrName="#:newTVCenterMainAccess"/>
	            </AndComposite>
	            <AndComposite>
	              <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
	            </AndComposite>
	          </OrComposite>
	          <OrComposite>
	            <AndComposite>
	              <base:IsExisting sourceAttrName="*/pricingStructureCode/configured" />
	              <base:IsMember value="true" sourceAttrName="*/pricingStructureCode/configured != */pricingStructureCode/existing" />
	            </AndComposite>
	            <AndComposite>
	              <base:IsExisting sourceAttrName="*/minimumDurationPeriod/value/configured" />
	              <base:IsMember value="true" sourceAttrName="*/minimumDurationPeriod/value/configured != */minimumDurationPeriod/value/existing" />
	            </AndComposite>
	            <AndComposite>
	              <base:IsExisting sourceAttrName="*/minimumDurationPeriod/unit/configured" />
	              <base:IsMember value="true" sourceAttrName="*/minimumDurationPeriod/unit/configured != */minimumDurationPeriod/unit/existing" />
	            </AndComposite>
	            <AndComposite>
	              <base:IsExisting sourceAttrName="*/minimumDurationPeriod/startDate/configured" />
	              <base:IsMember value="true" sourceAttrName="*/minimumDurationPeriod/startDate/configured != */minimumDurationPeriod/startDate/existing" />
	            </AndComposite>
	            <AndComposite>
	              <base:IsExisting sourceAttrName="*/autoExtension/value/configured" />
	              <base:IsMember value="true" sourceAttrName="*/autoExtension/value/configured != */autoExtension/value/existing" />
	            </AndComposite>
	            <AndComposite>
	              <base:IsExisting sourceAttrName="*/autoExtension/unit/configured" />
	              <base:IsMember value="true" sourceAttrName="*/autoExtension/unit/configured != */autoExtension/unit/existing" />
	            </AndComposite>
	            <AndComposite>
	              <base:IsExisting sourceAttrName="*/autoExtension/autoExtensionIndicator/configured" />
	              <base:IsMember value="true" sourceAttrName="*/autoExtension/autoExtensionIndicator/configured != */autoExtension/autoExtensionIndicator/existing" />
	            </AndComposite>
	          </OrComposite>
	      </TemplateConditions>
          <RPMapping targetName="productCommitmentNumber" sourceAttrName="productCommitmentNumber/existing" />     
	      <RPMapping targetName="validateProductCommitment" staticValue="Y" />
	    </TransformationTemplate>
      </RequestTemplate>        
      
      <!-- PPM155469 check, if billing has been been activated for product subscription -->
      <RequestTemplate fif-request-name="validateBillingActivated"
        sourceWorkingPath="/*/*/functions/*">       
        <TemplateConditions>
          <base:IsNotMember value="false" sourceAttrName="internal/validateBillingActivated"/>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsMember value="true" sourceAttrName="name() = 'internet' or name() = 'voice' or name() = 'tvCenter' or name() = 'safetyPackage'"/>
          <base:IsExisting sourceAttrName="ccbId[@type = 'S']/existing" />
	       <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:isTechnologyChange"/>
            <base:IsMember value="true" sourceAttrName="#:isBandwidthChange"/>
            <base:IsMember value="true" sourceAttrName="#:isProductTypeChange"/>
            <base:IsMember value="relocation" sourceAttrName="name(../..)"/>
            <base:IsMember value="contractPartnerChange" sourceAttrName="name(../..)"/>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']"         
                 method="configuredExisting"/>
      </RequestTemplate>

      <!-- check, if SOM is inconsistent - if voice has to configurations, 
        existing and configured elements have to be seperated (SPN-FIF-000125152) -->
      <RequestTemplate fif-request-name="raiseError"
        sourceWorkingPath="/*/*/functions/*[@ID = '${#:mainVoiceFunctionID}']">
        <TemplateConditions>
          <base:IsNotMember value="false" sourceAttrName="internal/validateAmbiguousConfiguration"/>
          <OrComposite>
            <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
            <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          </OrComposite>
          <base:IsMember value="targetProductTypeAmbiguous" sourceAttrName="#:targetProductTypeHelper"/>          
        </TemplateConditions>
        <RPMapping targetName="errorMessage" staticValue="voiceBasisConfiguration and voicePremiumConfiguration both contain configured elements making it ambiguous. Please cleanup before retrying." />
        <base:DataBufferWriter keyValue="errorRaised" staticValue="true" />
      </RequestTemplate>        
      <!-- SPN-FIF-000125152 end -->
      
      <!-- exeute step, which creates all the contracts and services in CCM -->
      <RequestTemplate fif-request-name="findBundle"
        sourceWorkingPath="/order/relocation | /order/lineCreation | /order/lineChange | /order/termination">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="ADD" sourceAttrName="functions/*/processingType"/>
            <base:IsMember value="CHANGE" sourceAttrName="functions/*/processingType"/>
            <base:IsMember value="TERM" sourceAttrName="functions/*/processingType"/>
          </OrComposite>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <OrComposite>
            <base:IsNotExisting
              sourceAttrName="/*/*/functions/otherFunction[@ID='${functions/hardware/refFunctionID/configured}']"/>
            <base:IsNotMember value="NOT_AVAILABLE"
              sourceAttrName="/*/*/functions/otherFunction[@ID='${functions/hardware/refFunctionID/configured}']/ccbId[@type='S']/existing"
            />
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="bundleId" 
          sourceAttrName="ccbId[@type = 'B']"
          method="configuredExisting" />        
        <RPMapping targetName="createBundle" 
          sourceAttrName="count(/*/*/functions/*/ccbId[@type = 'S']/configured) > 0" 
          decoding="'true', 'Y', 'N'" />
        
        <RPMapping targetName="amdocsOrderingIndicator" 
          sourceAttrName="aoMastered"
          method="configuredExisting" 
          decoding="'true', 'Y', 'false','N'" />         
        <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
        <RPListTemplate listName="serviceList">
          <RPListItemTemplate
            sourceWorkingPath="
            functions/*/ccbId[@type='S']/configured |
            accesses/*/ccbId[@type='S']/existing |
            functions/voice/ccbId[@type='S']/existing |
            functions/internet/ccbId[@type='S']/existing |
            functions/tvCenter/ccbId[@type='S']/existing |
            functions/safetyPackage/ccbId[@type='S']/existing">
            <RPMapping sourceAttrName="." targetName="serviceSubscriptionId"/>
          </RPListItemTemplate>
        </RPListTemplate>
               
        <base:Include fileIDRef="functionParameters" partIDRef="changeExternalOrder"/>                
        <base:Include fileIDRef="functionParameters" partIDRef="debugOutputParameters"/>
      </RequestTemplate>

      <RequestTemplate fif-request-name="findBundle"
        sourceWorkingPath="/order/contractPartnerChange">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="ADD" sourceAttrName="functions/*/processingType"/>
            <base:IsMember value="CHANGE" sourceAttrName="functions/*/processingType"/>
          </OrComposite>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        </TemplateConditions>
          
          <RPMapping targetName="amdocsOrderingIndicator" 
              sourceAttrName="aoMastered" 
              method="configuredExisting" 
              decoding="'true', 'Y', 'false', 'N'" />                             
        <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
        <RPListTemplate listName="serviceList">
          <RPListItemTemplate sourceWorkingPath="functions/*/ccbId[@type='S']/configured">
            <RPMapping sourceAttrName="." targetName="serviceSubscriptionId"/>
          </RPListItemTemplate>
        </RPListTemplate>
        
        <base:Include fileIDRef="functionParameters" partIDRef="changeExternalOrder"/>
        <base:Include fileIDRef="functionParameters" partIDRef="debugOutputParameters"/>
      </RequestTemplate>

      <!-- exeute step, which creates all the contracts and services in CCM -->
      <RequestTemplate fif-request-name="findBundle"
        sourceWorkingPath="/order/lineCreation | /order/lineChange | /order/relocation">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsNotExisting sourceAttrName="ccbId[@type = 'B']/existing"/>          
          <OrComposite>
            <base:IsNotMember value="lineChange" sourceAttrName="name(.)"/>
            <base:IsNotExisting sourceAttrName="/order/lineCreation"/>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="amdocsOrderingIndicator" 
          sourceAttrName="aoMastered"
          method="configuredExisting" 
          decoding="'true', 'Y', 'false','N'" />         
        <RPMapping targetName="createBundle" 
          sourceAttrName="#:ccbIdAllocated" 
          decoding="'true', 'Y', 'N'" />
                 
        <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
        <RPListTemplate listName="serviceList">
          <RPListItemTemplate
            sourceWorkingPath="
            accesses/*/ccbId[@type='S']/existing |
            functions/voice/ccbId[@type='S']/existing |
            functions/internet/ccbId[@type='S']/existing">
            <RPMapping sourceAttrName="." targetName="serviceSubscriptionId"/>
          </RPListItemTemplate>
        </RPListTemplate>
        <base:Include fileIDRef="functionParameters" partIDRef="debugOutputParameters"/>        
      </RequestTemplate>
     
      <RequestTemplate fif-request-name="findBundle"
        sourceWorkingPath="/order/contractPartnerChange">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
        </TemplateConditions>
        <RPMapping targetName="amdocsOrderingIndicator" 
          sourceAttrName="aoMastered"
          method="configuredExisting" 
          decoding="'true', 'Y', 'false','N'" />         
        <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />        
      </RequestTemplate>
      
      <!-- sets the T flag on bundle items which are supposed to be terminated with this order -->
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/internet"
        extends="modifyBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/voice[@ID = '${#:mainVoiceFunctionID}']"
        extends="modifyBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/tvCenter[@refAccessID='${#:currentMainAccessID}']"
        extends="modifyBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:newTVCenterMainAccess"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/safetyPackage"
        extends="modifyBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
            <AndComposite>
              <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
              <base:IsMember value="contractPartnerChange" sourceAttrName="name(../..)"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      

      <RequestTemplate fif-request-name="getContractDates" 
        sourceWorkingPath="/*/*/functions/tvCenter | /*/*/functions/voice | /*/*/functions/internet | /*/*/functions/safetyPackage">
        <TemplateConditions>         
          <base:IsMember value="allocate" sourceAttrName="/*/*/transactionType" />
          <base:IsNotExisting sourceAttrName="*/contractExpirationDate/configured" />
        </TemplateConditions>
        
        <RPMapping targetName="functionID" sourceAttrName="@ID" />        
        <RPMapping targetName="minPeriodDurationValue"
          sourceAttrName="*/minimumDurationPeriod/value"
          method="configuredExisting" />
        <RPMapping targetName="minPeriodDurationUnit"
          sourceAttrName="*/minimumDurationPeriod/unit"
          method="configuredExisting" />
        <RPMapping targetName="autoExtentPeriodValue"
          sourceAttrName="*/autoExtension/value"
          method="configuredExisting" />
        <RPMapping targetName="autoExtentPeriodUnit"
          sourceAttrName="*/autoExtension/unit"
          method="configuredExisting" />
        <RPMapping targetName="autoExtensionInd"
          sourceAttrName="*/autoExtension/autoExtensionIndicator"
          method="configuredExisting"
          decoding="'true', 'Y', 'N'" />
        
        <!-- cases where createFunctions will be used
              - desiredDate, if startDate/configured is not provided -->
        <TransformationTemplate>
          <TemplateConditions>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="internet" sourceAttrName="name(.)"/>
                <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>              
              </AndComposite>
              <AndComposite>
                <base:IsMember value="voice" sourceAttrName="name(.)"/>
                <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>              
              </AndComposite>
              <AndComposite>
                <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
                <base:IsMember value="true" sourceAttrName="#:newTVCenterMainAccess"/>              
              </AndComposite>
              <AndComposite>
                <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
                <base:IsMember value="ADD" sourceAttrName="processingType"/>              
              </AndComposite>
            </OrComposite>
          </TemplateConditions>                   
          <TransformationTemplate>
            <TemplateConditions>
              <base:IsNotExisting sourceAttrName="*/minimumDurationPeriod/startDate/configured" />
            </TemplateConditions>
            <RPMapping targetName="minPeriodDurationStartDate" 
              sourceAttrName="../../desiredDate"
              formatter="SOMToCCBDateFormatter"/>                    
          </TransformationTemplate>
          <TransformationTemplate>
            <TemplateConditions>
              <base:IsExisting sourceAttrName="*/minimumDurationPeriod/startDate/configured" />
            </TemplateConditions>
            <RPMapping targetName="minPeriodDurationStartDate" 
              sourceAttrName="*/minimumDurationPeriod/startDate/configured"
              formatter="SOMToCCBDateFormatter"/>
          </TransformationTemplate>                  
        </TransformationTemplate>
          
        <!-- cases where modifyContract will be used -->          
        <TransformationTemplate>
          <TemplateConditions>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="internet" sourceAttrName="name(.)"/>
                <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess"/>              
              </AndComposite>
              <AndComposite>
                <base:IsMember value="voice" sourceAttrName="name(.)"/>
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>              
              </AndComposite>
              <AndComposite>
                <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
                <base:IsNotMember value="true" sourceAttrName="#:newTVCenterMainAccess"/>              
              </AndComposite>
              <AndComposite>
                <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
                <base:IsNotMember value="ADD" sourceAttrName="processingType"/>              
              </AndComposite>
            </OrComposite>
          </TemplateConditions>                   
          <TransformationTemplate>
            <TemplateConditions>
              <base:IsNotExisting sourceAttrName="*/minimumDurationPeriod/startDate/existing" />
              <base:IsNotExisting sourceAttrName="*/minimumDurationPeriod/startDate/configured" />
            </TemplateConditions>
            <RPMapping targetName="minPeriodDurationStartDate" staticValue="today"/>                    
          </TransformationTemplate>
          <TransformationTemplate>
            <TemplateConditions>
              <OrComposite>
	            <base:IsExisting sourceAttrName="*/minimumDurationPeriod/startDate/existing" />
	            <base:IsExisting sourceAttrName="*/minimumDurationPeriod/startDate/configured" />
              </OrComposite>
            </TemplateConditions>
            <RPMapping targetName="minPeriodDurationStartDate" 
              sourceAttrName="*/minimumDurationPeriod/startDate"
              method="configuredExisting"
              formatter="SOMToCCBDateFormatter"/>
          </TransformationTemplate>        
        </TransformationTemplate>
      </RequestTemplate>      

      <!-- reset the bundle future indicator in case of a cancellation -->
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/internet"
        extends="resetBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
          </OrComposite>          
        </TemplateConditions>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/voice[@ID = '${#:mainVoiceFunctionID}']"
        extends="resetBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/tvCenter[@refAccessID='${#:currentMainAccessID}']"
        extends="resetBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:newTVCenterMainAccess"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/safetyPackage"
        extends="resetBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
            <AndComposite>
              <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
              <base:IsMember value="contractPartnerChange" sourceAttrName="name(../..)"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      

      <!-- *********************** Create Contact for future HW *********************** -->
      <RequestTemplate fif-request-name="createContact" sourceWorkingPath="/*/*/*/hardware">
        <TemplateConditions>
          <base:IsExisting
            sourceAttrName="/*/*/functions/otherFunction[@ID='${refFunctionID/configured}']"/>
          <base:IsMember value="NOT_AVAILABLE"
            sourceAttrName="/*/*/functions/otherFunction[@ID='${refFunctionID/configured}']/ccbId[@type='S']/existing"
          />
        </TemplateConditions>

        <RPMapping targetName="customerNumber"
          sourceAttrName="/*/customerData/customer[@ID='${../../beneficiary/customerNodeRefID}']/ccbId[@type='C']/*"/>
        <RPMapping targetName="contactType" staticValue="STANDALONE_HW"/>
        <RPMapping targetName="shortDescription" staticValue="Hardware creation trigger"/>
        <RPMapping targetName="longDescription"
          sourceAttrName="concat(
          'hardwareServiceCode : ' , */hardwareServiceCode/existing
          ,' hardwareType : ' , */hardwareType/existing
          ,' articleNumber : ' , */articleNumber/existing
          ,' articleName : ' , */articleName/existing
          ,' serialNumber : ' , */serialNumber/existing
          ,' orderReason : ' , */orderReason/existing
          ,' subventionCode : ' , */subventionCode/existing
          ,' zeroChargeIndicator : ' , */zeroChargeIndicator/existing
          ,' shippingCosts : ' , */shippingCosts/existing
          ,' salutationDescription : ' , */salutationDescription/existing
          ,' forename : ' , */forename/existing
          ,' name : ' , */name/existing
          ,' remarks : ' , */remarks/existing
          ,' simSerialNumber : ' , */simSerialNumber/existing
          ,' imei : ' , */imei/existing
          ,' sapActionCode : ' , */sapActionCode/existing
          ,' compensationFeeIndicator : ' , */compensationFeeIndicator/existing
          ,' sapOrderId : ' , */sapOrderId/existing
          ,' deliveryNoteNumber : ' , */deliveryNoteNumber/existing
          ,' deliveryDate : ' , */deliveryDate/existing
          ,' deliveryCompany : ' , */deliveryCompany/existing
          ,' defectCode : ' , */defectCode/existing
          ,' defectText : ' , */defectText/existing
          ,' simSwapReason : ' , */simSwapReason/existing)"
        />
      </RequestTemplate>

      <!-- *********************** LINE CREATION START *********************** -->
      
      <!-- implicit termination, order position = lineChange -->
      <RequestTemplate fif-request-name="terminateFunction"
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/safetyPackage | /*/lineCreation/*/tvCenter | /*/lineCreation/*/extraLine"
        extends="terminateFunction_template"/>
      
      <!-- exeute step, which creates all the contracts and services in CCM -->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/lineCreation/functions/internet"
        extends="InternetCreation_template"/>       
      
      <!-- fixed IP address -->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/lineCreation/*/internet"
        extends="fixedIPAddress_template" />
      
      <!-- exeute step, which actviates billing for the internet function-->
      <RequestTemplate fif-request-name="activateBilling"
        sourceWorkingPath="/*/lineCreation/functions/internet"
        extends="activateBilling_template"/>       

      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/lineCreation/functions/voice" 
        extends="VoiceCreation_template"/>      
      
      <RequestTemplate fif-request-name="addChildService"
        sourceWorkingPath="/*/lineCreation/functions/extraLine" 
        extends="ExtraLineCreation_template"/>      
      
      <!-- exeute step, which actviates billing for the voice function-->
      <RequestTemplate fif-request-name="activateBilling"
        sourceWorkingPath="/*/lineCreation/functions/voice"
        extends="activateBilling_template"/>       

      <!-- Create Function TV Center-->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/lineCreation/functions/tvCenter"
        extends="TVCenterCreation_template"/> 

      <!-- exeute step, which actviates billing for the tvCenter function-->
      <RequestTemplate fif-request-name="activateBilling"
        sourceWorkingPath="/*/lineCreation/functions/tvCenter"
        extends="activateBilling_template"/>       

      <!-- reconfiguration of voice function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineCreation/*/voice" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            voicePremiumConfiguration/* |
            voiceBasisConfiguration/* |
            */portingAccessNumbers/* | 
            */portingAccessNumberRanges/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="isdnInternetParameters"/>
          <base:Include fileIDRef="functionParameters" partIDRef="instantAccessForReconfiguration"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>
        </RPListTemplate>
      </RequestTemplate>
                  
      <!-- reconfiguration of extraLine function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineCreation/*/extraLine" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="extraS0LineConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineCreation/*/internet" extends="reconfigureFunctionInternet_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            adslInternetConfiguration/* |
            fttxInternetConfiguration/* |
            fibreInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>          
          <base:Include fileIDRef="functionParameters" partIDRef="lteProcessingType"/>
          <base:Include fileIDRef="functionParameters" partIDRef="instantAccessForReconfiguration"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>         
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineCreation/*/tvCenter" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            tvCenterBundledConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of directory entry -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineCreation/*/directoryEntry" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="directoryEntryConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
              
      <!-- setting of DTAG parameters only when changing from precompletedCCM to completedOPM --> 
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineCreation/*/voice | 
        /*/lineCreation/*/internet | 
        /*/lineCreation/*/extraLine |
        /*/lineCreation/*/directoryEntry" 
        extends="reconfigureFunctionPrecompleted_template">
      </RequestTemplate>            
      
      <!-- creation of Arcor Mobile (via OP) -->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/lineCreation/*/voice" 
        extends="MobileCreation_template"/>
      
      <!-- safety package -->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/lineCreation/*/safetyPackage" 
        extends="safetyPackageCreation_template"/>
      
      <!-- exeute step, which actviates billing for the safetyPackage function-->
      <RequestTemplate fif-request-name="activateBilling"
        sourceWorkingPath="/*/lineCreation/functions/safetyPackage"
        extends="activateBilling_template"/>       

      <!-- features -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/tvCenter"
        extends="modifyFeaturesFeatures_template"/>
        
        <!-- volumeCap -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/lineCreation/*/internet"
        extends="modifyFeaturesVolumeCap_template"/>
        
        <!-- volumeCap based on bandwidth -->
        <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/lineCreation/*/internet"
        extends="modifyFeaturesVolumeCapWithBandwidth_template"/>
      
      <!-- charges and credits -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/tvCenter"
        extends="modifyFeaturesChargesAndCredits_template"/>
      
      <!-- serviceLevel -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/tvCenter"
        extends="modifyFeaturesServiceLevel_template"/>
      
      <!-- serviceLevelLegal -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/tvCenter"
        extends="modifyFeaturesServiceLevelLegal_template"/>
      
      <!-- IPV6 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet"
        extends="modifyFeaturesIPV6_template"/>
      
      <!-- desired countries -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice"
        extends="modifyFeaturesCountries_template"/>

      <!-- tariff options -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/safetyPackage | /*/lineCreation/*/tvCenter"
        extends="modifyFeaturesTariffOptions_template"/>

        <!-- TV Center Options -->
        <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/tvCenter"
        extends="modifyFeaturesTVCenterOptions_template"/>
        
      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice"
        extends="modifyFeaturesConditions_template"/>

      <!-- access number blocking -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/voice"
        extends="modifyFeaturesBlockingServices_template"/>
      
      <!-- IT-27749 installation fees -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/tvCenter"
        extends="modifyFeaturesInstallationFees_template"/>
      
      <!-- VDSL Vectoring - setup fee for DSL 100.000 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet"
        extends="modifyFeaturesVDSLSetupFee_template"/>

      <!-- installation service -->
      <RequestTemplate fif-request-name="addInstallationService"
        sourceWorkingPath="/*/lineCreation/*/installationSvc" extends="installationService_template"/>

      <!-- hardware service -->
      <RequestTemplate fif-request-name="addHardwareService"
        sourceWorkingPath="/*/lineCreation/*/hardware" 
        extends="hardwareService_template"/>

      <!-- directory entry -->
      <RequestTemplate fif-request-name="createDirectoryEntry"
        sourceWorkingPath="/*/lineCreation/*/directoryEntry" extends="directoryEntry_template"/>

      <!-- instant access  -->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/lineCreation/*/instantAccess"
        extends="instantAccess_template" />
      
      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/lineCreation/*/safetyPackage | /*/lineCreation/*/hardware | /*/lineCreation/*/tvCenter"
        extends="modifyFeaturesConditions_template"/>
      
      <!-- DSL bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice[@ID = '${#:mainVoiceFunctionID}']" 
        extends="modifyFeaturesDSLBandwidth_template"/>
      
      <!-- DSL upstream bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice[@ID = '${#:mainVoiceFunctionID}']" 
        extends="modifyFeaturesDSLUpstreamBandwidth_template"/>
            
      <!-- fibre fee -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet" 
        extends="modifyFeaturesFibreFee_template"/>

      <!-- activations of customer orders termination -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="/*/lineCreation/*/voice |
        /*/lineCreation/*/extraLine |
        /*/lineCreation/*/internet |
        /*/lineCreation/*/safetyPackage |
        /*/lineCreation/*/tvCenter"
        extends="activateCustomerOrder_template">
        <TemplateConditions>
          <base:IsMember value="ADD" sourceAttrName="processingType"/>
        </TemplateConditions>
        <RPMapping staticValue="Y" targetName="isMovedService"/>
      </RequestTemplate>

      <!-- activate the services without OP -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="/*/lineCreation/*/voice |
        /*/lineCreation/*/extraLine |
        /*/lineCreation/*/internet |
        /*/lineCreation/*/hardware |
        /*/lineCreation/*/installationSvc |
        /*/lineCreation/*/safetyPackage |
        /*/lineCreation/*/tvCenter |
        /*/lineCreation/*/instantAccess |
        /*/lineCreation/*/directoryEntry"
        extends="activateCustomerOrder_template">
        <TemplateConditions>
          <base:IsMember value="ADD" sourceAttrName="processingType"/>
        </TemplateConditions>

      </RequestTemplate>
      
      <!-- *********************** LINE CREATION END *********************** -->

      <!-- *********************** LINE CHANGE START *********************** -->

      <!-- implicit termination, order position = lineChange -->
      <RequestTemplate fif-request-name="terminateFunction"
        sourceWorkingPath="
        /*/lineChange/*/internet | /*/lineChange/*/voice | /*/lineChange/*/safetyPackage | 
        /*/lineChange/*/tvCenter | /*/lineChange/*/hardware | /*/lineChange/*/directoryEntry | 
        /*/lineChange/*/extraLine | /*/lineChange/*/mobileUsage"
        extends="terminateFunction_template"/>
        
      <!-- terminate Arcor Mobile bypassing OP -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/lineChange/*/voice"
        extends="terminateFunctionMobile_template"/>

      <!-- contract change, will be called, if any contract parameter is changed -->
      <RequestTemplate fif-request-name="modifyContract"
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/tvCenter | /*/lineChange/*/safetyPackage"
        extends="modifyContract_template"/> 

      <!-- create new PS, if needed -->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/lineChange/functions/internet" 
        extends="InternetCreation_template"/>      

      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/lineChange/functions/voice" 
        extends="VoiceCreation_template"/>      

      <RequestTemplate fif-request-name="addChildService"
        sourceWorkingPath="/*/lineChange/functions/extraLine" 
        extends="ExtraLineCreation_template"/>      
      
      <!-- Create Function TV Center-->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/order/lineChange/functions/tvCenter" extends="TVCenterCreation_template"> </RequestTemplate>
      
      <!-- validate main access for deactivating call forwarding-->
      <RequestTemplate fif-request-name="validateMainAccess" 
        sourceWorkingPath="/*/lineChange/*/voice[@ID = '${#:mainVoiceFunctionID}']">
        <TemplateConditions>
          <base:IsNotMember value="false" sourceAttrName="internal/validateMainAccess"/>
          <base:IsExisting sourceAttrName="*/callForwarding"/>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <base:IsMember value="DEACTIVATE" sourceAttrName="*/callForwarding/action" />
          <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId" />
          <base:IsNotMember value="TERM" sourceAttrName="processingType" />
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing"/>
      </RequestTemplate>
      
      <!-- reconfiguration of voice function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/voice" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            voicePremiumConfiguration/* |
            voiceBasisConfiguration/* |
            */portingAccessNumbers/* | 
            */portingAccessNumberRanges/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="isdnInternetParameters"/>
          <base:Include fileIDRef="functionParameters" partIDRef="instantAccessForReconfiguration"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>          
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of extraLine function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/extraLine" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="extraS0LineConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of DSL service -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/voice[@ID = '${#:mainVoiceFunctionID}']" 
        extends="reconfigureFunction_template">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="ISDN" sourceAttrName="#:currentTechnology" />
            <base:IsMember value="ISDNP2P" sourceAttrName="#:currentTechnology" />
          </OrComposite>
          <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
          <base:IsExisting sourceAttrName="../internet/*/DSLBandwidth"/>
          <base:IsNotMember value="true" sourceAttrName="#:isDSLUpgrade"/>
          <base:IsNotMember value="true" sourceAttrName="#:isDSLDowngrade"/>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:isBandwidthChange"/>
            <base:IsMember value="true" sourceAttrName="#:isUpstreamBandwidthChange"/>
          </OrComposite>
        </TemplateConditions>        
        <RPMapping targetName="childServiceCode" staticValue="V0113"/>
        <RPMapping targetName="alternativeChildServiceCode" staticValue="V0088"/>
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="../internet/adslInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- creation of V0113 in DSLUpgrade -->
      <RequestTemplate fif-request-name="addChildService"
        sourceWorkingPath="/*/lineChange/*/voice[@ID = '${#:mainVoiceFunctionID}']">
        <TemplateConditions>
          <base:IsMember value="true" sourceAttrName="#:isDSLUpgrade"/>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures" />
          <OrComposite>
            <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology" />
            <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology" />
          </OrComposite>
        </TemplateConditions>        
        <RPMapping targetName="serviceCode" staticValue="V0113" />
        <RPMapping targetName="processingStatus" staticValue="completedOPM" />
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing"/>
        <RPMapping targetName="functionID" sourceAttrName="@ID" />
        <base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberTermination"/>               
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="../internet/adslInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
           
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/internet" extends="reconfigureFunctionInternet_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            adslInternetConfiguration/* |
            fttxInternetConfiguration/* |
            fibreInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="lteProcessingType"/>          
          <base:Include fileIDRef="functionParameters" partIDRef="instantAccessForReconfiguration"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>          
        </RPListTemplate>
      </RequestTemplate>

      <!-- Hardware reconfiguration (e.g. add a new SIM card) -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/hardware" extends="reconfigureFunction_template">
        <RPMapping targetName="serviceCode" sourceAttrName="*/hardwareServiceCode/existing"/>
        <RPMapping targetName="reason" staticValue="AEND"/>
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="hardwareConfiguration/* |
            rentedHardwareConfiguration/* |
            */hardwareDelivery/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/tvCenter" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            tvCenterBundledConfiguration/* ">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/safetyPackage" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="safetyPackageConfiguration/* ">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of directory entry -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/directoryEntry" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="directoryEntryConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of mobileUsage -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/mobileUsage" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="mobileUsageConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
            
      <!-- setting of DTAG parameters only when changing from precompletedCCM to completedOPM --> 
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineChange/*/voice | 
        /*/lineChange/*/internet | 
        /*/lineChange/*/extraLine |
        /*/lineChange/*/directoryEntry" 
        extends="reconfigureFunctionPrecompleted_template">
      </RequestTemplate>            
            
      <!-- creation of Arcor Mobile (via OP) -->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/lineChange/*/voice" 
        extends="MobileCreation_template"/>
        
      <!-- new objects from ADD -->

      <!-- safetyPackage -->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/lineChange/*/safetyPackage" extends="safetyPackageCreation_template">
        <TemplateConditions>
          <base:IsMember value="ADD" sourceAttrName="processingType"/>
        </TemplateConditions>
      </RequestTemplate>

      <!-- installation service -->
      <RequestTemplate fif-request-name="addInstallationService"
        sourceWorkingPath="/*/lineChange/*/installationSvc" extends="installationService_template"/>

      <!-- hardware service -->
      <RequestTemplate fif-request-name="addHardwareService"
        sourceWorkingPath="/*/lineChange/*/hardware" 
        extends="hardwareService_template"/>      

      <!-- features -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/tvCenter"
        extends="modifyFeaturesFeatures_template"/>
      
      <!-- volumeCap -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/lineChange/*/internet"
        extends="modifyFeaturesVolumeCap_template"/>
        
      <!-- volumeCap based on bandwidth -->
        <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/lineChange/*/internet"
        extends="modifyFeaturesVolumeCapWithBandwidth_template"/>
        
        
      <!-- charges and credits -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/tvCenter"
        extends="modifyFeaturesChargesAndCredits_template"/>
      
      <!-- serviceLevel -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/tvCenter"
        extends="modifyFeaturesServiceLevel_template"/>
      
      <!-- serviceLevelLegal -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/tvCenter"
        extends="modifyFeaturesServiceLevelLegal_template"/>
      
      <!-- IPV6 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/internet"
        extends="modifyFeaturesIPV6_template"/>
      
      <!-- desired countries -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet"
        extends="modifyFeaturesCountries_template"/>

      <!-- tariff options -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet  | /*/lineChange/*/safetyPackage | /*/lineChange/*/tvCenter"
        extends="modifyFeaturesTariffOptions_template"/>

      <!-- callForwarding -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/voice"
        extends="modifyFeaturesCallForwarding_template"/>
        
      <!-- TV Center Options -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/tvCenter"
        extends="modifyFeaturesTVCenterOptions_template"/>

      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/safetyPackage | /*/lineChange/*/hardware | /*/lineChange/*/tvCenter"
        extends="modifyFeaturesConditions_template"/>

      <!-- access number blocking -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/voice" extends="modifyFeaturesBlockingServices_template"/>

      <!-- DSL bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/internet | /*/lineChange/*/voice[@ID = '${#:mainVoiceFunctionID}']" 
        extends="modifyFeaturesDSLBandwidth_template"/>
      
      <!-- DSL upstream bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/internet | /*/lineChange/*/voice[@ID = '${#:mainVoiceFunctionID}']" 
        extends="modifyFeaturesDSLUpstreamBandwidth_template"/>
      
      <!-- fibre fee -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/internet" 
        extends="modifyFeaturesFibreFee_template"/>

      <!-- IT-27749 installation fees -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/tvCenter"
        extends="modifyFeaturesInstallationFees_template"/>
      
      <!-- VDSL Vectoring - setup fee for DSL 100.000 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/internet"
        extends="modifyFeaturesVDSLSetupFee_template"/>
      
      <!-- removal of DSL services -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/voice[@ID = '${#:mainVoiceFunctionID}']"
        extends="modifyFeatures_template">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="ISDN" sourceAttrName="#:currentTechnology" />
            <base:IsMember value="ISDNP2P" sourceAttrName="#:currentTechnology" />
          </OrComposite>
          <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess" />
          <base:IsMember value="true" sourceAttrName="#:isDSLDowngrade" />
        </TemplateConditions>        
        <RPMapping targetName="action" staticValue="remove"/>
        <RPListTemplate listName="existingServiceList">
          <RPListItemTemplate>
            <RPMapping targetName="serviceCode" staticValue="V0113"/>
            <RPMapping targetName="alternativeServiceCode" staticValue="V0088"/>
          </RPListItemTemplate>
          <RPListItemTemplate>
            <RPMapping targetName="serviceCode" sourceAttrName="../internet/*/DSLBandwidth/existing"/>
          </RPListItemTemplate>
        </RPListTemplate>      
        <base:DataBufferWriter keyValue="listType" staticValue="DSLBandwidth" />
        <RPMapping targetName="listType" sourceAttrName="#:listType" />
		<base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>
      </RequestTemplate>
      
      <!-- removal of fixed IP address -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/internet"
        extends="modifyFeatures_template">
        <TemplateConditions>
          <base:IsMember value="Remove" sourceAttrName="*/fixedIPAddressChangeType/configured" />
          <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess" />
          <base:IsNotMember value="TERM" sourceAttrName="processingType" />
        </TemplateConditions>
        <TransformationTemplate>
			<RPListTemplate listName="existingServiceList">
          		<RPListItemTemplate>
            		<RPMapping targetName="serviceCode" sourceAttrName="#:currentTechnology" 
            			decoding="'ISDN', 'I104B', 
            					  'ISDNP2P', 'I104B',
            					  'BitStream','I1222',
            					  'NGN','I1222',
            					  'LTE','I1222'"/>
          		</RPListItemTemplate>
        	</RPListTemplate>
	  	</TransformationTemplate>
        <RPMapping targetName="action" staticValue="remove"/>
        <base:DataBufferWriter keyValue="listType" staticValue="fixedIPAddress" />
        <RPMapping targetName="listType" sourceAttrName="#:listType" />
		<base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>
      </RequestTemplate>
      
      <!-- reconfiguration of fixed IP address -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineChange/*/internet" 
        extends="reconfigureFunction_template">
        <TemplateConditions>
          <base:IsMember value="Replace" sourceAttrName="*/fixedIPAddressChangeType/configured" />
          <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess" />
          <base:IsMember value="CHANGE" sourceAttrName="processingType" />
        </TemplateConditions>
		<RPMapping targetName="childServiceCode" sourceAttrName="#:currentTechnology" 
				   decoding="'ISDN', 'I104B', 
            				 'ISDNP2P', 'I104B',
            				 'BitStream','I1222',
            				 'NGN','I1222',
            				 'LTE','I1222'"/>
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="adslInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>      
      
      <!-- fixed IP address -->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/lineChange/*/internet"
        extends="fixedIPAddress_template" />
        
      <!-- mobile usage -->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/lineChange/*/mobileUsage"
        extends="MobileUsage_template" />
            
      <!-- directory entry -->
      <RequestTemplate fif-request-name="createDirectoryEntry"
        sourceWorkingPath="/*/lineChange/*/directoryEntry" extends="directoryEntry_template"/>
            
      <!-- instant access  -->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/lineChange/*/instantAccess"
        extends="instantAccess_template" />
      
      <!-- second part of modifyContract, applying the new pricing structure (IT-k-31087) -->
      <RequestTemplate fif-request-name="modifyContractApply"
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/tvCenter | /*/lineChange/*/safetyPackage"
        extends="modifyContract_template"/> 
            
      <!-- contributingItems for desiredCountries after a tariffChange, which can only be created after apply -->
      <RequestTemplate fif-request-name="createContributingItems"
        sourceWorkingPath="/*/lineChange/*/voice[@ID = '${#:mainVoiceFunctionID}']"
        extends="modifyFeaturesCountries_template">
        <TemplateConditions>
			<base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess" />
			<base:IsMember value="true" sourceAttrName="*/pricingStructureCode/existing != */pricingStructureCode/configured" />
        </TemplateConditions>
      </RequestTemplate>

      <!-- contributingItems for tariff options after a tariffChange, which can only be created after apply -->
      <RequestTemplate fif-request-name="createContributingItems"
        sourceWorkingPath="/*/lineChange/*/voice[@ID = '${#:mainVoiceFunctionID}']"
        extends="modifyFeaturesTariffOptions_template">
        <TemplateConditions>
			<base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess" />
			<base:IsMember value="true" sourceAttrName="*/pricingStructureCode/existing != */pricingStructureCode/configured" />
        </TemplateConditions>
      </RequestTemplate>
            
      <!-- activations of customer orders termination -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="/*/lineChange/*/voice |
        /*/lineChange/*/extraLine |
        /*/lineChange/*/internet |
        /*/lineChange/*/safetyPackage |
        /*/lineChange/*/tvCenter |
        /*/lineChange/*/mobileUsage"
        extends="activateCustomerOrder_template">
        <RPMapping staticValue="Y" targetName="isMovedService"/>
      </RequestTemplate>
      
      <!-- activations of customer orders -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="/*/lineChange/*/voice |
        /*/lineChange/*/extraLine |
        /*/lineChange/*/internet |
        /*/lineChange/*/hardware |
        /*/lineChange/*/installationSvc |
        /*/lineChange/*/safetyPackage | 
        /*/lineChange/*/tvCenter |
        /*/lineChange/*/instantAccess |
        /*/lineChange/*/directoryEntry|
        /*/lineChange/*/mobileUsage"
        extends="activateCustomerOrder_template">
        <TemplateConditions>
          <OrComposite>
            <base:IsNotExisting
              sourceAttrName="/*/*/functions/otherFunction[@ID='${refFunctionID/configured}']"/>
            <base:IsNotMember value="NOT_AVAILABLE"
              sourceAttrName="/*/*/functions/otherFunction[@ID='${refFunctionID/configured}']/ccbId[@type='S']/existing"
            />
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>
      
      <!-- LINE CHANGE END ********************************************************************************************** -->

      <!-- RELOCATION START ********************************************************************************************* -->
      <RequestTemplate fif-request-name="terminateFunction"
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice | 
        /*/relocation/*/safetyPackage | /*/relocation/*/tvCenter | 
        /*/relocation/*/hardware | /*/relocation/*/extraLine |
        /*/relocation/*/mobileUsage"
        extends="terminateFunction_template"/>
      
      <!-- terminate Arcor Mobile bypassing OP -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/relocation/*/voice"
        extends="terminateFunctionMobile_template"/>
      
      <!-- contract change, will be called, if any contract parameter is changed -->
      <RequestTemplate fif-request-name="modifyContract"
        sourceWorkingPath="/*/relocation/*/safetyPackage"
        extends="modifyContract_template"/> 

      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/relocation/*/internet" 
        extends="InternetCreation_template"/>
      
      <!-- exeute step, which actviates billing for the internet function-->
      <RequestTemplate fif-request-name="activateBilling"
        sourceWorkingPath="/*/relocation/functions/internet"
        extends="activateBilling_template"/>       

      <!-- fixed IP address -->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/relocation/*/internet"
        extends="fixedIPAddress_template" />
        
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/relocation/*/voice"
        extends="VoiceCreation_template"/>
        
      <!-- exeute step, which actviates billing for the voice function-->
      <RequestTemplate fif-request-name="activateBilling"
        sourceWorkingPath="/*/relocation/functions/voice"
        extends="activateBilling_template"/>       


      <RequestTemplate fif-request-name="addChildService"
        sourceWorkingPath="/*/relocation/*/extraLine" 
        extends="ExtraLineCreation_template"/>      
      
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/relocation/*/tvCenter" 
        extends="TVCenterCreation_template"/>

      <!-- exeute step, which actviates billing for the tvCenter function-->
      <RequestTemplate fif-request-name="activateBilling"
        sourceWorkingPath="/*/relocation/functions/tvCenter"
        extends="activateBilling_template"/>       

      <!-- reconfiguration of voice function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/relocation/*/voice" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            voicePremiumConfiguration/* |
            voiceBasisConfiguration/* |
            */portingAccessNumbers/* | 
            */portingAccessNumberRanges/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="isdnInternetParameters"/>
          <base:Include fileIDRef="functionParameters" partIDRef="instantAccessForReconfiguration"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>          
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of extraLine function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/relocation/*/extraLine" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="extraS0LineConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/relocation/*/internet" extends="reconfigureFunctionInternet_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            adslInternetConfiguration/* |
            fttxInternetConfiguration/* |
            fibreInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="lteProcessingType"/>          
          <base:Include fileIDRef="functionParameters" partIDRef="instantAccessForReconfiguration"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>          
        </RPListTemplate>
      </RequestTemplate>

      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/relocation/*/tvCenter" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            tvCenterBundledConfiguration/* ">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of mobile usage function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/relocation/*/mobileUsage" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="mobileUsageConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of directory entry -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/relocation/*/directoryEntry" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="directoryEntryConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- setting of DTAG parameters only when changing from precompletedCCM to completedOPM --> 
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/relocation/*/voice | 
        /*/relocation/*/internet | 
        /*/relocation/*/extraLine |
        /*/relocation/*/directoryEntry" 
        extends="reconfigureFunctionPrecompleted_template">
      </RequestTemplate>            
      
      <!-- safetyPackage -->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/relocation/*/safetyPackage" extends="safetyPackageCreation_template">
        <TemplateConditions>
          <base:IsMember value="ADD" sourceAttrName="processingType"/>
        </TemplateConditions>
      </RequestTemplate>

      <!-- exeute step, which actviates billing for the safetyPackage function-->
      <RequestTemplate fif-request-name="activateBilling"
        sourceWorkingPath="/*/relocation/functions/safetyPackage"
        extends="activateBilling_template"/>       

      <!-- installation service -->
      <RequestTemplate fif-request-name="addInstallationService"
        sourceWorkingPath="/*/relocation/*/installationSvc" extends="installationService_template"/>

      <!-- hardware service -->
      <RequestTemplate fif-request-name="addHardwareService"
        sourceWorkingPath="/*/relocation/*/hardware" 
        extends="hardwareService_template"/>      

      <!-- features -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/relocation/*/voice | /*/relocation/*/internet | /*/relocation/*/tvCenter"
        extends="modifyFeaturesFeatures_template"/>
        
        <!-- volumeCap -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/relocation/*/internet"
        extends="modifyFeaturesVolumeCap_template"/>
        
        <!-- volumeCap based on bandwidth -->
        <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/relocation/*/internet"
        extends="modifyFeaturesVolumeCapWithBandwidth_template"/>

      <!-- charges and credits -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/relocation/*/voice | /*/relocation/*/internet | /*/relocation/*/tvCenter"
        extends="modifyFeaturesChargesAndCredits_template"/>
      
      <!-- serviceLevel -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/voice | /*/relocation/*/internet | /*/relocation/*/tvCenter"
        extends="modifyFeaturesServiceLevel_template"/>
      
      <!-- serviceLevelLegal -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/voice | /*/relocation/*/internet | /*/relocation/*/tvCenter"
        extends="modifyFeaturesServiceLevelLegal_template"/>
      
      <!-- IPV6 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/internet"
        extends="modifyFeaturesIPV6_template"/>
      
      <!-- desired countries -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/voice | /*/relocation/*/internet"
        extends="modifyFeaturesCountries_template"/>

      <!-- tariff options -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/relocation/*/voice | /*/relocation/*/internet | /*/relocation/*/tvCenter"
        extends="modifyFeaturesTariffOptions_template"/>

      <!-- callForwarding -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/voice"
        extends="modifyFeaturesCallForwarding_template"/>
        
      <!-- TV Center Options -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/tvCenter"
        extends="modifyFeaturesTVCenterOptions_template"/>
        
      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/functions/safetyPackage | /*/relocation/*/internet | /*/relocation/*/voice | /*/relocation/*/hardware | /*/relocation/*/tvCenter"
        extends="modifyFeaturesConditions_template"/>

      <!-- access number blocking -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/voice" 
        extends="modifyFeaturesBlockingServices_template"/>
      
      <!-- IT-27749 installation fees -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/voice | /*/relocation/*/internet | /*/relocation/*/tvCenter"
        extends="modifyFeaturesInstallationFees_template"/>
            
      <!-- VDSL Vectoring - setup fee for DSL 100.000 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/internet"
        extends="modifyFeaturesVDSLSetupFee_template"/>
      
      <!-- DSL bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice[@ID = '${#:mainVoiceFunctionID}']" 
        extends="modifyFeaturesDSLBandwidth_template"/>
      
      <!-- DSL upstream bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice[@ID = '${#:mainVoiceFunctionID}']" 
        extends="modifyFeaturesDSLUpstreamBandwidth_template"/>
      
      <!-- fibre fee -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/internet" 
        extends="modifyFeaturesFibreFee_template"/>

      <!-- directory entry -->
      <RequestTemplate fif-request-name="createDirectoryEntry"
        sourceWorkingPath="/*/relocation/*/directoryEntry" extends="directoryEntry_template"/>
            
      <!-- instant access  -->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/relocation/*/instantAccess"
        extends="instantAccess_template" />
        
      <!-- mobile usage-->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/relocation/*/mobileUsage"
        extends="MobileUsage_template" /> 
      
      <!-- contract change, will be called, if any contract parameter is changed -->
      <RequestTemplate fif-request-name="modifyContractApply"
        sourceWorkingPath="/*/relocation/*/safetyPackage"
        extends="modifyContract_template"/> 
      
      <!-- activations of customer orders termination -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="/*/relocation/*/voice |
        /*/relocation/*/extraLine |
        /*/relocation/*/internet |
        /*/relocation/*/safetyPackage |
        /*/relocation/*/tvCenter |
        /*/relocation/*/mobileUsage"
        extends="activateCustomerOrder_template">
        <RPMapping staticValue="Y" targetName="isMovedService"/>
      </RequestTemplate>
      
      <!-- activations of customer orders -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="/*/relocation/*/voice |
        /*/relocation/*/extraLine |
        /*/relocation/*/internet |
        /*/relocation/*/hardware |
        /*/relocation/*/installationSvc |
        /*/relocation/*/safetyPackage |
        /*/relocation/*/tvCenter |
        /*/relocation/*/instantAccess |
        /*/relocation/*/directoryEntry |
        /*/relocation/*/mobileUsage"
        extends="activateCustomerOrder_template">
      </RequestTemplate>
      <!-- RELOCATION END ********************************************************************************************* -->

      <!-- Contract Partner Change START ********************************************************************************************* -->
      <RequestTemplate fif-request-name="terminateFunction"
        sourceWorkingPath="/*/contractPartnerChange/*/internet" 
        extends="terminateFunction_template"/>
      
      <!-- terminate Arcor Mobile bypassing OP -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice"
        extends="terminateFunctionMobile_template"/>

      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/contractPartnerChange/*/internet" 
        extends="InternetCreation_template"/>
      
      <!-- fixed IP address -->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/contractPartnerChange/*/internet"
        extends="fixedIPAddress_template" />
        
      
      <!-- implicit termination in site contractPartnerChange, order position = contractPartnerChange -->
      <RequestTemplate fif-request-name="terminateFunction"
        sourceWorkingPath="/*/contractPartnerChange/*/voice" 
        extends="terminateFunction_template"/>

      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/contractPartnerChange/*/voice" 
        extends="VoiceCreation_template"/>
      
      <RequestTemplate fif-request-name="addChildService"
        sourceWorkingPath="/*/contractPartnerChange/*/extraLine" 
        extends="ExtraLineCreation_template"/>      
      
      <!-- implicit termination in site contractPartnerChange, order position = contractPartnerChange -->
      <RequestTemplate fif-request-name="terminateFunction"
        sourceWorkingPath="/*/contractPartnerChange/*/tvCenter" 
        extends="terminateFunction_template"/>
      
      <!-- Create Function TV Center-->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/contractPartnerChange/*/tvCenter"
        extends="TVCenterCreation_template"/> 
        
      <!-- simple terminations: safetyPackage, Discounts -->
      <RequestTemplate fif-request-name="terminateFunction"
        sourceWorkingPath="/*/contractPartnerChange/*/safetyPackage | /*/contractPartnerChange/discount" 
        extends="terminateFunction_template"/>

      <!-- reconfiguration of voice function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/contractPartnerChange/*/voice" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            voicePremiumConfiguration/* |
            voiceBasisConfiguration/* |
            */portingAccessNumbers/* | 
            */portingAccessNumberRanges/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="isdnInternetParameters"/>
          <base:Include fileIDRef="functionParameters" partIDRef="instantAccessForReconfiguration"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>         
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of extraLine function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/contractPartnerChange/*/extraLine" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="extraS0LineConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/contractPartnerChange/*/internet" extends="reconfigureFunctionInternet_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            adslInternetConfiguration/* |
            fttxInternetConfiguration/* |
            fibreInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="lteProcessingType"/>          
          <base:Include fileIDRef="functionParameters" partIDRef="instantAccessForReconfiguration"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>          
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/contractPartnerChange/*/tvCenter" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            tvCenterBundledConfiguration/* ">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of directory entry -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/contractPartnerChange/*/directoryEntry" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="directoryEntryConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>   
      
      <!-- reconfiguration of mobile Usage -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/contractPartnerChange/*/mobileUsage" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="mobileUsageConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>      

      <!-- setting of DTAG parameters only when changing from precompletedCCM to completedOPM --> 
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice | 
        /*/contractPartnerChange/*/internet | 
        /*/contractPartnerChange/*/extraLine |
        /*/contractPartnerChange/*/directoryEntry" 
        extends="reconfigureFunctionPrecompleted_template">
      </RequestTemplate>            
      
      <!-- safetyPackage -->
      <RequestTemplate fif-request-name="createFunctions"
        sourceWorkingPath="/*/contractPartnerChange/*/safetyPackage"
        extends="safetyPackageCreation_template"/>

      <!-- installation service -->
      <RequestTemplate fif-request-name="addInstallationService"
        sourceWorkingPath="/*/contractPartnerChange/*/installationSvc"
        extends="installationService_template"/>

      <!-- hardware service -->
      <RequestTemplate fif-request-name="addHardwareService"
        sourceWorkingPath="/*/contractPartnerChange/*/hardware" 
        extends="hardwareService_template"/>

      <!-- features -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet | /*/contractPartnerChange/*/tvCenter"
        extends="modifyFeaturesFeatures_template"/>
        
        <!-- volumeCap -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/contractPartnerChange/*/internet"
        extends="modifyFeaturesVolumeCap_template"/>
        
        <!-- volumeCap based on bandwidth -->
        <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/contractPartnerChange/*/internet"
        extends="modifyFeaturesVolumeCapWithBandwidth_template"/>

      <!-- charges and credits -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet | /*/contractPartnerChange/*/tvCenter"
        extends="modifyFeaturesChargesAndCredits_template"/>

      <!-- serviceLevel -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet | /*/contractPartnerChange/*/tvCenter"
        extends="modifyFeaturesServiceLevel_template"/>
      
      <!-- serviceLevelLegal -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet | /*/contractPartnerChange/*/tvCenter"
        extends="modifyFeaturesServiceLevelLegal_template"/>
      
      <!-- IPV6 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/internet"
        extends="modifyFeaturesIPV6_template"/>
      
      <!-- desired countries -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet"
        extends="modifyFeaturesCountries_template"/>

      <!-- tariff options -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet | /*/contractPartnerChange/*/tvCenter"
        extends="modifyFeaturesTariffOptions_template"/>

      <!-- callForwarding -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/voice"
        extends="modifyFeaturesCallForwarding_template"/>

      <!-- TV Center Options -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/tvCenter"
        extends="modifyFeaturesTVCenterOptions_template"/>
        
      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
          sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet | /*/contractPartnerChange/*/safetyPackage | /*/contractPartnerChange/*/hardware | /*/contractPartnerChange/*/tvCenter"
        extends="modifyFeaturesConditions_template"/>

      <!-- access number blocking -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/voice"
        extends="modifyFeaturesBlockingServices_template"/>

      <!-- DSL bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/internet | /*/contractPartnerChange/*/voice[@ID = '${#:mainVoiceFunctionID}']"
        extends="modifyFeaturesDSLBandwidth_template"/>
      
      <!-- DSL upstream bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/internet | /*/contractPartnerChange/*/voice[@ID = '${#:mainVoiceFunctionID}']" 
        extends="modifyFeaturesDSLUpstreamBandwidth_template"/>
      
      <!-- fibre fee -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/internet" 
        extends="modifyFeaturesFibreFee_template"/>

      <!-- IT-27749 installation fees -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet | /*/contractPartnerChange/*/tvCenter"
        extends="modifyFeaturesInstallationFees_template"/>
            
      <!-- VDSL Vectoring - setup fee for DSL 100.000 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/internet"
        extends="modifyFeaturesVDSLSetupFee_template"/>

      <!-- directory entry -->
      <RequestTemplate fif-request-name="createDirectoryEntry"
        sourceWorkingPath="/*/contractPartnerChange/*/directoryEntry"
        extends="directoryEntry_template"/>

      <!-- instant access  -->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/contractPartnerChange/*/instantAccess"
        extends="instantAccess_template" />
       
       <!-- mobile usage-->
      <RequestTemplate fif-request-name="addChildService"         
        sourceWorkingPath="/*/contractPartnerChange/*/mobileUsage"
        extends="MobileUsage_template" /> 
      
      <!-- activations of customer orders termination -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="/*/contractPartnerChange/*/voice |
        /*/contractPartnerChange/*/extraLine |
        /*/contractPartnerChange/*/internet |
        /*/contractPartnerChange/*/safetyPackage |
        /*/contractPartnerChange/*/tvCenter |
        /*/contractPartnerChange/*/mobileUsage"
        extends="activateCustomerOrder_template">
        <RPMapping staticValue="Y" targetName="isMovedService"/>
      </RequestTemplate>

      <!-- activations of customer orders activation-->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="/*/contractPartnerChange/*/voice |
        /*/contractPartnerChange/*/extraLine |
        /*/contractPartnerChange/*/internet |
        /*/contractPartnerChange/*/hardware |
        /*/contractPartnerChange/*/installationSvc |
        /*/contractPartnerChange/*/safetyPackage |
        /*/contractPartnerChange/*/tvCenter |
        /*/contractPartnerChange/*/instantAccess |
        /*/contractPartnerChange/*/directoryEntry |
        /*/contractPartnerChange/*/mobileUsage"
        extends="activateCustomerOrder_template">
      </RequestTemplate>
      
        
      <!-- Contract Partner Change END ********************************************************************************************* -->
      
      <!-- IT-30847 LTE address change START ************************************************************************ -->
      <!-- reconfiguration -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/customerChange/*/internet | /*/customerChange/*/voice"
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="../../accesses/lte[@ID = '${@refAccessID}']/*/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="lteProcessingType"/>          
        </RPListTemplate>
      </RequestTemplate>

      <!-- activations of customer order -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="/*/customerChange/*/internet | /*/customerChange/*/voice"
        extends="activateCustomerOrder_template">
      </RequestTemplate>
      <!-- IT-30847 LTE address change END ************************************************************************ -->
      
      <!-- TERMINATIONS START -->
      
      <!-- real termination, order position = termination -->
      <RequestTemplate fif-request-name="terminateFunction"
        sourceWorkingPath="/*/termination/*/internet | /*/termination/*/voice | 
        /*/termination/*/safetyPackage | /*/termination/*/tvCenter | /*/termination/discount | 
        /*/termination/*/extraLine | /*/termination/*/hardware | /*/termination/*/mobileUsage"
        extends="terminateFunction_template">
        
        <base:DataBufferWriter keyValue="terminationReason" 
        	sourceAttrName="/*/termination/terminationReasonCode"
        	decoding="'ABWR', 'providerChangeTermination', 'ownTermination'" />
        
        <base:DataBufferWriter keyValue="targetCarrier" 
        	sourceAttrName="/*/termination/*/voice[@ID = '${#:mainVoiceFunctionID}']/*/*/carrier/configured"
        	decoding="'D191', 'KD', 'KABEL DEUTSCHLAND', 'KD', 'Vodafone Kabel',  'KD', 'other'" />
        
	    <RPMapping targetName="detailedReason" 
			sourceAttrName="concat('${#:terminationReason}' , ';', '${#:targetCarrier}')" 
			decoding="'providerChangeTermination;KD', 'ABWR_KD1', 'ownTermination;KD', 'ABWR_KD2', ''" />
      </RequestTemplate>
      
      <!-- terminate Arcor Mobile bypassing OP -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/termination/*/voice"
        extends="terminateFunctionMobile_template"/>
      
      <!-- reconfiguration of voice function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/termination/*/voice" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            voicePremiumConfiguration/* |
            voiceBasisConfiguration/* |
            */portingAccessNumbers/* | 
            */portingAccessNumberRanges/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/termination/*/internet" extends="reconfigureFunctionInternet_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            adslInternetConfiguration/* |
            fttxInternetConfiguration/* |
            fibreInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="lteProcessingType"/>          
        </RPListTemplate>
      </RequestTemplate>
      
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="
        /*/termination/*/internet | 
        /*/termination/*/voice | 
        /*/termination/*/safetyPackage | 
        /*/termination/*/tvCenter"
        extends="modifyFeaturesDiscountServiceDel_template">
        <TemplateConditions>
          <base:IsMember value="TERM" sourceAttrName="processingType"/>
        </TemplateConditions>
     </RequestTemplate>
      
      <RequestTemplate fif-request-name="suspendFunction"
        sourceWorkingPath="
        /*/termination/*/internet | 
        /*/termination/*/voice | 
        /*/termination/*/safetyPackage | 
        /*/termination/*/tvCenter"
        extends="reactivateOrSuspendFunction_template">
        <TemplateConditions>
          <base:IsMember value="TERM" sourceAttrName="processingType"/>
   		  <base:IsMember value="precompletedOPM" sourceAttrName="completionStatusOldCcbId" />    
        </TemplateConditions>
     </RequestTemplate>
     <RequestTemplate fif-request-name="reactivateFunction"
        sourceWorkingPath="
        /*/termination/*/internet | 
        /*/termination/*/voice | 
        /*/termination/*/safetyPackage | 
        /*/termination/*/tvCenter"
        extends="reactivateOrSuspendFunction_template">
        <TemplateConditions>
          <base:IsMember value="TERM" sourceAttrName="processingType"/>
          	<OrComposite>
				<base:IsMember value="postponedOPM" sourceAttrName="completionStatusOldCcbId" />
				<base:IsMember value="cancelledOPM" sourceAttrName="completionStatusOldCcbId" /> 
			</OrComposite>   
        </TemplateConditions>
     </RequestTemplate>
      
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="
        /*/termination/*/internet | 
        /*/termination/*/voice | 
        /*/termination/*/safetyPackage | 
        /*/termination/*/tvCenter"
        extends="modifyFeaturesDiscountServiceAdd_template">
        <TemplateConditions>
          <base:IsMember value="TERM" sourceAttrName="processingType"/>
        </TemplateConditions>
     </RequestTemplate>
      
      <!-- activation of termination of a function termination -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="
        /*/termination/*/internet | 
        /*/termination/*/voice| 
        /*/termination/*/extraLine | 
        /*/termination/*/safetyPackage |
        /*/termination/*/tvCenter |
        /*/termination/*/hardware |
        /*/termination/*/mobileUsage"
        extends="activateCustomerOrder_template">
        <TemplateConditions>
          <base:IsMember value="TERM" sourceAttrName="processingType"/>
        </TemplateConditions>
        <RPMapping staticValue="Y" targetName="isMovedService"/>
      </RequestTemplate>
      
      <!-- activation of termination of a function -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="
        /*/termination/*/internet | 
        /*/termination/*/voice| 
        /*/termination/*/extraLine | 
        /*/termination/*/safetyPackage |
        /*/termination/*/tvCenter |
        /*/termination/*/hardware |
        /*/termination/*/mobileUsage"
        extends="activateCustomerOrder_template">
      </RequestTemplate>
      
      <!-- TERMINATIONS END -->
      
      <!-- updateSelectedDestinations, for ISDN Dial-Up lines -->
      <RequestTemplate fif-request-name="updateSelectedDestination" 
        sourceWorkingPath="/*/*/*/internet">
        <TemplateConditions>
          <OrComposite>
            <AndComposite>
              <base:IsExisting sourceAttrName="*/selectedDestinationsRefId/configured" />
              <base:IsMember value="false" sourceAttrName="#:newInternetMainAccess" />
            </AndComposite>
            <AndComposite>
              <base:IsExisting sourceAttrName="*/selectedDestinationsRefId[count(@action) = 0]" />
              <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess" />
            </AndComposite>
          </OrComposite>
          <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
          <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures"/>
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']" method="configuredExisting" />
        <RPMapping targetName="startDate" sourceAttrName="/order/*/desiredDate" formatter="SOMToCCBDateFormatter"/>              
        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="*/selectedDestinationsRefId/configured" />
          </TemplateConditions>
          <RPListTemplate listName="selectedDestinationsList">
            <RPListItemTemplate sourceWorkingPath="../voice[@ID = '${*/selectedDestinationsRefId/configured}']/*/portingAccessNumbers/*[count(@action) = 0 and starts-with(name(.), 'accessNumber')]">
              <TemplateConditions>
                <base:IsExisting sourceAttrName="configured" />
              </TemplateConditions>
              <RPMapping targetName="beginNumber" 
                sourceAttrName="concat(configured/countryCode, configured/localAreaCode, configured/pilotNumber)" />
            </RPListItemTemplate>
            <RPListItemTemplate sourceWorkingPath="../voice[@ID = '${*/selectedDestinationsRefId/configured}']/*/portingAccessNumbers/*[count(@action) = 0 and starts-with(name(.), 'accessNumber')]">
              <TemplateConditions>
                <base:IsNotExisting sourceAttrName="configured" />
              </TemplateConditions>
              <RPMapping targetName="beginNumber" 
                sourceAttrName="concat(existing/countryCode, existing/localAreaCode, existing/pilotNumber)" />
            </RPListItemTemplate>
          </RPListTemplate>        
        </TransformationTemplate>
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="*/selectedDestinationsRefId/configured" />
          </TemplateConditions>
          <RPListTemplate listName="selectedDestinationsList">
            <RPListItemTemplate sourceWorkingPath="../voice[@ID = '${*/selectedDestinationsRefId/existing}']/*/portingAccessNumbers/*[count(@action) = 0 and starts-with(name(.), 'accessNumber')]">
              <TemplateConditions>
                <base:IsExisting sourceAttrName="configured" />
              </TemplateConditions>
              <RPMapping targetName="beginNumber" 
                sourceAttrName="concat(configured/countryCode, configured/localAreaCode, configured/pilotNumber)" />
            </RPListItemTemplate>
            <RPListItemTemplate sourceWorkingPath="../voice[@ID = '${*/selectedDestinationsRefId/existing}']/*/portingAccessNumbers/*[count(@action) = 0 and starts-with(name(.), 'accessNumber')]">
              <TemplateConditions>
                <base:IsNotExisting sourceAttrName="configured" />
              </TemplateConditions>
              <RPMapping targetName="beginNumber" 
                sourceAttrName="concat(existing/countryCode, existing/localAreaCode, existing/pilotNumber)" />
            </RPListItemTemplate>
          </RPListTemplate>        
        </TransformationTemplate>
      </RequestTemplate>           
            
      <!-- KBA-FIF-Trx updateSelectedDestinations, remove selected destinations -->
      <RequestTemplate fif-request-name="updateSelectedDestination"
        sourceWorkingPath="/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']">
        <TemplateConditions>
          <base:IsMember value="remove" sourceAttrName="*/selectedDestinations/@action" />
          <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess" />
          <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures" />
        </TemplateConditions>
        <RPMapping targetName="pricePlanCode" sourceAttrName="*/selectedDestinations/@pricePlanCode" />
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']" method="configuredExisting" />
        <RPMapping targetName="startDate" sourceAttrName="/order/*/desiredDate" formatter="SOMToCCBDateFormatter" />
      </RequestTemplate>
      
      <!-- KBA-FIF-Trx updateSelectedDestinations, add selected destinations -->
      <RequestTemplate fif-request-name="updateSelectedDestination"
        sourceWorkingPath="/*/*/*/voice[@ID = '${#:mainVoiceFunctionID}']">
        <TemplateConditions>
          <base:IsExisting sourceAttrName="*/selectedDestinations/configured" />
          <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures" />
        </TemplateConditions>
        <RPMapping targetName="pricePlanCode" sourceAttrName="*/selectedDestinations/@pricePlanCode" />
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']" method="configuredExisting" />
        <RPMapping targetName="startDate" sourceAttrName="/order/*/desiredDate" formatter="SOMToCCBDateFormatter"/>
        <RPListTemplate listName="selectedDestinationsList">
          <RPListItemTemplate sourceWorkingPath="*/selectedDestinations/configured/plainPhoneNumber">
            <RPMapping targetName="beginNumber" sourceAttrName="." />
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- create provider change log entry for a provider change termination by OPM -->
      <RequestTemplate fif-request-name="createProviderChangeLog"
        sourceWorkingPath="/*/termination/*/voice">
        <TemplateConditions>
          <base:IsMember value="TERM" sourceAttrName="processingType"/>
          <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
          <base:IsMember value="true" sourceAttrName="#:terminateVoice"/>
          <base:IsMember value="ProviderChange" sourceAttrName="../../customerIntention"/>
          <base:IsNotMember value="sip" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
          <base:IsNotMember value="mobile" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
          <base:IsNotMember value="preselect" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/> 
        </TemplateConditions>
        <RPMapping targetName="termServiceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing"/>
        <RPMapping targetName="reasonRd" staticValue="PROVIDER_CHANGE"/>   
        <RPMapping targetName="customerIntention" sourceAttrName="../../customerIntention" />
        <RPMapping targetName="parentBarcode" sourceAttrName="../../parentBarcode" />
      </RequestTemplate>
      
      <!-- create provider change log entry for contract partner change -->
      <RequestTemplate fif-request-name="createProviderChangeLog"
        sourceWorkingPath="
        /*/contractPartnerChange/*/internet | 
        /*/contractPartnerChange/*/voice">
        <TemplateConditions>
          <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <OrComposite>
            <AndComposite>
              <base:IsMember value="internet" sourceAttrName="name(.)"/>
              <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology"/>
              <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              <base:IsMember value="true" sourceAttrName="#:createInternet"/>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="voice" sourceAttrName="name(.)"/>
              <OrComposite>
                <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
                <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              </OrComposite>
              <base:IsMember value="true" 
                sourceAttrName="@refAccessID = '${#:targetAccessID}' or @targetAccessID = '${#:targetAccessID}'"/>
              <base:IsMember value="true" sourceAttrName="#:createVoice"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="actServiceSubscriptionId" sourceAttrName="ccbId[@type='S']/configured"/>
        <RPMapping targetName="termServiceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing"/>
        <RPMapping staticValue="TAKEOVERCONTRACT" targetName="reasonRd"/>                
      </RequestTemplate>
      
      <!-- Set sales packet on bundle for a line creation/change -->
      <RequestTemplate fif-request-name="setSalesPacketOnBundle"
        sourceWorkingPath="/*/lineCreation | /*/lineChange | /*/relocation | /*/contractPartnerChange | /*/termination">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="ADD" sourceAttrName="functions/*/processingType"/>
            <base:IsMember value="CHANGE" sourceAttrName="functions/*/processingType"/>
            <base:IsMember value="TERM" sourceAttrName="functions/*/processingType"/>
          </OrComposite>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <base:IsNotMember value="OrderNewMIC" sourceAttrName="/*/*/customerIntention"/>
          <OrComposite>
            <base:IsNotExisting
              sourceAttrName="/*/*/functions/otherFunction[@ID='${functions/hardware/refFunctionID/configured}']"/>
            <base:IsNotMember value="NOT_AVAILABLE"
              sourceAttrName="/*/*/functions/otherFunction[@ID='${functions/hardware/refFunctionID/configured}']/ccbId[@type='S']/existing"
            />
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="OMTSOrderID" sourceAttrName="${#:orderIdPath}"/>
      </RequestTemplate>
      
      <!-- Set sales packet on bundle for a line creation/change -->
      <RequestTemplate fif-request-name="setSalesPacketOnBundle"
        sourceWorkingPath="/*/contractPartnerChange">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        </TemplateConditions>
        <RPMapping targetName="OMTSOrderID" sourceAttrName="/*/*/parentBarcode"/>
      </RequestTemplate>
      
      <!-- contactRole creation of new contact roles -->
      <RequestTemplate fif-request-name="createContactRoleReference"
        sourceWorkingPath="/*/*/accesses/*/*/contactRoleRef/configured"
        extends="createContactRoleReference_template">
        <TemplateConditions>
          <OrComposite>
            <AndComposite>
              <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology"/>
              <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures"/>
            </AndComposite>
            <AndComposite>
              <OrComposite>
                <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
                <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              </OrComposite>
              <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>
      
      <!-- contactRole creation of new existing contact roles -->
      <RequestTemplate fif-request-name="createContactRoleReference"
        sourceWorkingPath="/*/*/accesses/*/*/contactRoleRef/existing"
        extends="createContactRoleReference_template">
        <TemplateConditions>
          <base:IsNotMember value="true" 
            sourceAttrName="count(../../../../*/*/contactRoleRef/configured[. = '${.}') > 0"/>
          <base:IsNotMember value="TERM" 
            sourceAttrName="/*/*/contactRole[@ID = '${.}']/changeType"/>
          <base:IsNotMember value="contractPartnerChange" 
            sourceAttrName="name(../../../../..)"/>
          <base:IsExisting sourceAttrName="../../../ccbId[@type = 'S']/configured"/>
          <OrComposite>
            <AndComposite>
              <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology"/>
              <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures"/>
              <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
            </AndComposite>
            <AndComposite>
              <OrComposite>
                <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
                <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              </OrComposite>
              <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures"/>
              <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="cloneLegacyContactRole" staticValue="Y" />
      </RequestTemplate>
      
      <!-- contactRole creation -->
      <RequestTemplate fif-request-name="createContactRoleReference"
        sourceWorkingPath="/*/*/functions/*/*/contactRoleRef/configured"
        extends="createContactRoleReference_template">
        <TemplateConditions>
          <OrComposite>
            <AndComposite>
              <base:IsMember value="internet" sourceAttrName="name(../../..)"/>
              <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures"/>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="voice" sourceAttrName="name(../../..)"/>
              <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>
      
      <!-- terminate mobile, if
      		- TERM and resp. tariff, ASAP, migrated already anyway
      		- main access terminated and resp. tariff, together with mainAccess
      
      		- terminateService only for other tariffs, like before
       -->
      
      <!-- terminate VoIP-2nd-Line and Arcor Mobile via OP -->
      <RequestTemplate fif-request-name="terminateService" 
        sourceWorkingPath="/*/*/*/voice">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <OrComposite>
            <base:IsMember value="TERM" sourceAttrName="processingType" />
            <AndComposite>
              <base:IsMember value="CHANGE" sourceAttrName="processingType" />
              <base:IsExisting sourceAttrName="@targetAccessID" />
            </AndComposite>
          </OrComposite>
          <OrComposite>
            <base:IsMember value="noactionOPM" sourceAttrName="completionStatusOldCcbId"/>
            <base:IsMember value="noactionCOM" sourceAttrName="completionStatusOldCcbId"/>
          </OrComposite>
          <OrComposite>
            <base:IsExisting sourceAttrName="../../accesses/sip[@ID = '${@refAccessID}']" />
            <AndComposite>
              <base:IsExisting sourceAttrName="../../accesses/mobile[@ID = '${@refAccessID}']" />
	          <base:IsNotMember value="true" sourceAttrName="
		          */pricingStructureCode/existing = 'V8000' or 
		          */pricingStructureCode/existing = 'V8001' or 
		          */pricingStructureCode/existing = 'V8002' or 
		          */pricingStructureCode/existing = 'V8003' or 
		          */pricingStructureCode/existing = 'V8004' or 
		          */pricingStructureCode/existing = 'V8005' or 
		          */pricingStructureCode/existing = 'V8006' or 
		          */pricingStructureCode/existing = 'V8007' or 
		          */pricingStructureCode/existing = 'V8008' or 
		          */pricingStructureCode/existing = 'V8011' or 
		          */pricingStructureCode/existing = 'V8012' or 
		          */pricingStructureCode/existing = 'V8013' or 
		          */pricingStructureCode/existing = 'V8017' or 
		          */pricingStructureCode/existing = 'V8019' or 
		          */pricingStructureCode/existing = 'V8020'" />              
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <base:DataBufferWriter keyValue="fifActionTriggered" staticValue="true" />
        <RPMapping staticValue="Complex" targetName="terminationType" />
        <RPMapping targetName="terminateOrderForm" staticValue="N" />
        <RPMapping targetName="functionID" sourceAttrName="@ID" />
        <RPMapping targetName="productCode" sourceAttrName="*/productCode/existing" />
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing" />
        <RPMapping targetName="contractNumber" sourceAttrName="contractNumber/existing" />        
        <RPMapping targetName="noticePeriodStartDate" 
          sourceAttrName="/*/*/orderReceivedDate" 
          formatter="SOMToCCBDateFormatter" />
        <RPMapping targetName="terminationDate" 
          sourceAttrName="/*/*/desiredDate" 
          formatter="SOMToCCBDateFormatter" />
        <RPMapping targetName="carrier" sourceAttrName="*/*/carrier/configured" />
        
        <RPMapping targetName="providerTrackingNumberDefault" 
          sourceAttrName="providerTrackingNumber[@type = 'default']/configured" />
        <RPMapping targetName="providerTrackingNumberChange" 
          sourceAttrName="providerTrackingNumber[@type = 'change']/configured" />              
        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="terminationReasonCode" />
          </TemplateConditions>
          <RPMapping targetName="terminationReason" sourceAttrName="terminationReasonCode" />        
        </TransformationTemplate>
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="terminationReasonCode" />
            <base:IsMember value="termination" sourceAttrName="name(../..)" />
          </TemplateConditions>
          <RPMapping targetName="terminationReason" sourceAttrName="../../terminationReasonCode" />        
        </TransformationTemplate>
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="terminationReasonCode" />
            <base:IsNotMember value="termination" sourceAttrName="name(../..)" />
          </TemplateConditions>
          <RPMapping targetName="terminationReason" staticValue="SON" />        
        </TransformationTemplate>
        
        <base:DataBufferWriter keyValue="terminationReason" 
        	sourceAttrName="/*/termination/terminationReasonCode"
        	decoding="'ABWR', 'providerChangeTermination', 'ownTermination'" />
        
        <base:DataBufferWriter keyValue="targetCarrier" 
        	sourceAttrName="/*/termination/*/voice[@ID = '${#:mainVoiceFunctionID}']/*/*/carrier/configured"
        	decoding="'D191', 'KD', 'KABEL DEUTSCHLAND', 'KD', 'Vodafone Kabel',  'KD', 'other'" />
        
	    <RPMapping targetName="detailedReason" 
			sourceAttrName="concat('${#:terminationReason}' , ';', '${#:targetCarrier}')" 
			decoding="'providerChangeTermination;KD', 'ABWR_KD1', 'ownTermination;KD', 'ABWR_KD2', ''" />
        
      </RequestTemplate>      
      
      <!-- terminate DSLR via OP -->
      <RequestTemplate fif-request-name="terminateService" 
        sourceWorkingPath="/*/*/*/internet">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <OrComposite>
            <base:IsMember value="TERM" sourceAttrName="processingType" />
            <AndComposite>
              <base:IsMember value="CHANGE" sourceAttrName="processingType" />
              <base:IsExisting sourceAttrName="@targetAccessID" />
            </AndComposite>
          </OrComposite>
          <OrComposite>
            <base:IsMember value="noactionOPM" sourceAttrName="completionStatusOldCcbId"/>
            <base:IsMember value="noactionCOM" sourceAttrName="completionStatusOldCcbId"/>
          </OrComposite>
          <base:IsExisting sourceAttrName="../../accesses/dslr[@ID = '${@refAccessID}']" />
        </TemplateConditions>
        <base:DataBufferWriter keyValue="fifActionTriggered" staticValue="true" />
        <RPMapping targetName="terminationType" staticValue="Complex" />
        <RPMapping targetName="terminateOrderForm" staticValue="N" />

        <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:IsNotMember value="CHANGE" sourceAttrName="processingType" />                                   
            <AndComposite>
              <base:IsMember value="CHANGE" sourceAttrName="processingType" />                                   
              <base:IsMember value="true" sourceAttrName="#:isRelocation" />                                   
            </AndComposite>
          </OrComposite>
          </TemplateConditions> 
          <RPMapping targetName="orderVariant" staticValue="Kündigung Arcor" />
        </TransformationTemplate>
        <TransformationTemplate>
          <TemplateConditions>
              <base:IsMember value="CHANGE" sourceAttrName="processingType" />                                   
              <base:IsMember value="false" sourceAttrName="#:isRelocation" />                                   
          </TemplateConditions> 
          <RPMapping targetName="orderVariant" staticValue="Kündigung Providerwechsel" />
        </TransformationTemplate>

        <RPMapping targetName="functionID" sourceAttrName="@ID" />
        <RPMapping targetName="productCode" sourceAttrName="*/productCode/existing" />
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing" />
        <RPMapping targetName="contractNumber" sourceAttrName="contractNumber/existing" />        
        <RPMapping targetName="noticePeriodStartDate" 
          sourceAttrName="/*/*/orderReceivedDate" 
          formatter="SOMToCCBDateFormatter" />
        <RPMapping targetName="terminationDate" 
          sourceAttrName="/*/*/desiredDate" 
          formatter="SOMToCCBDateFormatter" />
        
        <RPMapping targetName="providerTrackingNumberDefault" 
          sourceAttrName="providerTrackingNumber[@type = 'default']/configured" />
        <RPMapping targetName="providerTrackingNumberChange" 
          sourceAttrName="providerTrackingNumber[@type = 'change']/configured" />              
        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="terminationReasonCode" />
          </TemplateConditions>
          <RPMapping targetName="terminationReason" sourceAttrName="terminationReasonCode" />        
        </TransformationTemplate>
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="terminationReasonCode" />
            <base:IsMember value="termination" sourceAttrName="name(../..)" />
          </TemplateConditions>
          <RPMapping targetName="terminationReason" sourceAttrName="../../terminationReasonCode" />        
        </TransformationTemplate>
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotMember value="CHANGE" sourceAttrName="processingType" />
            <base:IsNotExisting sourceAttrName="terminationReasonCode" />
            <base:IsNotMember value="termination" sourceAttrName="name(../..)" />
          </TemplateConditions>
          <RPMapping targetName="terminationReason" staticValue="SON" />        
        </TransformationTemplate>
        <TransformationTemplate>
          <TemplateConditions>
          <base:IsMember value="CHANGE" sourceAttrName="processingType" />
            <base:IsNotExisting sourceAttrName="terminationReasonCode" />
            <base:IsNotMember value="termination" sourceAttrName="name(../..)" />
          </TemplateConditions>
          <RPMapping targetName="terminationReason" staticValue="AGKTW" />        
        </TransformationTemplate>
        
        
        
        <base:DataBufferWriter keyValue="terminationReason" 
        	sourceAttrName="/*/termination/terminationReasonCode"
        	decoding="'ABWR', 'providerChangeTermination', 'ownTermination'" />
        
        <base:DataBufferWriter keyValue="targetCarrier" 
        	sourceAttrName="/*/termination/*/voice[@ID = '${#:mainVoiceFunctionID}']/*/*/carrier/configured"
        	decoding="'D191', 'KD', 'KABEL DEUTSCHLAND', 'KD', 'Vodafone Kabel',  'KD', 'other'" />
        
	    <RPMapping targetName="detailedReason" 
			sourceAttrName="concat('${#:terminationReason}' , ';', '${#:targetCarrier}')" 
			decoding="'providerChangeTermination;KD', 'ABWR_KD1', 'ownTermination;KD', 'ABWR_KD2', ''" />
        
      </RequestTemplate>      
      
      <!-- terminate safetyPackage via OP, if the order is not going through OPM -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/*/*/safetyPackage"
        extends="terminateFunctionOP_template"/>
      
      <!-- terminate preselect -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/*/*/voice"
        extends="terminateFunctionOP_template"/>
      
      <!-- terminate Arcor Online (I1100) -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/*/*/internet"
        extends="terminateFunctionOP_template"/>
      
      <!-- terminate discount -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/order/termination/discount"
        extends="terminateFunctionOP_template"/>
      
      <RequestTemplate fif-request-name="createKBANotification"
        sourceWorkingPath="/*/*/functions/voice">
        <TemplateConditions>
          <base:IsMember value="ADD" sourceAttrName="processingType"/>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <base:IsMember value="mobile" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
          <base:IsMember value="cancelledOPM" sourceAttrName="../internet/completionStatusNewCcbId" />
        </TemplateConditions>        
        <RPMapping targetName="category" staticValue="MoreConnectCancellation" />
        <RPMapping targetName="notificationText" staticValue="Kündigung MoreConnect" />
        <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
        <RPMapping targetName="type" staticValue="CONTACT" />
      </RequestTemplate>
      
      <!-- tell the front end, whenever FIF has nothing left to process -->      
      <RequestTemplate fif-request-name="fifOrderComplete"
        sourceWorkingPath="/order">
        <TemplateConditions>
          <base:IsNotMember value="true" sourceAttrName="#:isOpenOPMOrder"/>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        </TemplateConditions>
        <RPMapping targetName="dummy" staticValue="dummy"/>
      </RequestTemplate>

      <!-- PPM155469 check, if billing has been been activated for product subscription -->
      <RequestTemplate fif-request-name="validateBillingActivated"
        sourceWorkingPath="/*/*/functions/*">       
        <TemplateConditions>
          <base:IsNotMember value="true" sourceAttrName="#:isOpenOPMOrder"/>
          <base:IsNotMember value="false" sourceAttrName="internal/validateBillingActivated"/>
          <base:IsMember value="false" sourceAttrName="#:isOrderCancelled"/>
          <base:IsMember value="true" sourceAttrName="#:billingActivationRelevant"/>
          <base:IsMember value="true" sourceAttrName="name() = 'internet' or name() = 'voice' or name() = 'tvCenter' or name() = 'safetyPackage'"/>
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']"         
                 method="configuredExisting"/>
      </RequestTemplate>

      <!-- creation of adjustments -->
      <RequestTemplate fif-request-name="createAdjustment"
        sourceWorkingPath="/*/*/adjustment">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <OrComposite>
            <AndComposite>
              <base:IsMember value="false" sourceAttrName="#:newVoiceMainAccess"/>              
              <OrComposite>
                <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
                <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              </OrComposite>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="false" sourceAttrName="#:newInternetMainAccess"/>              
              <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology"/>
              <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <base:Include fileIDRef="functionParameters" partIDRef="adjustmentParameters"/>
      </RequestTemplate>      

      <!-- creation of adjustments -->
      <RequestTemplate fif-request-name="createAdjustment"
        sourceWorkingPath="/*/*/adjustment">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <OrComposite>
            <AndComposite>
              <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures"/>
              <OrComposite>
                <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
                <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              </OrComposite>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
              <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures"/>
              <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology"/>
              <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <base:Include fileIDRef="functionParameters" partIDRef="adjustmentParameters"/>
      </RequestTemplate>
            
    </RequestListTemplate>
  </RootTemplate>

  <BaseTemplates>

    <AbstractTransformationTemplate ID="terminateFunction_template"
      extends="terminateFunctionBase_template">
      <TemplateConditions>
        <base:IsMember value="true" sourceAttrName="#:isOPMOrder"/>
        <OrComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:terminateInternet"/>
          </AndComposite>
          <!-- regular main access (ISDN, NGN, BIT, LTE) -->
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
            <base:IsNotMember value="sip" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
            <base:IsNotMember value="mobile" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
            <base:IsNotMember value="preselect" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/> 
            <base:IsMember value="true" sourceAttrName="#:terminateVoice"/>
          </AndComposite>
          <!-- IT-30283: change from preselect -->
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>            
            <base:IsMember value="preselect" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/> 
            <OrComposite>
              <base:IsMember value="noactionOPM" sourceAttrName="completionStatusOldCcbId"/>
              <base:IsMember value="noactionCOM" sourceAttrName="completionStatusOldCcbId"/>
            </OrComposite>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="TERM" sourceAttrName="processingType"/>
                <base:IsMember value="true" 
                  sourceAttrName="count(/*/*/functions/*[completionStatusOldCcbId = 'completedOPM' or
                  name(.) = 'voice' and completionStatusNewCcbId = 'completedOPM']) > 0"/>
              </AndComposite>
              <AndComposite>
                <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                <base:IsMember value="true" sourceAttrName="#:createVoice"/>
              </AndComposite>
            </OrComposite>
          </AndComposite>
          <!-- tvCenter -->          
          <AndComposite>
            <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:terminateTVCenter"/>
          </AndComposite>
          <!-- extraLine -->          
          <AndComposite>
            <base:IsMember value="extraLine" sourceAttrName="name(.)"/>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="TERM" sourceAttrName="processingType"/>
                <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
              </AndComposite>
              <AndComposite>
                <base:IsNotMember value="TERM" sourceAttrName="processingType"/>
                <base:IsMember value="cancelledOPM" sourceAttrName="completionStatusNewCcbId"/>
                <base:IsMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
              </AndComposite>
              <AndComposite>
                <base:IsNotMember value="TERM" sourceAttrName="processingType"/>
                <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
                <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
              </AndComposite>
              <!-- TODO theoretically termination of V0014 in relocation before termination of voice is missing -->
            </OrComposite>
          </AndComposite>
          
          <!-- mobileUsage -->          
          <AndComposite>
            <base:IsMember value="mobileUsage" sourceAttrName="name(.)"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
            <OrComposite>
              <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
              <AndComposite>
                <OrComposite>
                  <base:IsMember value="noactionOPM" sourceAttrName="completionStatusOldCcbId"/>
                  <base:IsMember value="noactionCCM" sourceAttrName="completionStatusOldCcbId"/>
                </OrComposite>
                <OrComposite>
                  <base:IsMember value="true" 
                    sourceAttrName="count(/*/*/functions/*[completionStatusOldCcbId = 'precompletedOPM']) > 0"/>
                  <base:IsMember value="true" 
                    sourceAttrName="count(/*/*/functions/*[completionStatusOldCcbId = 'completedOPM']) > 0"/>
                  <base:IsMember value="true" 
                    sourceAttrName="count(/*/*/functions/*[completionStatusOldCcbId = 'acknowledgedOPM']) = 0"/>               
                </OrComposite>
              </AndComposite>
            </OrComposite>
          </AndComposite>
          
          <!-- safetyPackage -->
          <AndComposite>
            <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
            <OrComposite>
              <AndComposite>
	            <OrComposite>
	              <base:IsMember value="TERM" sourceAttrName="processingType"/>
	              <AndComposite>
	                <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
	                <base:IsMember value="contractPartnerChange" sourceAttrName="name(../..)"/>
	              </AndComposite>
	            </OrComposite>
	            <OrComposite>
	              <AndComposite>
	                <base:IsMember value="noactionOPM" sourceAttrName="completionStatusOldCcbId"/>
	                <base:IsMember value="true" 
	                  sourceAttrName="count(/*/*/functions/*[completionStatusOldCcbId = 'completedOPM']) > 0"/>
	              </AndComposite>
	              <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
	            </OrComposite>
	          </AndComposite>
	          <!-- IT-k-33425 terminate safety package, if line gets cancelled and safetyPackage would remain alone in bundle -->
	          <base:IsMember value="true" sourceAttrName="#:terminateSafetyPackageOnCancellation"/>
	        </OrComposite>
          </AndComposite>
          <!-- dependent functions are all handled the same way -->
          <AndComposite>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="hardware" sourceAttrName="name(.)"/>
                <OrComposite>
                	<base:IsMember value="I1359" sourceAttrName="*/hardwareServiceCode/existing"/>
                	<base:IsExisting sourceAttrName="rentedHardwareConfiguration"/>
                </OrComposite>
              </AndComposite>
              <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
              <base:IsMember value="installationSvc" sourceAttrName="name(.)"/>
               <base:IsMember value="mobileUsage" sourceAttrName="name(.)"/>
            </OrComposite>
            <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
            <OrComposite>
              <!-- allow HW termination, if parent is not terminated or cloned -->
              <AndComposite>             
                <base:IsNotMember value="TERM" sourceAttrName="../*[@ID = '${refFunctionID/existing}']/processingType"/>
                <base:IsNotMember value="true" sourceAttrName="
                  count(../voice[@ID = '${refFunctionID/existing}']) > 0 and '${#:newVoiceMainAccess}' = 'true'
                  or count(../internet[@ID = '${refFunctionID/existing}']) > 0 and '${#:newInternetMainAccess}' = 'true'"/>
              </AndComposite>
              <!-- if parent is terminated or cloned, also check its status -->
              <AndComposite>
                <base:IsNotMember value="completedOPM" sourceAttrName="../*[@ID = '${refFunctionID/existing}']/completionStatusOldCcbId"/>
                <base:IsNotMember value="completedCCM" sourceAttrName="../*[@ID = '${refFunctionID/existing}']/completionStatusOldCcbId"/>
              </AndComposite>
            </OrComposite>            
          </AndComposite>
          <!-- termination of directoryEntry in case of changed directoryEntry -->          
          <AndComposite>
            <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
            <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
            <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
            <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
            <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
          </AndComposite>          
          <!-- discounts are only expected in terminations, do termination together with access then -->
          <AndComposite>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
            <base:IsMember value="discount" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:isOPMOrder"/>
            <base:IsMember value="true" sourceAttrName="#:terminateVoice"/>
          </AndComposite>        
        </OrComposite>
      </TemplateConditions>
      <RPMapping targetName="processingStatus" staticValue="completedOPM" />
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
            <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
            <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="isMovedService" staticValue="Y"/>
      </TransformationTemplate>
      
      <!-- omit actual termination in the following scenarios -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="extraLine" sourceAttrName="name(.)"/>
          <OrComposite>
            <!-- explicit termination of extraLine for already terminated parent -->
            <AndComposite>
              <base:IsMember value="TERM" sourceAttrName="processingType"/>
              <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
              <OrComposite>
                <base:IsMember value="completedOPM" sourceAttrName="../voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId"/>
                <base:IsMember value="completedCCM" sourceAttrName="../voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId"/>
              </OrComposite>
              <OrComposite>
                <base:IsMember value="TERM" sourceAttrName="../voice[@ID = '${#:mainVoiceFunctionID}']/processingType"/>
                <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              </OrComposite>                
            </AndComposite>
            <!-- implicit termination in case of a clone scenario -->
            <AndComposite>
              <base:IsNotMember value="TERM" sourceAttrName="processingType"/>
              <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
              <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
              <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              <OrComposite>
                <base:IsMember value="completedOPM" sourceAttrName="../voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId"/>
                <base:IsMember value="completedCCM" sourceAttrName="../voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId"/>
              </OrComposite>
            </AndComposite>
            <!-- termination after cancellation of precompleted line -->
            <AndComposite>
              <base:IsNotMember value="TERM" sourceAttrName="processingType"/>
              <base:IsMember value="cancelledOPM" sourceAttrName="completionStatusNewCcbId"/>
              <base:IsMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
              <OrComposite>
                <base:IsMember value="cancelledOPM" sourceAttrName="../voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId"/>
                <base:IsMember value="cancelledCCM" sourceAttrName="../voice[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId"/>
              </OrComposite>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="documentationOnly" staticValue="Y"/>
      </TransformationTemplate>    
      <!-- omit actual termination in the following scenarios -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="mobileUsage" sourceAttrName="name(.)"/>
          <OrComposite>
            <!-- explicit termination of extraLine for already terminated parent -->
            <AndComposite>
              <base:IsMember value="TERM" sourceAttrName="processingType"/>
              <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
              <OrComposite>
                <base:IsMember value="completedOPM" sourceAttrName="../*[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId"/>
                <base:IsMember value="completedCCM" sourceAttrName="../*[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId"/>
              </OrComposite>
              <OrComposite>
                <base:IsMember value="TERM" sourceAttrName="../*[@ID = '${#:mainVoiceFunctionID}']/processingType"/>
                <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
              </OrComposite>                
            </AndComposite>
            <!-- implicit termination in case of a clone scenario -->
            <AndComposite>
              <base:IsNotMember value="TERM" sourceAttrName="processingType"/>
              <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
              <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
              <OrComposite>
              	<base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              	<base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
              </OrComposite>
              <OrComposite>
                <base:IsMember value="completedOPM" sourceAttrName="../*[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId"/>
                <base:IsMember value="completedCCM" sourceAttrName="../*[@ID = '${#:mainVoiceFunctionID}']/completionStatusOldCcbId"/>
              </OrComposite>
            </AndComposite>
            <!-- termination after cancellation of precompleted line -->
            <AndComposite>
              <base:IsNotMember value="TERM" sourceAttrName="processingType"/>
              <base:IsMember value="cancelledOPM" sourceAttrName="completionStatusNewCcbId"/>
              <base:IsMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
              <OrComposite>
                <base:IsMember value="cancelledOPM" sourceAttrName="../*[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId"/>
                <base:IsMember value="cancelledCCM" sourceAttrName="../*[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId"/>
              </OrComposite>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="documentationOnly" staticValue="Y"/>
      </TransformationTemplate>            
              
      
      <base:Include fileIDRef="functionParameters" partIDRef="reason"/>       
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="terminateFunctionOP_template"
      extends="terminateFunctionBase_template">
      <TemplateConditions>
        <base:IsNotMember value="true" sourceAttrName="#:isOPMOrder"/>
        <OrComposite>
          <base:IsMember value="noactionOPM" sourceAttrName="completionStatusOldCcbId"/>
          <base:IsMember value="noactionCOM" sourceAttrName="completionStatusOldCcbId"/>
        </OrComposite>
        <base:IsMember value="TERM" sourceAttrName="processingType"/>
        <OrComposite>
          <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
            <OrComposite>
              <base:IsMember value="isdn" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
              <base:IsMember value="isdnP2P" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
            </OrComposite> 
          </AndComposite>
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
            <base:IsMember value="preselect" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/> 
          </AndComposite>
          <base:IsMember value="discount" sourceAttrName="name(.)"/>
        </OrComposite>
      </TemplateConditions>      
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="TERM" sourceAttrName="processingType"/>
        </TemplateConditions>
        <RPMapping sourceAttrName="../../desiredDate" 
          targetName="terminationDate"
          formatter="SOMToCCBDateFormatter" />        
      </TransformationTemplate>
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="terminateFunctionMobile_template"
      extends="terminateFunctionBase_template">
        <TemplateConditions>
          <base:IsExisting sourceAttrName="../../accesses/mobile[@ID = '${@refAccessID}']" />
          <base:IsMember value="true" sourceAttrName="
          */pricingStructureCode/existing = 'V8000' or 
          */pricingStructureCode/existing = 'V8001' or 
          */pricingStructureCode/existing = 'V8002' or 
          */pricingStructureCode/existing = 'V8003' or 
          */pricingStructureCode/existing = 'V8004' or 
          */pricingStructureCode/existing = 'V8005' or 
          */pricingStructureCode/existing = 'V8006' or 
          */pricingStructureCode/existing = 'V8007' or 
          */pricingStructureCode/existing = 'V8008' or 
          */pricingStructureCode/existing = 'V8011' or 
          */pricingStructureCode/existing = 'V8012' or 
          */pricingStructureCode/existing = 'V8013' or 
          */pricingStructureCode/existing = 'V8017' or 
          */pricingStructureCode/existing = 'V8019' or 
          */pricingStructureCode/existing = 'V8020'" />
          <OrComposite>
            <base:IsMember value="noactionOPM" sourceAttrName="completionStatusOldCcbId"/>
            <base:IsMember value="noactionCOM" sourceAttrName="completionStatusOldCcbId"/>
          </OrComposite>
          <OrComposite>
            <base:IsMember value="TERM" sourceAttrName="processingType" />
            <AndComposite>
              <base:IsMember value="IGNORE" sourceAttrName="processingType" />
              <OrComposite>
              	<AndComposite>
              	  <base:IsMember value="TERM" sourceAttrName="../voice[@refAccessID = '${#:currentMainAccessID}']/processingType" />
              	  <base:IsMember value="true" sourceAttrName="
              	  	../voice[@refAccessID = '${#:currentMainAccessID}']/completionStatusOldCcbId = 'completedCCM' or
              	  	../voice[@refAccessID = '${#:currentMainAccessID}']/completionStatusOldCcbId = 'completedOPM'" />
              	</AndComposite>
              	<AndComposite>
              	  <base:IsMember value="TERM" sourceAttrName="../internet[@refAccessID = '${#:currentMainAccessID}']/processingType" />
              	  <base:IsMember value="true" sourceAttrName="
              	  	../internet[@refAccessID = '${#:currentMainAccessID}']/completionStatusOldCcbId = 'completedCCM' or
              	  	../internet[@refAccessID = '${#:currentMainAccessID}']/completionStatusOldCcbId = 'completedOPM'" />
              	</AndComposite>              	
              </OrComposite>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <RPMapping staticValue="completedOPM" targetName="processingStatus"/>
      </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="terminateFunctionBase_template">
      <TemplateConditions>
        <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
      </TemplateConditions>    
      <base:DataBufferWriter keyValue="fifActionTriggered" staticValue="true" />  
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
            <base:IsMember value="seat" sourceAttrName="name(.)"/>
            <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
            <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
            <base:IsMember value="vod" sourceAttrName="name(.)"/>
            <base:IsMember value="iptv" sourceAttrName="name(.)"/>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="isContractFunction" staticValue="Y"/>
      </TransformationTemplate>
      
      <RPMapping targetName="terminateProductSubscription" 
        sourceAttrName="*/keepProductSubscriptionIndicator"
        method="configuredExisting"
        decoding="'true', 'N', 'Y'"/>
      
      <!-- termination because of a cancellation of a precompleted line -->
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <AndComposite>
              <base:IsMember value="cancelledOPM" sourceAttrName="completionStatusNewCcbId"/>
              <base:IsMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
              <base:IsMember value="true" sourceAttrName="#:terminateSafetyPackageOnCancellation"/>
            </AndComposite>            
          </OrComposite>
        </TemplateConditions>
        
        <RPMapping sourceAttrName="ccbId[@type='S']" targetName="serviceSubscriptionId" method="configuredExisting"/>
        
        <!-- population terminationReason from cancellationReasonCodeNewCcbId -->
        <TransformationTemplate>
          <TemplateConditions>
            <OrComposite>
              <base:IsMember value="" sourceAttrName="cancellationReasonCodeNewCcbId"/>
              <base:IsNotExisting sourceAttrName="cancellationReasonCodeNewCcbId"/>
            </OrComposite>
          </TemplateConditions>
          <RPMapping targetName="terminationReason" staticValue="SON"/> 
        </TransformationTemplate> 
        
        <TransformationTemplate>
          <TemplateConditions>
            <AndComposite>
              <base:IsNotMember value="" sourceAttrName="cancellationReasonCodeNewCcbId"/>
              <base:IsExisting sourceAttrName="cancellationReasonCodeNewCcbId"/>
            </AndComposite>
          </TemplateConditions>
          <RPMapping targetName="terminationReason" sourceAttrName="cancellationReasonCodeNewCcbId"/>
        </TransformationTemplate>
        
      </TransformationTemplate>

      <!-- regular termination -->
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:IsNotMember value="cancelledOPM" sourceAttrName="completionStatusNewCcbId"/>
            <base:IsNotMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
          </OrComposite>
          <OrComposite>
            <base:IsNotMember value="safetyPackage" sourceAttrName="name(.)"/>
            <base:IsNotMember value="true" sourceAttrName="#:terminateSafetyPackageOnCancellation"/>          
          </OrComposite>
        </TemplateConditions>
        <RPMapping sourceAttrName="ccbId[@type='S']/existing" targetName="serviceSubscriptionId"/>
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="terminationReasonCode" />
          </TemplateConditions>
          <RPMapping targetName="terminationReason" sourceAttrName="terminationReasonCode" />        
        </TransformationTemplate>        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="terminationReasonCode" />
            <base:IsMember value="termination" sourceAttrName="name(../..)"/>
          </TemplateConditions>
          <RPMapping targetName="terminationReason" sourceAttrName="../../terminationReasonCode"/>
        </TransformationTemplate>
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="terminationReasonCode" />
            <base:IsNotMember value="termination" sourceAttrName="name(../..)"/>
          </TemplateConditions>
          <RPMapping targetName="terminationReason"
            sourceAttrName="#:scenarioType"
            decoding="
            'relocation', 'UMZ', 
            'contractPartnerChange', 'VPW', 
            'technologyChange', 'AGKTW', 
            'productTypeChangeToBasis', 'AGKTW', 
            'productTypeChangeToPremium', 'AGKTW', 
            'simple', 'SON',
            'SON'"/>
        </TransformationTemplate>
        
        <base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberTermination"/>        
      </TransformationTemplate>
      <RPMapping sourceAttrName="@ID" targetName="functionID"/>
      <RPMapping sourceAttrName="/order/*/orderReceivedDate" targetName="noticePeriodStartDate"
        formatter="SOMToCCBDateFormatter"/>      
      
      <TransformationTemplate>
        <TemplateConditions>
            <base:IsExisting sourceAttrName="productCommitmentNumber/existing" />
            <base:IsExisting sourceAttrName="productCommitmentNumber/configured" />
            <base:IsMember value="true" sourceAttrName="productCommitmentNumber/existing = productCommitmentNumber/configured" />
        </TemplateConditions>
        <RPMapping targetName="terminateContract" staticValue="N" />
      </TransformationTemplate>      

    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="reconfigureFunction_template"
      extends="reconfigureFunctionBase_template">
      <TemplateConditions>
        <OrComposite>
          <base:IsNotMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>    
          <base:IsNotMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>
        </OrComposite>    
      </TemplateConditions>      
    </AbstractTransformationTemplate>
    
    <!-- setting of DTAG parameters only when changing from precompletedCCM to completedOPM -->
    <AbstractTransformationTemplate ID="reconfigureFunctionPrecompleted_template"
      extends="reconfigureFunctionBase_template">
      <TemplateConditions>
        <base:IsMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>    
        <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>    
      </TemplateConditions>
      
      <!-- voice or internet -->
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
          </OrComposite>
        </TemplateConditions>        
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/*[starts-with(name(.), 'DTAG')] |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/*[starts-with(name(.), 'DTAG')] |
            ../../accesses/*[@ID = '${@refAccessID}']/*/*[starts-with(name(.), 'provider')] |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/*[starts-with(name(.), 'provider')]">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>        
      </TransformationTemplate>
      <!-- extraLine -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="extraLine" sourceAttrName="name(.)"/>
        </TemplateConditions>        
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="*/*[starts-with(name(.), 'provider')] | */*[starts-with(name(.), 'DTAG')] | */cancellationIndicator">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>        
      </TransformationTemplate>
      <!-- directoryEntry -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
        </TemplateConditions>        
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="*/dtagId">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>        
      </TransformationTemplate>
      
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="internet" sourceAttrName="name(.)"/>
          <OrComposite>
            <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
            <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
          </OrComposite>
        </TemplateConditions>        
        <RPMapping targetName="skipReconfiguration" staticValue="Y" />        
      </TransformationTemplate>
      
    </AbstractTransformationTemplate>    
    
    <AbstractTransformationTemplate ID="reconfigureFunctionBase_template">
      <TemplateConditions>
        <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        <OrComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
            <OrComposite>
            	<base:IsMember value="true" sourceAttrName="#:reconfigureInternet"/>
            	<base:IsMember value="true" sourceAttrName="#:reconfigurePrecompletedInternet"/>
            </OrComposite>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
            <base:IsNotMember value="customerChange" sourceAttrName="name(../..)"/>
            <OrComposite>
	            <base:IsMember value="true" sourceAttrName="#:reconfigureVoice"/>
	           	<base:IsMember value="true" sourceAttrName="#:reconfigurePrecompletedVoice"/>
           	</OrComposite>
            <base:IsMember value="true" 
              sourceAttrName="@refAccessID = '${#:targetAccessID}' or @targetAccessID = '${#:targetAccessID}'"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
            <base:IsMember value="customerChange" sourceAttrName="name(../..)"/>
            <base:IsMember value="true" sourceAttrName="#:reconfigureInternet"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="extraLine" sourceAttrName="name(.)"/>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="ADD" sourceAttrName="processingType"/>
                <OrComposite>
                	<base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>
                	<base:IsMember value="precompletedOPM" sourceAttrName="completionStatusNewCcbId"/>
                </OrComposite>
                <base:IsMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
              </AndComposite>
              <AndComposite>
                <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
              </AndComposite>
            </OrComposite>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="hardware" sourceAttrName="name(.)"/>
            <base:IsNotExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
            <base:IsMember value="completedOPM" sourceAttrName="processingStatus"/>
            <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="
                  '${name(/*/*/functions/*[@ID='${refFunctionID/existing}'])}' = 'voice'"/>                
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              </AndComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="
                  '${name(/*/*/functions/*[@ID='${refFunctionID/existing}'])}' = 'internet'"/>                
                <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess"/>
                <!-- IT-31108: always wait for parent function with reconfiguration, implemented for LTE SIM swap -->
                <OrComposite>
                  <base:IsMember value="completedOPM" sourceAttrName="../internet[@ID='${refFunctionID/existing}']/completionStatusOldCcbId"/>
                  <base:IsMember value="completedCCM" sourceAttrName="../internet[@ID='${refFunctionID/existing}']/completionStatusOldCcbId"/>
                  <base:IsMember value="noactionCOM" sourceAttrName="../internet[@ID='${refFunctionID/existing}']/completionStatusOldCcbId"/>
                  <base:IsMember value="noactionOPM" sourceAttrName="../internet[@ID='${refFunctionID/existing}']/completionStatusOldCcbId"/>
                  <base:IsMember value="acknowledgedCCM" sourceAttrName="../internet[@ID='${refFunctionID/existing}']/completionStatusOldCcbId"/>
                  <base:IsNotExisting sourceAttrName="../internet[@ID='${refFunctionID/existing}']/completionStatusOldCcbId"/>
                </OrComposite>
              </AndComposite>
            </OrComposite>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
            <OrComposite>
              <!-- message from DTAG with DTAG-ID -->
              <AndComposite>
                <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>
                <base:IsMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
              </AndComposite>
              <!-- changed directoryEntry (IT-31476) -->
              <AndComposite>
                <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                <base:IsNotExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
                <OrComposite>
                  <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
                  <base:IsMember value="precompletedOPM" sourceAttrName="completionStatusOldCcbId"/>
                </OrComposite>
              </AndComposite>              
            </OrComposite>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:reconfigureTVCenter"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
            <base:IsNotExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
            <base:IsMember value="CHANGE" sourceAttrName="processingType"/>            
            <base:IsMember value="true" sourceAttrName="#:safetyPackageReadyForFeatures"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="mobileUsage" sourceAttrName="name(.)"/>
            <base:IsNotExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
            <base:IsMember value="completedOPM" sourceAttrName="processingStatus"/>
            <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="
                  '${name(/*/*/functions/*[@ID='${refFunctionID/existing}'])}' = 'voice'"/>                
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              </AndComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="
                  '${name(/*/*/functions/*[@ID='${refFunctionID/existing}'])}' = 'internet'"/>                
                <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess"/>
              </AndComposite>
            </OrComposite>
          </AndComposite>
        </OrComposite>
      </TemplateConditions>

      <base:DataBufferWriter keyValue="fifActionTriggered" staticValue="true" />
      <RPMapping targetName="serviceSubscriptionId"
        sourceAttrName="ccbId[@type='S']"         
        method="configuredExisting"/>
      <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>
      <RPMapping targetName="processingStatus" staticValue="completedOPM" />
      <RPMapping targetName="functionID" sourceAttrName="@ID" />
      <RPMapping targetName="activationDate" sourceAttrName="resultDate"
        formatter="SOMToCCBDateFormatter"/>

      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="../../parentBarcode"/>
        </TemplateConditions>        
        <RPMapping targetName="OMTSOrderID"
          sourceAttrName="../../parentBarcode"/>
      </TransformationTemplate>
      
      <!-- 
        1) avoid setting PTN for create/reconfigure scenario in case of precompleted orders
        2) don't set PTN in the scenario of two sets of states for only one ccbId (IT-k-33552)
      -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsNotExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
	      <OrComposite>
        	<base:IsNotMember value="true" sourceAttrName="#:reconfigurePrecompletedInternet"/>
        	<base:IsNotMember value="internet" sourceAttrName="name(.)"/>
		  </OrComposite>
          <OrComposite>
          	<base:IsNotMember value="true" sourceAttrName="#:reconfigurePrecompletedVoice"/>
          	<base:IsNotMember value="voice" sourceAttrName="name(.)"/>
          </OrComposite>          
        </TemplateConditions>
        <base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberTermination"/>
      </TransformationTemplate>            

      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="refFunctionID"/>
        </TemplateConditions>
        <RPMapping targetName="productCode"
          sourceAttrName="../*[@ID = '${refFunctionID/existing}']*/productCode/existing"/>
      </TransformationTemplate>
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsNotExisting sourceAttrName="refFunctionID"/>
        </TemplateConditions>
        <RPMapping targetName="productCode" 
          sourceAttrName="*/productCode"
          method="configuredExisting" />
      </TransformationTemplate>
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate 
      ID="reconfigureFunctionInternet_template"
      extends="reconfigureFunction_template">
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
            <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
          </OrComposite>
        </TemplateConditions>        
        <RPMapping targetName="skipReconfiguration" staticValue="Y" />        
      </TransformationTemplate>
    </AbstractTransformationTemplate>
    
    <base:Include fileIDRef="functionParameters" partIDRef="featuresTemplates"/>

    <AbstractTransformationTemplate ID="modifyFeatures_template">
      <TemplateConditions>        
        <base:IsNotMember value="true" sourceAttrName="#:errorRaised"/>       
        <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        <!-- features for internet function -->                  
        <OrComposite>
          <AndComposite>            
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures"/>
          </AndComposite>
          <!-- features for voice function -->
          <AndComposite>            
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures"/>
          </AndComposite>
          <!-- safetyPackage, no limitations -->
          <AndComposite>            
            <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:safetyPackageReadyForFeatures"/>  
          </AndComposite>
          <!-- tvCenter -->
          <AndComposite>            
            <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:tvCenterReadyForFeatures"/>
          </AndComposite>
          
          <!-- features for hardware function -->
          <AndComposite>            
            <base:IsMember value="hardware" sourceAttrName="name(.)"/>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="ADD" sourceAttrName="processingType"/>
                <base:IsMember value="completedOPM" sourceAttrName="processingStatus"/>    
              </AndComposite>
              <AndComposite>
                <OrComposite>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                  <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
                </OrComposite>
                <OrComposite>
                  <base:IsMember value="completedOPM" sourceAttrName="processingStatus"/>
                  <base:IsMember value="noactionOPM" sourceAttrName="processingStatus"/>
                  <base:IsMember value="noactionCOM" sourceAttrName="processingStatus"/>
                </OrComposite>
              </AndComposite>
            </OrComposite>                        
            <OrComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="
                  '${name(/*/*/functions/*[@ID='${refFunctionID/configured}'])}' = 'internet' or 
                  '${name(/*/*/functions/*[@ID='${refFunctionID/existing}'])}' = 'internet'"/>
                <base:IsMember value="true" sourceAttrName="#:internetReadyForDependentFunctions" /> 
                <OrComposite>
                  <base:IsMember value="ADD" sourceAttrName="processingType"/>
                  <base:Include fileIDRef="functionParameters" partIDRef="hardwareServiceByTechnology"/>
                </OrComposite>                
              </AndComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="
                  '${name(/*/*/functions/*[@ID='${refFunctionID/configured}'])}' = 'voice' or 
                  '${name(/*/*/functions/*[@ID='${refFunctionID/existing}'])}' = 'voice'"/>
                <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions" />
                <OrComposite>
                  <base:IsMember value="ADD" sourceAttrName="processingType"/>
                  <base:Include fileIDRef="functionParameters" partIDRef="hardwareServiceByTechnology"/>
                </OrComposite>                
              </AndComposite>              
            </OrComposite>
          </AndComposite>          
        </OrComposite>          
      </TemplateConditions>

      <base:DataBufferWriter keyValue="fifActionTriggered" staticValue="true" />
      
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:Include fileIDRef="functionParameters" partIDRef="isMovedService"/>
          </OrComposite>
        </TemplateConditions>
        <RPMapping staticValue="Y" targetName="isMovedService"/>
      </TransformationTemplate>

      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="../../parentBarcode"/>
        </TemplateConditions>        
        <RPMapping targetName="OMTSOrderID"
          sourceAttrName="../../parentBarcode"/>
      </TransformationTemplate>      
      <RPMapping targetName="serviceSubscriptionId"
        sourceAttrName="ccbId[@type='S']"         
        method="configuredExisting"/>
      <RPMapping targetName="functionID" sourceAttrName="@ID" />      
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="modifyFeaturesInstallationFees_template"
      extends="modifyFeatures_template">
      <TemplateConditions>
        <OrComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="
              '${#:targetTechnology}' != 'ISDN' and 
              '${#:targetTechnology}' != 'ISDNP2P'"/>
            <base:IsNotExisting sourceAttrName="ccbId[@type='S']/existing"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
            <base:IsNotExisting sourceAttrName="ccbId[@type='S']/existing"/>
          </AndComposite>
          <!-- for DSL-Einrichtungspreis V0134 -->
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
			<base:IsMember value="true" sourceAttrName="@ID = '${#:mainVoiceFunctionID}'"/>
            <base:IsNotMember value="mobile" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
            <base:IsNotMember value="sip" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
            <base:IsMember value="true" sourceAttrName="
              '${#:targetTechnology}' = 'ISDN' or 
              '${#:targetTechnology}' = 'ISDNP2P'"/>
            <!-- target has DSL -->
            <base:IsExisting sourceAttrName="../internet/*/DSLBandwidth/configured"/>
            <OrComposite>
              <!-- new line -->
              <base:IsNotExisting sourceAttrName="ccbId[@type='S']/existing"/>
              <!-- change from old non-TAL products to ISDN -->  
              <base:IsMember value="true" sourceAttrName="
                '${#:currentTechnology}' = 'DSLR-SIP' or
                '${#:currentTechnology}' = 'DSLR-Only' or
                '${#:currentTechnology}' = 'preselect'"/>
            </OrComposite>
          </AndComposite>
        </OrComposite>
      </TemplateConditions>
      <TransformationTemplate>
        <RPListTemplate listName="configuredServiceList">
          <RPListItemTemplate>
            <RPMapping targetName="serviceCode" 
              sourceAttrName="name(.)"
              decoding="'internet', 'V0083', 'tvCenter', 'I1357', 'voice', 'V0134'" />
          </RPListItemTemplate>
        </RPListTemplate>
        <base:DataBufferWriter keyValue="listType" staticValue="installationFees" />
        <RPMapping targetName="listType" sourceAttrName="#:listType" />
		<base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>
        <RPMapping targetName="ignoreDuplicates" staticValue="Y" />
      </TransformationTemplate>
      
    </AbstractTransformationTemplate>
    
    <!-- setup fee for VDSL 100.000 ( = V018N) -->
    <AbstractTransformationTemplate ID="modifyFeaturesVDSLSetupFee_template"
      extends="modifyFeatures_template">
      <TemplateConditions>
        <base:IsMember value="internet" sourceAttrName="name(.)"/>
        <base:IsMember value="BitStream" sourceAttrName="#:targetTechnology"/>
        <base:IsMember value="V018N" sourceAttrName="*/DSLBandwidth/configured"/>
        <OrComposite>
        	<base:IsNotExisting sourceAttrName="*/DSLBandwidth/existing"/>
        	<base:IsNotMember value="V018N" sourceAttrName="*/DSLBandwidth/existing"/>
        </OrComposite>
      </TemplateConditions>
      <TransformationTemplate>
        <RPListTemplate listName="configuredServiceList">
          <RPListItemTemplate>
            <RPMapping targetName="serviceCode" staticValue="I1055" />
          </RPListItemTemplate>
        </RPListTemplate>
        <base:DataBufferWriter keyValue="listType" staticValue="VDSLSetupFee" />
        <RPMapping targetName="listType" sourceAttrName="#:listType" />
		<base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>
        <RPMapping targetName="ignoreDuplicates" staticValue="Y" />
      </TransformationTemplate>
    </AbstractTransformationTemplate>    

    <!-- ****************************************************************** -->

    <!-- standalone functions (functions with an own contract) START -->
    <AbstractTransformationTemplate ID="standaloneContractFunctionCreation_template"
      extends="baseFunctionCreation_template">
      <RPMapping targetName="futureIndicator" staticValue="Y" />
      <base:Include fileIDRef="functionParameters" partIDRef="contractFunctionParameters"/>
      
      <RPMapping targetName="processingStatus" 
        sourceAttrName="completionStatusNewCcbId"
        decoding="'noactionOPM', '', 'completedOPM'"/>

      <base:Include fileIDRef="functionParameters" partIDRef="reason"/>

      
      <!-- PPM155469 don't activate billing for precompletedOPM  -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="true" sourceAttrName="#:billingActivationRelevant"/>
          <OrComposite>
            <AndComposite>
             <OrComposite>
               <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
               <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
             </OrComposite>
             <base:IsMember value="precompletedOPM" sourceAttrName="../../functions/*[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId"/>
            </AndComposite>
            <AndComposite>
             <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology"/>
             <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
             <base:IsMember value="precompletedOPM" sourceAttrName="../../functions/*[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId"/>
            </AndComposite>
          </OrComposite>
          <OrComposite>
            <AndComposite>
              <OrComposite>
              <base:IsExisting sourceAttrName="../../accesses/*[@ID = '${#:targetAccessID}']/*/providerCompletionDate/configured"/>
              <base:IsExisting sourceAttrName="../../accesses/*[@ID = '${#:targetAccessID}']/*/DTAGCompletionDate"/>
              </OrComposite>
              <OrComposite>
              <base:IsMember value="true" sourceAttrName="../../accesses/*[@ID = '${#:targetAccessID}']/*/providerCompletionDate/configured = ''"/>
              <base:IsMember value="true" sourceAttrName="../../accesses/*[@ID = '${#:targetAccessID}']/*/DTAGCompletionDate = ''"/>
              </OrComposite>
            </AndComposite>
            <OrComposite>
            <base:IsNotExisting sourceAttrName="../../accesses/*[@ID = '${#:targetAccessID}']/*/providerCompletionDate/configured"/>
          	<base:IsNotExisting sourceAttrName="../../accesses/*[@ID = '${#:targetAccessID}']/*/DTAGCompletionDate"/>
          	</OrComposite>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="suppressBillingActivation" staticValue="Y" />
      </TransformationTemplate>


      <!-- use the complex detailed reasons from the old clone 
        scenarios, but only for voice and internet -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="ccbId[@type = 'S']/existing"/>
          <OrComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
          </OrComposite>
        </TemplateConditions>

        <TransformationTemplate>
          <TemplateConditions>
            <base:IsMember value="contractPartnerChange" sourceAttrName="#:scenarioType"/>
          </TemplateConditions>
          <RPMapping targetName="detailedReason" staticValue="TAKEOVERCONTRACT" />          
        </TransformationTemplate>   
        
        <TransformationTemplate>
          <TemplateConditions>
            <OrComposite>
              <base:IsMember value="relocation" sourceAttrName="#:scenarioType"/>
              <base:IsMember value="technologyChange" sourceAttrName="#:scenarioType"/>
              <base:IsMember value="productTypeChangeToBasis" sourceAttrName="#:scenarioType"/>
              <base:IsMember value="productTypeChangeToPremium" sourceAttrName="#:scenarioType"/>
            </OrComposite>
          </TemplateConditions>
          <!-- detailedReason -->
          <base:DataBufferWriter keyValue="detailedReasonRelocation" sourceAttrName="#:isRelocation" 
            decoding="'true', 'RL_', ''" />
          <base:DataBufferWriter keyValue="detailedReasonTechnologyChange" sourceAttrName="#:isTechnologyChange" 
            decoding="'true', 'TC_', ''" />
          <base:DataBufferWriter keyValue="detailedReasonProductTypeChange" sourceAttrName="#:isProductTypeChange" 
            decoding="'true', 'PC_', ''" />
          <base:DataBufferWriter keyValue="detailedReasonCurrentTechnology" sourceAttrName="#:currentTechnology" 
            decoding="
            'ISDN', 'I', 
            'ISDNP2P', 'I', 
            'NGN', 'N', 
            'FTTx', 'F', 
            'FTTH', 'F', 
            'BitStream', 'B', 
            'LTE', 'L', 
            'preselect', 'P', 
            'DSLR-SIP', 'D',
            'DSLR-Only', 'D'" />
          <base:DataBufferWriter keyValue="detailedReasonCurrentProductType" sourceAttrName="#:currentProductType" 
            decoding="'Basis', 'B', 'Premium', 'P'" />        
          <base:DataBufferWriter keyValue="detailedReasonTargetTechnology" sourceAttrName="#:targetTechnology" 
            decoding="
            'ISDN', 'I', 
            'ISDNP2P', 'I', 
            'NGN', 'N', 
            'FTTx', 'F', 
            'FTTH', 'F', 
            'BitStream', 'B', 
            'LTE', 'L', 
            'preselect', 'P', 
            'DSLR-SIP', 'D',
            'DSLR-Only', 'D'" />
          <base:DataBufferWriter keyValue="detailedReasonTargetProductType" sourceAttrName="#:targetProductType" 
            decoding="'Basis', 'B', 'Premium', 'P'" />        
          <RPMapping targetName="detailedReason"
            sourceAttrName="concat(
            '${#:detailedReasonRelocation}',
            '${#:detailedReasonTechnologyChange}',
            '${#:detailedReasonProductTypeChange}',
            '${#:detailedReasonCurrentTechnology}',
            '${#:detailedReasonCurrentProductType}',
            '-',
            '${#:detailedReasonTargetTechnology}',
            '${#:detailedReasonTargetProductType}')" />
        </TransformationTemplate>
      </TransformationTemplate>
                        
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="safetyPackageCreation_template"
      extends="standaloneContractFunctionCreation_template">
      <TemplateConditions>
        <base:IsMember value="true" sourceAttrName="#:internetReadyForDependentFunctions"/>
        <OrComposite>
          <base:IsMember value="noactionOPM" sourceAttrName="completionStatusNewCcbId"/>
          <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>
        </OrComposite>
      </TemplateConditions>      
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate
          sourceWorkingPath="safetyPackageConfiguration/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
        <RPListItemTemplate>
          <RPMapping targetName="parameterName" staticValue="activationDate" />
          <RPMapping targetName="configuredValue" staticValue="today" />
        </RPListItemTemplate>        
      </RPListTemplate>            
    </AbstractTransformationTemplate>
  <!-- standalone functions (functions with an own contract) END -->

    <!-- ****************************************************************** -->

    <!-- Voice creation START -->
    <AbstractTransformationTemplate ID="VoiceCreation_template"
      extends="standaloneContractFunctionCreation_template">
      <TemplateConditions>
        <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
        <base:IsMember value="true" sourceAttrName="#:createVoice"/>
        <base:IsMember value="true" 
          sourceAttrName="@refAccessID = '${#:targetAccessID}' or @targetAccessID = '${#:targetAccessID}'"/>
      </TemplateConditions>
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate
          sourceWorkingPath="
          ../../accesses/*[@ID = '${@refAccessID}']/*/* |
          ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
          voicePremiumConfiguration/* |
          voiceBasisConfiguration/* |
          */portingAccessNumbers/* | 
          */portingAccessNumberRanges/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
        <RPListItemTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="../../beneficiary/targetCustomerNodeRefID"/>
          </TemplateConditions>
          <RPMapping targetName="parameterName" staticValue="oldCustomerNumber"/>
          <RPMapping targetName="configuredValue" sourceAttrName="#:customerNumber"/>
        </RPListItemTemplate>        
        <base:Include fileIDRef="functionParameters" partIDRef="isdnInternetParameters"/>
        <base:Include fileIDRef="functionParameters" partIDRef="instantAccessForReconfiguration"/> 
        <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>         
      </RPListTemplate>

    </AbstractTransformationTemplate>
    <!-- Voice creation END -->

    <!-- Internet creation START -->
    <AbstractTransformationTemplate ID="InternetCreation_template"
      extends="standaloneContractFunctionCreation_template">
      <TemplateConditions>
        <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
        <base:IsMember value="true" sourceAttrName="#:createInternet"/>
      </TemplateConditions>

      <RPListTemplate listName="parameterList">
        <RPListItemTemplate
          sourceWorkingPath="
          ../../relocationVariant |
          ../../accesses/*[@ID = '${@refAccessID}']/*/* |
          ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
          adslInternetConfiguration/* |
          fttxInternetConfiguration/* |
          fibreInternetConfiguration/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
        <RPListItemTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="../../beneficiary/targetCustomerNodeRefID"/>
          </TemplateConditions>
          <RPMapping targetName="parameterName" staticValue="oldCustomerNumber"/>
          <RPMapping targetName="configuredValue" sourceAttrName="#:customerNumber"/>
        </RPListItemTemplate>
        <RPListItemTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="../../additionalData/vectoringIndicator"/>
            <base:IsMember value="BitStream" sourceAttrName="#:targetTechnology"/>
          </TemplateConditions>
          <RPMapping targetName="parameterName" staticValue="vectoringIndicator"/>
          <RPMapping targetName="configuredValue" sourceAttrName="../../additionalData/vectoringIndicator"/>
        </RPListItemTemplate>
        <RPListItemTemplate>
          <TemplateConditions>
            <OrComposite>
              <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
              <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
            </OrComposite>
            <base:IsNotExisting sourceAttrName="*/mailboxAccountName/configured"/>
          </TemplateConditions>
          <RPMapping targetName="parameterName" staticValue="mailboxAccountName"/>
          <RPMapping targetName="configuredValue" staticValue="nicht angelegt"/>
        </RPListItemTemplate>
        <base:Include fileIDRef="functionParameters" partIDRef="lteProcessingType"/>        
        <base:Include fileIDRef="functionParameters" partIDRef="instantAccessForReconfiguration"/>
        <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>          
      </RPListTemplate>
    </AbstractTransformationTemplate>
    <!-- creation END -->

    <!-- TV Center creation START -->
    <AbstractTransformationTemplate ID="TVCenterCreation_template"
      extends="standaloneContractFunctionCreation_template">

      <TemplateConditions>
        <base:IsMember value="true" sourceAttrName="#:newTVCenterMainAccess"/>
        <base:IsMember value="true" sourceAttrName="#:createTVCenter"/>
      </TemplateConditions>

      <RPListTemplate listName="parameterList">
        <RPListItemTemplate
          sourceWorkingPath="
          ../../accesses/*[@ID = '${@refAccessID}']/*/* |
          ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
          tvCenterBundledConfiguration/* ">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
      </RPListTemplate>
    </AbstractTransformationTemplate>
    <!-- TV Center creation END -->

    <!-- Mobile creation START -->
    <AbstractTransformationTemplate ID="MobileCreation_template"
      extends="standaloneContractFunctionCreation_template">
      <TemplateConditions>
        <base:IsMember value="ADD" sourceAttrName="processingType"/>
        <base:IsMember value="noactionOPM" sourceAttrName="processingStatus"/>
        <base:IsMember value="mobile" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
      </TemplateConditions>
      <RPMapping targetName="releaseCustomerOrder" staticValue="N" />
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate
          sourceWorkingPath="
          ../../accesses/*[@ID = '${@refAccessID}']/*/* |
          voicePremiumConfiguration/* |
          voiceBasisConfiguration/* |
          */portingAccessNumbers/* |
          ../hardware[refFunctionID/configured = '${@ID}']/hardwareConfiguration/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
        <RPListItemTemplate>
          <RPMapping targetName="parameterName" staticValue="orderReason" />
          <RPMapping targetName="configuredValue" 
            sourceAttrName="../tvCenter/processingType" 
            decoding="'TERM', 'Rückgabe Settop-Box', 'Doku - Kein Versand'"/>                      
        </RPListItemTemplate>
      </RPListTemplate>
    </AbstractTransformationTemplate>
    <!-- Mobile creation END -->
    
    <!-- base template for dependent functions like TBE, installation service and hardware -->
    <AbstractTransformationTemplate ID="dependentFunctionCreation_template"
      extends="baseFunctionCreation_template">
      <TemplateConditions>
        <base:IsNotMember value="completedCCM" sourceAttrName="processingStatus"/>
        <OrComposite>
          <AndComposite>
            <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>
            <base:IsNotMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="precompletedOPM" sourceAttrName="completionStatusNewCcbId"/>
            <base:IsNotMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
          </AndComposite>
          <base:IsMember value="noactionOPM" sourceAttrName="processingStatus"/>
          <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
        </OrComposite>
        <!-- make sure for lineCreation that internet is completed before or with voice-->
        <OrComposite>
          <!-- extraLine for isdnP2P access -->
          <AndComposite>
            <base:IsMember value="extraLine" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions"/>
            <OrComposite>
              <base:IsMember value="ADD" sourceAttrName="processingType"/>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                <OrComposite>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                  <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
                </OrComposite>
              </AndComposite>
            </OrComposite>
          </AndComposite>
          <!-- functions dependent on internet -->
          <AndComposite>
            <base:IsMember value="true" sourceAttrName="
              '${name(/*/*/functions/*[@ID='${refFunctionID/configured}'])}' = 'internet' or 
              '${name(/*/*/functions/*[@ID='${refFunctionID/existing}'])}' = 'internet'"/>
            <base:IsMember value="true" sourceAttrName="#:internetReadyForDependentFunctions"/>
            <OrComposite>
              <base:IsMember value="ADD" sourceAttrName="processingType"/>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
                <OrComposite>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                  <AndComposite>
                    <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
                    <OrComposite>
                      <base:IsMember value="hardware" sourceAttrName="name(.)"/>
                      <base:IsMember value="instantAccess" sourceAttrName="name(.)"/>
                      <base:IsMember value="mobileUsage" sourceAttrName="name(.)"/>
                    </OrComposite>
                  </AndComposite>
                </OrComposite>
              </AndComposite>
            </OrComposite>
          </AndComposite>
          <!-- functions dependent on voice -->
          <AndComposite>
            <base:IsMember value="true" sourceAttrName="
              '${name(/*/*/functions/*[@ID = '${refFunctionID/configured}'])}' = 'voice' or 
              '${name(/*/*/functions/*[@ID = '${refFunctionID/existing}'])}' = 'voice'"/>
            <base:IsNotMember value="mobile" sourceAttrName="name(../../accesses/*[@ID = '${../voice[@ID = '${refFunctionID/configured}']/@refAccessID}'])"/>
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions"/>
            <OrComposite>
              <base:IsMember value="ADD" sourceAttrName="processingType"/>
              <!-- changed directoryEntry (IT-31476) -->
              <AndComposite>
                <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
              </AndComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                <OrComposite>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                  <AndComposite>
                    <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
                    <OrComposite>
                      <base:IsMember value="hardware" sourceAttrName="name(.)"/>
                      <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
                      <base:IsMember value="instantAccess" sourceAttrName="name(.)"/>
                      <base:IsMember value="mobileUsage" sourceAttrName="name(.)"/>
                    </OrComposite>
                  </AndComposite>
                </OrComposite>
              </AndComposite>
            </OrComposite>
          </AndComposite>
          <base:IsMember value="mobile" sourceAttrName="name(../../accesses/*[@ID = '${../voice[@ID = '${refFunctionID/configured}']/@refAccessID}'])"/>
        </OrComposite>
      </TemplateConditions>

      <base:DataBufferWriter keyValue="parentStatus" 
        sourceAttrName="../*[@ID = '${refFunctionID/configured}']/completionStatusNewCcbId" />      
      <RPMapping targetName="processingStatus" 
        sourceAttrName="concat('${#:parentStatus}', ';', completionStatusNewCcbId)"
        decoding="
        'noactionOPM;', '', 
        'noactionOPM;noactionOPM', '', 
        'noactionOPM;noactionCOM', '', 
        'completedOPM'"/>            
    </AbstractTransformationTemplate>

    <!-- base template for all kind of functions, contract and dependent functions -->
    <AbstractTransformationTemplate ID="baseFunctionCreation_template">
      <TemplateConditions>
        <OrComposite>
          <base:IsMember value="ADD" sourceAttrName="processingType"/>
          <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
          <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
        </OrComposite>
        <OrComposite>
          <!-- new or changed functions need a new ccbId -->
          <AndComposite>
            <base:IsNotMember value="IGNORE" sourceAttrName="processingType"/>
            <base:IsExisting sourceAttrName="ccbId[@type='S']/configured"/>                        
          </AndComposite>
          <!-- IGNORE is only possible for child functions, eg directory entry in a tech change -->
          <AndComposite>
            <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
            <base:IsExisting sourceAttrName="refFunctionID"/>
          </AndComposite>
          <!-- instantAccess also works without ccbId -->
          <AndComposite>
            <base:IsMember value="instantAccess" sourceAttrName="name(.)"/>
            <base:IsMember value="ADD" sourceAttrName="processingType"/>            
          </AndComposite>
        </OrComposite>
        <base:IsNotMember value="completedCCM" sourceAttrName="processingStatus"/>
        <base:IsNotMember value="precompletedCCM" sourceAttrName="processingStatus"/>
        <base:IsNotMember value="completedCCM" sourceAttrName="completionStatusNewCcbId"/>
        <base:IsNotMember value="precompletedCCM" sourceAttrName="completionStatusNewCcbId"/>        
        <base:IsMember value="execute" sourceAttrName="/*/*/transactionType"/>
        <base:IsNotMember value="true" sourceAttrName="#:errorRaised"/>
      </TemplateConditions>

      <base:DataBufferWriter keyValue="fifActionTriggered" staticValue="true" />
      <RPMapping targetName="accountNumber" sourceAttrName="#:targetAccountNumber" />
      <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
      
      <RPMapping targetName="allocatedServiceSubscriptionId"
        sourceAttrName="ccbId[@type='S']/configured"/>
      <RPMapping targetName="functionID" sourceAttrName="@ID"/>
      
      <RPMapping targetName="activationDate" 
        sourceAttrName="resultDate"
        formatter="SOMToCCBDateFormatter"/>
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="../../parentBarcode"/>
        </TemplateConditions>        
        <RPMapping targetName="OMTSOrderID"
          sourceAttrName="../../parentBarcode"/>
      </TransformationTemplate>
      <base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberCreation"/>
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="installationService_template"
      extends="dependentFunctionCreation_template">      
      <RPMapping targetName="ignoreMissingParentService" staticValue="Y" />
      <!-- ID of parent function, either existing one -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="refFunctionID/configured"/>
          <base:IsExisting
            sourceAttrName="/*/*/functions/*[@ID='${refFunctionID/configured}']/ccbId[@type='S']/configured"
          />
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId"
          sourceAttrName="/*/*/functions/*[@ID='${refFunctionID/configured}']/ccbId[@type='S']/configured"
        />
      </TransformationTemplate>
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsNotExisting sourceAttrName="refFunctionID/configured"/>
          <base:IsExisting
            sourceAttrName="/*/*/functions/*[@ID='${refFunctionID/existing}']/ccbId[@type='S']/configured"
          />
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId"
          sourceAttrName="/*/*/functions/*[@ID='${refFunctionID/existing}']/ccbId[@type='S']/configured"
        />
      </TransformationTemplate>
      <!-- ID of parent function, or the configured, but already created one -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="refFunctionID/configured"/>
          <base:IsExisting
            sourceAttrName="/*/*/functions/*[@ID='${refFunctionID/configured}']/ccbId[@type='S']/existing"/>
          <base:IsNotExisting
            sourceAttrName="/*/*/functions/*[@ID='${refFunctionID/configured}']/ccbId[@type='S']/configured"
          />
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId"
          sourceAttrName="/*/*/functions/*[@ID='${refFunctionID/configured}']/ccbId[@type='S']/existing"
        />
      </TransformationTemplate>
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsNotExisting sourceAttrName="refFunctionID/configured"/>
          <base:IsExisting
            sourceAttrName="/*/*/functions/*[@ID='${refFunctionID/existing}']/ccbId[@type='S']/existing"/>
          <base:IsNotExisting
            sourceAttrName="/*/*/functions/*[@ID='${refFunctionID/existing}']/ccbId[@type='S']/configured"
          />
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId"
          sourceAttrName="/*/*/functions/*[@ID='${refFunctionID/existing}']/ccbId[@type='S']/existing"
        />
      </TransformationTemplate>
      
      <base:Include fileIDRef="functionParameters" partIDRef="installationServiceParameters"/>      
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="hardwareService_template"
      extends="dependentFunctionCreation_template">
      <TemplateConditions>
        <base:IsExisting sourceAttrName="*/articleNumber"/>
        <OrComposite>
          <base:IsMember value="ADD" sourceAttrName="processingType"/>
          <base:Include fileIDRef="functionParameters" partIDRef="hardwareServiceByTechnology"/>
        </OrComposite>
        <OrComposite>
          <base:IsNotExisting sourceAttrName="/*/*/functions/otherFunction[@ID='${refFunctionID/configured}']"/>
          <base:IsNotMember value="NOT_AVAILABLE"
            sourceAttrName="/*/*/functions/otherFunction[@ID='${refFunctionID/configured}']/ccbId[@type='S']/existing" />
        </OrComposite>
        <OrComposite>
        	<base:IsNotExisting sourceAttrName="*/conditionsList"/>
        	<AndComposite>
   				<base:IsMember value="true" sourceAttrName="
					'${name(/*/*/functions/*[@ID = '${refFunctionID/configured}'])}' = 'voice' or 
					'${name(/*/*/functions/*[@ID = '${refFunctionID/existing}'])}' = 'voice'"/>
				<OrComposite>
					<base:IsMember value="true" sourceAttrName="#:voiceBillingChangesReady"/>
					<base:IsMember value="false" sourceAttrName="#:voiceHasTariffChange"/>
				</OrComposite>
        	</AndComposite>
        	<AndComposite>
   				<base:IsMember value="true" sourceAttrName="
					'${name(/*/*/functions/*[@ID = '${refFunctionID/configured}'])}' = 'internet' or 
					'${name(/*/*/functions/*[@ID = '${refFunctionID/existing}'])}' = 'internet'"/>
				<OrComposite>
					<base:IsMember value="true" sourceAttrName="#:internetBillingChangesReady"/>
					<base:IsMember value="false" sourceAttrName="#:internetHasTariffChange"/>
				</OrComposite>
        	</AndComposite>
        </OrComposite>
      </TemplateConditions>
            
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="mobile" sourceAttrName="name(../../accesses/*[@ID = '${../voice[@ID = '${refFunctionID/configured}']/@refAccessID}'])"/>
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId"
          sourceAttrName="../voice[@ID = '${refFunctionID/configured}']/ccbId[@type='S']"
          method="configuredExisting"/>        
      </TransformationTemplate>                  
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsNotMember value="mobile" sourceAttrName="name(../../accesses/*[@ID = '${../voice[@ID = '${refFunctionID/configured}']/@refAccessID}'])"/>
        </TemplateConditions>
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsMember value="true" sourceAttrName="
              '${#:targetTechnology}' = 'ISDN' or
              '${#:targetTechnology}' = 'ISDNP2P' or
              '${#:targetTechnology}' = '' and ('${#:currentTechnology}' = 'ISDN' or '${#:currentTechnology}' = 'ISDNP2P')" />
          </TemplateConditions>                  
          <RPMapping targetName="serviceSubscriptionId"
            sourceAttrName="/*/*/functions/voice[@ID = '${#:mainVoiceFunctionID}']/ccbId[@type='S']"
            method="configuredExisting"/>
        </TransformationTemplate>        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotMember value="true" sourceAttrName="
              '${#:targetTechnology}' = 'ISDN' or
              '${#:targetTechnology}' = 'ISDNP2P' or
              '${#:targetTechnology}' = '' and ('${#:currentTechnology}' = 'ISDN' or '${#:currentTechnology}' = 'ISDNP2P')" />
          </TemplateConditions>          
          <RPMapping targetName="serviceSubscriptionId"
            sourceAttrName="/*/*/functions/internet[@ID = '${#:mainInternetFunctionID}']/ccbId[@type='S']"
            method="configuredExisting"/>
        </TransformationTemplate>
      </TransformationTemplate>                       
      
      <base:Include fileIDRef="functionParameters" partIDRef="hardwareParameters"/>
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="directoryEntry_template"
      extends="dependentFunctionCreation_template">
      
      <RPMapping targetName="serviceSubscriptionId"
        sourceAttrName="/*/*/functions/voice[@ID = '${#:mainVoiceFunctionID}']/ccbId[@type='S']"
        method="configuredExisting"/>      
      
      <base:Include fileIDRef="functionParameters" partIDRef="directoryEntryParameters"/>
    </AbstractTransformationTemplate>

    <!-- instantAccess creation -->
    <AbstractTransformationTemplate ID="instantAccess_template"         
      extends="dependentFunctionCreation_template">
      <TemplateConditions>
        <base:IsNotMember value="LTE" sourceAttrName="#:targetTechnology" />
      </TemplateConditions>      
      
      <RPMapping targetName="serviceSubscriptionId" 
        sourceAttrName="/*/*/accesses/*[@ID='${#:targetAccessID}']/ccbId[@type='S']" 
        method="configuredExisting"/>
      <RPMapping targetName="ccbId" sourceAttrName="ccbId[@type='S']" method="configuredExisting"/>
      <RPMapping targetName="desiredDate" staticValue="today" />          
      <RPMapping staticValue="V8042" targetName="serviceCode" />
      
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology" />
            <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology" />
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="parentFunctionID" sourceAttrName="../voice[@ID = '${#:mainVoiceFunctionID}']/@ID" />
      </TransformationTemplate>
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology" />
          <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology" />
        </TemplateConditions>
        <RPMapping targetName="parentFunctionID" sourceAttrName="../internet/@ID" />
      </TransformationTemplate>
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate>
          <RPMapping targetName="parameterName" staticValue="simID" />
          <RPMapping targetName="configuredValue" sourceAttrName="*/simID" method="configuredExisting" />            
        </RPListItemTemplate>
        <RPListItemTemplate>
          <RPMapping targetName="parameterName" staticValue="instantAccessTariff" />
          <RPMapping targetName="configuredValue" sourceAttrName="*/instantAccessTariff" method="configuredExisting" />            
        </RPListItemTemplate>
      </RPListTemplate>
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="modifyContract_template"
      extends="modifyContract_wf12_template">
      <TemplateConditions>
        <OrComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
            <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess"/>
            <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
            <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="tvCenter" sourceAttrName="name(.)"/>
            <base:IsNotMember value="true" sourceAttrName="#:newTVCenterMainAccess"/>
            <base:IsMember value="true" sourceAttrName="#:tvCenterReadyForFeatures"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="safetyPackage" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:safetyPackageReadyForFeatures"/>
          </AndComposite>
        </OrComposite>
      </TemplateConditions>
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="modifyContract_wf12_template">
      <base:Include fileIDRef="functionParameters" partIDRef="modifyContractParameters"/>
      <base:DataBufferWriter keyValue="fifActionTriggered" staticValue="true" />
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="modifyBundleTemplate">
      <TemplateConditions>
        <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
        <base:IsExisting sourceAttrName="ccbId[@type = 'S']/existing"/>
      </TemplateConditions>
      <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type = 'S']/existing" />
      <RPMapping targetName="bundleFutureIndicator" staticValue="T" />
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="resetBundleTemplate">
      <TemplateConditions>
        <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        <base:IsExisting sourceAttrName="ccbId[@type = 'S']/existing"/>
        <base:IsMember value="cancelledOPM" sourceAttrName="completionStatusOldCcbId"/>
        <base:IsNotMember value="completedCCM" sourceAttrName="previousCompletionStatusOldCcbId"/>
      </TemplateConditions>
      <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type = 'S']/existing" />
      <RPMapping targetName="bundleFutureIndicator" staticValue="N" />
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="createContactRoleReference_template">
      <TemplateConditions>
        <base:IsNotMember value="PREV_TENANT"
          sourceAttrName="/order/customerData/contactRole[@ID ='${.}']/contactRoleTypeRd/*"/>
        <base:IsNotMember value="NOTIFICATION_OM"
          sourceAttrName="/order/customerData/contactRole[@ID ='${.}']/contactRoleTypeRd/*"/>
        <base:IsNotMember value="SHIPPING_CONTACT"
          sourceAttrName="/order/customerData/contactRole[@ID ='${.}']/contactRoleTypeRd/*"/>                   
        <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        <base:IsNotMember value="completedCCM" sourceAttrName="../changeStatus"/>
        <base:IsMember value="true" 
          sourceAttrName="count(
          /*/*/contactRole[@ID = '${.}']/ccbId[@type= 'R']/configured | 
          /*/*/contactRole[@ID = '${.}']/ccbId[@type= 'R']/existing) > 0
          or /*/*/contactRole[@ID = '${.}']/contactRoleTypeRd/* != 'INSTALLATION'"/>        
      </TemplateConditions>
      <RPMapping targetName="parentSomElementID" sourceAttrName="../../../@ID" />
      <RPMapping targetName="somElementID" sourceAttrName="." />        
      <RPMapping targetName="contactRoleEntityId"
        sourceAttrName="/*/*/contactRole[@ID = '${.}']/ccbId[@type= 'R']"
        method="configuredExisting"/>
      <RPMapping targetName="supportedObjectTypeRd" staticValue="SERVICE_SUBS"/>
      <RPMapping targetName="supportedObjectId" sourceAttrName="../../../ccbId[@type = 'S']"
        method="configuredExisting"/>      
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="fixedIPAddress_template">
      <TemplateConditions>
        <OrComposite>
          <AndComposite>
            <base:IsMember value="ADD" sourceAttrName="processingType" />
            <base:IsMember value="Add" sourceAttrName="*/fixedIPAddressChangeType/configured" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="CHANGE" sourceAttrName="processingType" />
            <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess" />
            <base:IsMember value="Add" sourceAttrName="*/fixedIPAddressChangeType/configured" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess" />
            <OrComposite>
              <base:IsMember value="Add" sourceAttrName="*/fixedIPAddressChangeType/configured" />
              <base:IsMember value="Replace" sourceAttrName="*/fixedIPAddressChangeType/configured" />
              <AndComposite>
                <base:IsNotMember value="Remove" sourceAttrName="*/fixedIPAddressChangeType/configured" />
                <base:IsExisting sourceAttrName="*/fixedIPAddress/existing" />
              </AndComposite>
            </OrComposite>
          </AndComposite>
        </OrComposite>   
        <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures" />
        <base:IsMember value="execute" sourceAttrName="/order/*/transactionType" />
      </TemplateConditions>
	  <RPMapping targetName="serviceCode" sourceAttrName="#:targetTechnology" 
	  			 decoding="'ISDN', 'I104B', 
            			   'ISDNP2P', 'I104B',
            			   'BitStream','I1222',
            			   'NGN','I1222',
            			   'LTE','I1222'"/>
      <RPMapping targetName="functionID" sourceAttrName="@ID" />
      <RPMapping targetName="serviceSubscriptionId" 
        sourceAttrName="ccbId[@type='S']" 
        method="configuredExisting"/>
      <base:DataBufferWriter keyValue="listType" staticValue="fixedIPAddress" />
      <RPMapping targetName="listType" sourceAttrName="#:listType" />
      <base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>
      <RPListTemplate listName="parameterList">
       <base:Include fileIDRef="functionParameters" partIDRef="LtefixedIPAddressConfig"/>
        <RPListItemTemplate
          sourceWorkingPath="adslInternetConfiguration/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
      </RPListTemplate>      
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="MobileUsage_template"
    								extends="dependentFunctionCreation_template">
      <TemplateConditions>
         <OrComposite>
         	<AndComposite>
            <base:IsMember value="true" sourceAttrName="name(/*/*/functions/*[@ID='${refFunctionID/configured}']) = 'internet' or 
              name(/*/*/functions/*[@ID='${refFunctionID/existing}']) = 'internet'"/>
            <base:IsMember value="true" sourceAttrName="#:internetReadyForDependentFunctions"/>
            </AndComposite>
            <AndComposite>
            <base:IsMember value="true" sourceAttrName="name(/*/*/functions/*[@ID='${refFunctionID/configured}']) = 'voice' or 
              name(/*/*/functions/*[@ID='${refFunctionID/existing}'])= 'voice'"/>
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions" />
            </AndComposite>
        </OrComposite>
        <base:IsNotMember value="TERM" sourceAttrName="processingType" />   
      </TemplateConditions>
	  <RPMapping targetName="serviceCode" staticValue="V0305"/> 
	  <base:DataBufferWriter keyValue="listType" staticValue="mobileUsage" />
      <RPMapping targetName="listType" sourceAttrName="#:listType" />
      <!-- ID of parent function, either existing one -->
      <TransformationTemplate>
          <TemplateConditions>
            <base:IsMember value="true" sourceAttrName="
              '${#:targetTechnology}' = 'ISDN' or
              '${#:targetTechnology}' = 'ISDNP2P' or
              '${#:targetTechnology}' = '' and ('${#:currentTechnology}' = 'ISDN' or '${#:currentTechnology}' = 'ISDNP2P')" />
          </TemplateConditions>                  
          <RPMapping targetName="serviceSubscriptionId"
            sourceAttrName="/*/*/functions/voice[@ID = '${#:mainVoiceFunctionID}']/ccbId[@type='S']"
            method="configuredExisting"/>
        </TransformationTemplate>        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotMember value="true" sourceAttrName="
              '${#:targetTechnology}' = 'ISDN' or
              '${#:targetTechnology}' = 'ISDNP2P' or
              '${#:targetTechnology}' = '' and ('${#:currentTechnology}' = 'ISDN' or '${#:currentTechnology}' = 'ISDNP2P')" />
          </TemplateConditions>          
          <RPMapping targetName="serviceSubscriptionId"
            sourceAttrName="/*/*/functions/internet[@ID = '${#:mainInternetFunctionID}']/ccbId[@type='S']"
            method="configuredExisting"/>
        </TransformationTemplate>
      <base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>               
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate
          sourceWorkingPath="mobileUsageConfiguration/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
      </RPListTemplate>      
    </AbstractTransformationTemplate>
    
    
    <AbstractTransformationTemplate ID="modifyFeaturesCallForwarding_template" extends="modifyFeatures_template">
        <TemplateConditions>
            <base:IsExisting sourceAttrName="*/callForwarding" />
            <OrComposite>
                <base:IsExisting sourceAttrName="*/callForwarding/action" />
               	<base:Include fileIDRef="functionParameters" partIDRef="isMovedService"/>
            </OrComposite>                
        </TemplateConditions>
        <base:DataBufferWriter keyValue="listType" staticValue="callForwarding" />
        <RPMapping targetName="listType" sourceAttrName="#:listType" />
        <RPMapping targetName="action" sourceAttrName="*/callForwarding/action" decoding="'DEACTIVATE', 'remove', ''" />
        <RPMapping targetName="ignoreTerminationError" staticValue="Y" />
        
        <base:DataBufferWriter keyValue="existingTargetPhoneNumberCSC" sourceAttrName="concat(
						*/callForwarding/targetPhoneNumber/existing/countryCode,';',
						*/callForwarding/targetPhoneNumber/existing/localAreaCode,';',
						*/callForwarding/targetPhoneNumber/existing/pilotNumber)" />
        <base:DataBufferWriter keyValue="existingTargetPhoneNumberSD" sourceAttrName="concat(
						*/callForwarding/targetPhoneNumber/existing/countryCode,
						*/callForwarding/targetPhoneNumber/existing/localAreaCode,
						*/callForwarding/targetPhoneNumber/existing/pilotNumber)" />
        <base:DataBufferWriter keyValue="configuredTargetPhoneNumberCSC" sourceAttrName="concat(
						*/callForwarding/targetPhoneNumber/configured/countryCode,';',
						*/callForwarding/targetPhoneNumber/configured/localAreaCode,';',
						*/callForwarding/targetPhoneNumber/configured/pilotNumber)" />
        <base:DataBufferWriter keyValue="configuredTargetPhoneNumberSD" sourceAttrName="concat(
						*/callForwarding/targetPhoneNumber/configured/countryCode,
						*/callForwarding/targetPhoneNumber/configured/localAreaCode,
						*/callForwarding/targetPhoneNumber/configured/pilotNumber)" />
        
		<TransformationTemplate>
			<TemplateConditions>
				<base:IsMember value="ACTIVATE" sourceAttrName="*/callForwarding/action" />            
			</TemplateConditions>
	        <RPListTemplate listName="configuredServiceList">
	            <RPListItemTemplate>
					<RPMapping targetName="serviceCode" staticValue="V0304" />
					<RPMapping targetName="targetPhoneNumber" sourceAttrName="#:configuredTargetPhoneNumberCSC" />
	            </RPListItemTemplate>
	            <RPListItemTemplate>
					<TemplateConditions>
						<base:IsExisting sourceAttrName="*/tariffOptionsList/configured/tariffOption[serviceCode = 'V0306']" />
					</TemplateConditions>
					<RPMapping targetName="serviceCode" staticValue="V0306" />
					<RPMapping targetName="handleContributingItem" staticValue="Y"/>
					<RPMapping targetName="handleSelectedDestination" staticValue="Y"/>
					<RPMapping targetName="targetPhoneNumber" sourceAttrName="#:configuredTargetPhoneNumberSD" />
	            </RPListItemTemplate>
	        </RPListTemplate>
		</TransformationTemplate>
        
		<TransformationTemplate>
			<TemplateConditions>
				<OrComposite>
					<base:IsMember value="DEACTIVATE" sourceAttrName="*/callForwarding/action" />
				</OrComposite>				            
			</TemplateConditions>
	        <RPListTemplate listName="existingServiceList">
	            <RPListItemTemplate>
					<RPMapping targetName="serviceCode" staticValue="V0304" />					
	            </RPListItemTemplate>
	            <RPListItemTemplate>
					<RPMapping targetName="serviceCode" staticValue="V0306" />
					<RPMapping targetName="handleContributingItem" staticValue="Y"/>
					<RPMapping targetName="handleSelectedDestination" staticValue="Y"/>
					<TransformationTemplate>
						<TemplateConditions>
							<base:IsNotMember value="" sourceAttrName="#:existingTargetPhoneNumberSD" />            
						</TemplateConditions>
						<RPMapping targetName="targetPhoneNumber" sourceAttrName="#:existingTargetPhoneNumberSD" />
					</TransformationTemplate>					
					<TransformationTemplate>
						<TemplateConditions>
							<base:IsMember value="" sourceAttrName="#:existingTargetPhoneNumberSD" />            
						</TemplateConditions>
						<RPMapping targetName="targetPhoneNumber" sourceAttrName="#:configuredTargetPhoneNumberSD" />
					</TransformationTemplate>					
	            </RPListItemTemplate>
	        </RPListTemplate>
		</TransformationTemplate>
        
		<TransformationTemplate>
			<TemplateConditions>
				<base:IsNotExisting sourceAttrName="*/callForwarding/action" />
				<base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
			</TemplateConditions>
	        <RPListTemplate listName="existingServiceList">
	            <RPListItemTemplate>
					<RPMapping targetName="serviceCode" staticValue="V0304" />
					<RPMapping targetName="targetPhoneNumber" sourceAttrName="#:existingTargetPhoneNumberCSC" />
	            </RPListItemTemplate>
	            <RPListItemTemplate>
	            	<TemplateConditions>
	            		<base:IsExisting sourceAttrName="*/tariffOptionsList/existing/tariffOption[serviceCode = 'V0306']" />
	            		<base:IsNotMember value="remove" sourceAttrName="*/tariffOptionsList/@action"/>
	            		<OrComposite>
	            			<base:IsNotExisting sourceAttrName="*/tariffOptionsList/configured" />
            				<base:IsExisting sourceAttrName="*/tariffOptionsList/configured/tariffOption[serviceCode = 'V0306']" />
	            		</OrComposite>
	            	</TemplateConditions>
					<RPMapping targetName="serviceCode" staticValue="V0306" />
					<RPMapping targetName="handleContributingItem" staticValue="Y"/>
					<RPMapping targetName="handleSelectedDestination" staticValue="Y"/>
					<RPMapping targetName="targetPhoneNumber" sourceAttrName="#:existingTargetPhoneNumberSD" />
	            </RPListItemTemplate>
	        </RPListTemplate>
		</TransformationTemplate>
        <base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="reactivateOrSuspendFunction_template">
      <TemplateConditions>
        <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
       	<base:IsNotMember value="completedOPM" sourceAttrName="completionStatusOldCcbId" /> 
      </TemplateConditions>
      	<RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']"         
       	           method="configuredExisting"/>
		<RPMapping targetName="functionID" sourceAttrName="@ID" />
		<RPMapping targetName="reason" staticValue="TERMINATION"/>
		<RPMapping targetName="desiredDate" staticValue="today"/>
    </AbstractTransformationTemplate>
    
    
    <AbstractTransformationTemplate ID="modifyFeaturesDiscountServiceDel_template">
    	<TemplateConditions>
    		<base:IsExisting  sourceAttrName="completionStatusOldCcbId" />
    		<OrComposite>
				<base:IsMember value="postponedOPM" sourceAttrName="completionStatusOldCcbId" />
				<base:IsMember value="cancelledOPM" sourceAttrName="completionStatusOldCcbId" /> 
				<base:IsMember value="precompletedOPM" sourceAttrName="completionStatusOldCcbId" /> 
			</OrComposite>
		</TemplateConditions>
    	<RPMapping targetName="isMovedService" staticValue="N"/>
		<RPMapping targetName="ignoreTerminationError" staticValue="Y"/>
		<RPMapping targetName="ignoreWrongServiceCode" staticValue="Y"/>
		<RPMapping targetName="ignoreDuplicates" staticValue="Y"/>
		<RPMapping targetName="processingStatus" staticValue="completedOPM"/>
		<RPMapping targetName="reason" staticValue="COM_BW_CHANGE"/>
		<RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']"         
       	           method="configuredExisting"/>
     	<RPMapping targetName="functionID" sourceAttrName="@ID" />
     	<RPMapping targetName="activateCustomerOrder" staticValue="Y"/>
		<TransformationTemplate>
			<TemplateConditions>
				<base:IsMember value="precompletedOPM" sourceAttrName="completionStatusOldCcbId" />    
			</TemplateConditions>
			<RPListTemplate listName="existingServiceList">
	            <RPListItemTemplate>
					<RPMapping targetName="serviceCode" staticValue="V0991" />
					<RPMapping targetName="handleContributingItem" staticValue="Y"/>
					<RPMapping targetName="contributingItemType" staticValue="PRODUCT_SUBSC"/>
				</RPListItemTemplate>
	        </RPListTemplate>
			<RPMapping targetName="action" staticValue="remove" />
					
		</TransformationTemplate>
        
		<TransformationTemplate>
			<TemplateConditions>
				<base:IsMember value="postponedOPM" sourceAttrName="completionStatusOldCcbId" />               
			</TemplateConditions>
			<RPListTemplate listName="existingServiceList">
	            <RPListItemTemplate>
					<RPMapping targetName="serviceCode" staticValue="V0992" />
					<RPMapping targetName="handleContributingItem" staticValue="Y"/>
					<RPMapping targetName="contributingItemType" staticValue="PRODUCT_SUBSC"/>
				</RPListItemTemplate>
	        </RPListTemplate>
			<RPMapping targetName="action" staticValue="remove" />
			
		</TransformationTemplate>
        
		<TransformationTemplate>
			<TemplateConditions>
				<base:IsMember value="cancelledOPM" sourceAttrName="completionStatusOldCcbId" />   
			</TemplateConditions>
			<RPMapping targetName="createRCPNotification" staticValue="Y"/>
			<RPListTemplate listName="existingServiceList">
	            <RPListItemTemplate>
					<RPMapping targetName="serviceCode" staticValue="V0991" />
					<RPMapping targetName="handleContributingItem" staticValue="Y"/>
					<RPMapping targetName="contributingItemType" staticValue="PRODUCT_SUBSC"/>
				</RPListItemTemplate>
				 <RPListItemTemplate>
					<RPMapping targetName="serviceCode" staticValue="V0992" />
					<RPMapping targetName="handleContributingItem" staticValue="Y"/>
					<RPMapping targetName="contributingItemType" staticValue="PRODUCT_SUBSC"/>
				</RPListItemTemplate>
	        </RPListTemplate>
			<RPMapping targetName="action" staticValue="remove" />
		</TransformationTemplate>
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="modifyFeaturesDiscountServiceAdd_template">
    	<TemplateConditions>
    		<base:IsExisting  sourceAttrName="completionStatusOldCcbId" />
    		<OrComposite>
				<base:IsMember value="postponedOPM" sourceAttrName="completionStatusOldCcbId" />
				<base:IsMember value="precompletedOPM" sourceAttrName="completionStatusOldCcbId" /> 
			</OrComposite>
		</TemplateConditions>
    	<RPMapping targetName="isMovedService" staticValue="N"/>
		<RPMapping targetName="ignoreTerminationError" staticValue="Y"/>
		<RPMapping targetName="ignoreWrongServiceCode" staticValue="Y"/>
		<RPMapping targetName="ignoreDuplicates" staticValue="Y"/>
		<RPMapping targetName="processingStatus" staticValue="completedOPM"/>
		<RPMapping targetName="reason" staticValue="COM_BW_CHANGE"/>
		<RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']"         
       	           method="configuredExisting"/>
     	<RPMapping targetName="functionID" sourceAttrName="@ID" />
     	<RPMapping targetName="createRCPNotification" staticValue="Y"/>
		<TransformationTemplate>
			<TemplateConditions>
				<base:IsMember value="precompletedOPM" sourceAttrName="completionStatusOldCcbId" />    
			</TemplateConditions>
	        <RPListTemplate listName="configuredServiceList">
	            <RPListItemTemplate>
					<RPMapping targetName="serviceCode" staticValue="V0992" />
					<RPMapping targetName="handleContributingItem" staticValue="Y"/>
					<RPMapping targetName="contributingItemType" staticValue="PRODUCT_SUBSC"/>
				</RPListItemTemplate>
	        </RPListTemplate>
					
		</TransformationTemplate>
        
		<TransformationTemplate>
			<TemplateConditions>
				<base:IsMember value="postponedOPM" sourceAttrName="completionStatusOldCcbId" />               
			</TemplateConditions>
	        <RPListTemplate listName="configuredServiceList">
	            <RPListItemTemplate>
					<RPMapping targetName="serviceCode" staticValue="V0991" />
					<RPMapping targetName="handleContributingItem" staticValue="Y"/>
					<RPMapping targetName="contributingItemType" staticValue="PRODUCT_SUBSC"/>
				</RPListItemTemplate>
	        </RPListTemplate>
			
		</TransformationTemplate>
        
    </AbstractTransformationTemplate>
    

    <AbstractTransformationTemplate ID="ExtraLineCreation_template"
      extends="dependentFunctionCreation_template">
      
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="@targetAccessID"/>
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId"
          sourceAttrName="../../accesses/isdnP2P[@ID = '${@targetAccessID}']/ccbId[@type='S']"
          method="configuredExisting"/>        
      </TransformationTemplate>                  
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsNotExisting sourceAttrName="@targetAccessID"/>
        </TemplateConditions>
        <RPMapping targetName="serviceSubscriptionId"
          sourceAttrName="../../accesses/isdnP2P[@ID = '${@refAccessID}']/ccbId[@type='S']"
          method="configuredExisting"/>        
      </TransformationTemplate>

      <RPListTemplate listName="parameterList">
        <RPListItemTemplate
          sourceWorkingPath="extraS0LineConfiguration/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
      </RPListTemplate>
      
      <RPMapping staticValue="V0014" targetName="serviceCode" />
      <base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberTermination"/>                     
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="activateCustomerOrder_template">
      <TemplateConditions>
        <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        <base:IsNotMember value="true" sourceAttrName="#:errorRaised"/>
      </TemplateConditions>
      <RPMapping sourceAttrName="@ID" targetName="functionID"/>
    </AbstractTransformationTemplate>


    <AbstractTransformationTemplate ID="activateBilling_template">
      <TemplateConditions>
        <base:IsMember value="true" sourceAttrName="#:billingActivationRelevant"/>
        <OrComposite>
          <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>
          <base:IsMember value="completedCCM" sourceAttrName="completionStatusNewCcbId"/>
        </OrComposite>
        <OrComposite>
          <AndComposite>
            <OrComposite>
               <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
               <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
            </OrComposite>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="completedOPM" sourceAttrName="../../functions/*[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId"/>
                <base:IsMember value="precompletedCCM" sourceAttrName="../../functions/*[@ID = '${#:mainVoiceFunctionID}']/previousCompletionStatusNewCcbId"/>
              </AndComposite>
              <base:IsMember value="completedCCM" sourceAttrName="../../functions/*[@ID = '${#:mainVoiceFunctionID}']/completionStatusNewCcbId"/>
            </OrComposite>
          </AndComposite>
          <AndComposite>
            <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology"/>
            <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="completedOPM" sourceAttrName="../../functions/*[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId"/>
                <base:IsMember value="precompletedCCM" sourceAttrName="../../functions/*[@ID = '${#:mainInternetFunctionID}']/previousCompletionStatusNewCcbId"/>
              </AndComposite>
              <base:IsMember value="completedCCM" sourceAttrName="../../functions/*[@ID = '${#:mainInternetFunctionID}']/completionStatusNewCcbId"/>
            </OrComposite>
          </AndComposite>
        </OrComposite>
      </TemplateConditions>
      <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']"         
                 method="configuredExisting"/>
      <RPMapping targetName="billingActivationDate" sourceAttrName="../../accesses/*[@ID = '${#:targetAccessID}']/*/providerCompletionDate/configured | 
       ../../accesses/*[@ID = '${#:targetAccessID}']/*/DTAGCompletionDate"
       												formatter="SOMToCCBDateFormatter" />

    </AbstractTransformationTemplate>
    
    
  </BaseTemplates>
</TransformationRepository>
