<?xml version="1.0" encoding="UTF-8"?>
<TransformationRepository xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns="http://www.arcor.de/transformer/SOMToFIFTransformationSchema" 
  xmlns:base="http://www.arcor.de/transformer/BaseTransformationSchema" 
  xsi:schemaLocation="http://www.arcor.de/transformer/SOMToFIFTransformationSchema SOMToFIFTransformationSchema.xsd" 
  docTypeQualifiedName="request-list" docTypeSystemId="request-list.dtd">
  <RootTemplate>
    <RequestListTemplate orderIdPath="//order[@orderID]">
      
      <base:Include fileID="functionParameters" fileName="FunctionParameters.xml"/>
      
      <base:DataBufferWriter keyValue="isWF12" staticValue="true" />
      <base:DataBufferWriter keyValue="trxBuilder" staticValue="enterprise" />
      <base:DataBufferWriter keyValue="orderIdPath" 
        sourceAttrName="count(/*/barcode) > 0" 
        decoding="'true', '/*/barcode', '/order/@orderID'" />
                  
      <!-- global request list parameters -->
      <RLPMapping targetName="sourceSystem" sourceAttrName="/order/customerContactPoint" />
      <RLPMapping targetName="userName" sourceAttrName="/order/entryUser" />
      <RLPMapping targetName="rollenBezeichnung" sourceAttrName="/order/entryRole" />
      <RLPMapping targetName="somDate" sourceAttrName="/order/entryDateTime" formatter="SOMToCCBDateFormatter" />
      <RLPMapping targetName="orderId" sourceAttrName="/order/@orderID" />
      <RLPMapping targetName="OMTSOrderID" sourceAttrName="${#:orderIdPath}" />
      <RLPMapping targetName="salesOrganisationNumber" sourceAttrName="/order/salesOrganisation/salesOrganisationNumber[@type='A']" />
      <RLPMapping targetName="salesOrganisationNumberVF" sourceAttrName="/order/salesOrganisation/salesOrganisationNumber[@type='V']" />
      <RLPMapping targetName="desiredDate" sourceAttrName="/order/*/desiredDate" formatter="SOMToCCBDateFormatter" />
      <RLPMapping targetName="orderPositionNumber" sourceAttrName="/order/*/@orderPositionNumber" />
      <RLPMapping targetName="scanDate" sourceAttrName="/order/scanDate" formatter="SOMToCCBDateFormatter" />
      <RLPMapping targetName="orderAcceptedDate" sourceAttrName="/order/orderAcceptedDate" formatter="SOMToCCBDateFormatter"/>
      <RLPMapping targetName="superCustomerTrackingId" sourceAttrName="/order/superCustomerTrackingId" />
      <RLPMapping targetName="reason" sourceAttrName="/order/*/reason" />
      <RLPMapping targetName="validateDuplicateAccessNumbers" staticValue="Y"/>      
      <RLPMapping targetName="workflowType" staticValue="COM-OPM-FIF" />


      <base:DataBufferWriter keyValue="targetInternetAccess"
        sourceAttrName="concat(
        name(/*/*/accesses/*[@ID = '${/*/*/*/internet/@targetAccessID}' and count(/*/*/*/internet/@targetAccessID) != 0]),
        name(/*/*/accesses/*[@ID = '${/*/*/*/internet/@refAccessID}' and count(/*/*/*/internet/@targetAccessID) = 0])) "/>

      <base:DataBufferWriter keyValue="existingMainAccessID"
        sourceAttrName="
        /*/*/*/isdnP2P/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/isdnS2M/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/sipTrunk/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/businessVoip/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/ipCentrex/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/oneNetBusiness/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/businessDSL[count(../sipTrunk | ../ipCentrex | ../oneNetBusiness | ../businessVoip) = 0]/ccbId[@type='S']/existing/../../@ID |
        /*/*/*/ipBitstream[count(../sipTrunk | ../ipCentrex | ../oneNetBusiness | ../businessVoip) = 0]/ccbId[@type='S']/existing/../../@ID" />
      
      
      <base:DataBufferWriter keyValue="configuredMainAccessID"
        sourceAttrName="
        /*/*/*/isdnP2P/*/*/configured/../../../@ID | /*/*/*/isdnP2P/*/configured/../../@ID |
        /*/*/*/isdnS2M/*/*/configured/../../../@ID | /*/*/*/isdnS2M/*/configured/../../@ID |
        /*/*/*/sipTrunk/*/*/configured/../../../@ID | /*/*/*/sipTrunk/*/configured/../../@ID |
        /*/*/*/businessVoip/*/*/configured/../../../@ID | /*/*/*/businessVoip/*/configured/../../@ID |
        /*/*/*/ipCentrex/*/*/configured/../../../@ID | /*/*/*/ipCentrex/*/configured/../../@ID | 
        /*/*/*/oneNetBusiness/*/*/configured/../../../@ID | /*/*/*/oneNetBusiness/*/configured/../../@ID | 
        /*/*/*/businessDSL[count(../sipTrunk | ../ipCentrex | ../oneNetBusiness | ../businessVoip) = 0]/*/*/configured/../../../@ID | /*/*/*/businessDSL[count(../sipTrunk | ../ipCentrex | ../oneNetBusiness | ../businessVoip) = 0]/*/configured/../../@ID | 
        /*/*/*/ipBitstream[count(../sipTrunk | ../ipCentrex | ../oneNetBusiness | ../businessVoip) = 0]/*/*/configured/../../../@ID | /*/*/*/ipBitstream[count(../sipTrunk | ../ipCentrex | ../oneNetBusiness | ../businessVoip) = 0]/*/configured/../../@ID"/>
      
      <base:DataBufferWriter keyValue="currentMainAccessIDTag"
        sourceAttrName="string-length('${#:existingMainAccessID}') = 0"
        decoding="'true', 'configuredMainAccessID', 'existingMainAccessID'" />
      
      <base:DataBufferWriter keyValue="currentMainAccessID"
        sourceAttrName="/*/*/accesses/*[@ID = '${#:${#:currentMainAccessIDTag}}']/@ID" />      
      
      <base:DataBufferWriter keyValue="targetMainAccessIDTag"
        sourceAttrName="string-length('${#:configuredMainAccessID}') = 0"
        decoding="'true', 'existingMainAccessID', 'configuredMainAccessID'" />
      
      <base:DataBufferWriter keyValue="targetMainAccessID"
        sourceAttrName="/*/*/accesses/*[@ID = '${#:${#:targetMainAccessIDTag}}']/@ID" />      

      <!-- target access is either taken from a @targetAccessID or set to currentMainAccessID
      <base:DataBufferWriter keyValue="targetAccessID1"
        sourceAttrName="/*/*/functions/voice/@targetAccessID" />      
      <base:DataBufferWriter keyValue="targetAccessID2"
        sourceAttrName="#:currentMainAccessID" />            
      <base:DataBufferWriter keyValue="targetAccessElement"
        sourceAttrName="count(/*/*/functions/voice/@targetAccessID) > 0" 
        decoding="'true', 'targetAccessID1', 'false', 'targetAccessID2'"/>            
      <base:DataBufferWriter keyValue="targetAccessID" sourceAttrName="string('${#:${#:targetAccessElement}}')" />      
	   -->

      <base:DataBufferWriter keyValue="currentTechnology"
        sourceAttrName="name(/*/*/accesses/*[@ID = '${#:currentMainAccessID}'])" 
        decoding="'isdnP2P', 'ISDNP2P'" />
      
      <base:DataBufferWriter keyValue="targetTechnology"
        sourceAttrName="name(/*/*/accesses/*[@ID = '${#:targetMainAccessID}'])" 
        decoding="'isdnP2P', 'ISDNP2P'"/>
      
      <base:DataBufferWriter keyValue="currentAccessTechnologyID"
        sourceAttrName="/*/*/*/isdnP2P/*/*/existing/../../../@ID | /*/*/*/isdnP2P/*/existing/../../@ID |
        /*/*/*/isdnS2M/*/*/existing/../../../@ID | /*/*/*/isdnS2M/*/existing/../../@ID |
        /*/*/*/businessDSL/*/*/existing/../../../@ID | /*/*/*/businessDSL/*/existing/../../@ID |
        /*/*/*/ipBitstream/*/*/existing/../../../@ID | /*/*/*/ipBitstream/*/existing/../../@ID |
        /*/*/*/businessVoip/*/*/existing/../../../@ID | /*/*/*/businessVoip/*/existing/../../@ID" />
      
      <base:DataBufferWriter keyValue="targetAccessTechnologyID"
        sourceAttrName="/*/*/*/isdnP2P/*/*/configured/../../../@ID | /*/*/*/isdnP2P/*/configured/../../@ID |
        /*/*/*/isdnS2M/*/*/configured/../../../@ID | /*/*/*/isdnS2M/*/configured/../../@ID |
        /*/*/*/businessDSL/*/*/configured/../../../@ID | /*/*/*/businessDSL/*/configured/../../@ID |
        /*/*/*/ipBitstream/*/*/configured/../../../@ID | /*/*/*/ipBitstream/*/configured/../../@ID |
        /*/*/*/businessVoip/*/*/configured/../../../@ID | /*/*/*/businessVoip/*/configured/../../@ID" />
      
      <base:DataBufferWriter keyValue="currentAccessTechnology"
        sourceAttrName="name(/*/*/accesses/*[@ID = '${#:currentAccessTechnologyID}'])" />
      
      <base:DataBufferWriter keyValue="targetAccessTechnology"
        sourceAttrName="name(/*/*/accesses/*[@ID = '${#:targetAccessTechnologyID}'])"/>
      
      <base:DataBufferWriter keyValue="isTechnologyChange"
        sourceAttrName="'${#:targetAccessTechnology}' != '${#:currentAccessTechnology}' and '${#:targetAccessTechnology}' != ''
        and  (
        /*/*/*/internet/processingType = 'CHANGE'
        or /*/*/*/internet/processingType = 'ADD'
        or /*/*/*/internet/processingType = 'TERM')"/>

      <base:DataBufferWriter keyValue="technology"
        sourceAttrName="name(/*/*/*/ipCentrex | /*/*/*/oneNetBusiness | /*/*/*/sipTrunk | /*/*/*/businessVoip)" />
      
      <base:DataBufferWriter keyValue="orderPositionType"
        sourceAttrName="name(/order/*[count(@orderPositionNumber) > 0])" />      
      
      <base:DataBufferWriter keyValue="isOPMOrder" sourceAttrName="count(/*/*/functions/*[
        completionStatusOldCcbId = 'acknowledgedOPM' or 
        completionStatusOldCcbId = 'precompletedOPM' or 
        completionStatusOldCcbId = 'completedOPM' or 
        completionStatusOldCcbId = 'cancelledOPM' or 
        completionStatusNewCcbId = 'acknowledgedOPM' or 
        completionStatusNewCcbId = 'precompletedOPM' or 
        completionStatusNewCcbId = 'completedOPM' or 
        completionStatusNewCcbId = 'cancelledOPM' or 
        previousCompletionStatusOldCcbId = 'acknowledgedOPM' or 
        previousCompletionStatusOldCcbId = 'precompletedOPM' or 
        previousCompletionStatusOldCcbId = 'completedOPM' or 
        previousCompletionStatusOldCcbId = 'cancelledOPM' or 
        previousCompletionStatusNewCcbId = 'acknowledgedOPM' or 
        previousCompletionStatusNewCcbId = 'precompletedOPM' or 
        previousCompletionStatusNewCcbId = 'completedOPM' or 
        previousCompletionStatusNewCcbId = 'cancelledOPM']) > 0"/>
      
      <base:DataBufferWriter keyValue="isOpenOPMOrder" sourceAttrName="count(/*/*/functions/*[
        completionStatusNewCcbId = 'acknowledgedOPM' or 
        completionStatusOldCcbId = 'acknowledgedOPM' or
        completionStatusNewCcbId = 'precompletedOPM' or 
        completionStatusOldCcbId = 'precompletedOPM' or
        completionStatusNewCcbId = 'precompletedCCM' or 
        completionStatusOldCcbId = 'precompletedCCM']) > 0"/>
      
      <base:DataBufferWriter keyValue="isOrderCancelled" sourceAttrName="count(/*/*/functions/*[
        completionStatusNewCcbId = 'cancelledCCM' or 
        completionStatusNewCcbId = 'cancelledOPM' or 
        completionStatusOldCcbId = 'cancelledCCM' or 
        completionStatusOldCcbId = 'cancelledOPM' or 
        previousCompletionStatusNewCcbId = 'cancelledCCM' or 
        previousCompletionStatusNewCcbId = 'cancelledOPM' or 
        previousCompletionStatusOldCcbId = 'cancelledCCM' or 
        previousCompletionStatusOldCcbId = 'cancelledOPM']) > 0"/>

      <base:DataBufferWriter keyValue="newInternetMainAccess" 
        sourceAttrName="/*/*/*/internet/processingType = 'ADD' or
        /*/*/*/internet/processingType = 'CHANGE' and (
        count(/*/*/*/internet/adslInternetConfiguration | /*/*/*/internet/sdslInternetConfiguration) = 2 
        or count(/*/relocation) > 0 and (/*/*/seatRelocationIndicator = 'false' or '${#:technology}' != 'ipCentrex') 
        or count(/*/*/*/internet/@targetAccessID) > 0 and /*/*/*/internet/@targetAccessID != /*/*/*/internet/@refAccessID
        or count(/*/contractPartnerChange) > 0)" />
      
      <base:DataBufferWriter keyValue="newVoiceMainAccess" 
        sourceAttrName="/*/*/*/voice/processingType = 'ADD' or
        /*/*/*/voice/processingType = 'CHANGE' and (
        count(/*/relocation) > 0 and (/*/*/seatRelocationIndicator = 'false' or '${#:technology}' != 'ipCentrex')
        or count(/*/*/*/voice/@targetAccessID) > 0 and /*/*/*/voice/@targetAccessID != /*/*/*/voice/@refAccessID
        or count(/*/contractPartnerChange) > 0)" />
            
      <base:DataBufferWriter keyValue="terminateInternet"
        sourceAttrName="
        (/*/*/*/internet/processingType = 'TERM' or count(/*/*/*/internet/ccbId[@type='S']/configured) > 0) and
        /*/*/*/internet/completionStatusOldCcbId = 'completedOPM' and count(/*/*/*/internet/completionStatusOldCcbId) > 0
        or
        '${#:newInternetMainAccess}' = 'true' and 
        /*/*/*/internet/completionStatusNewCcbId = 'cancelledOPM' and 
        /*/*/*/internet/previousCompletionStatusNewCcbId = 'precompletedCCM'" />
      
      <base:DataBufferWriter keyValue="terminateVoice"
        sourceAttrName="
        (/*/*/*/voice/processingType = 'TERM' or count(/*/*/*/voice/ccbId[@type='S']/configured) > 0) and
        /*/*/*/voice/completionStatusOldCcbId = 'completedOPM'
        or
        '${#:newVoiceMainAccess}' = 'true' and 
        /*/*/*/voice/completionStatusNewCcbId = 'cancelledOPM' and 
        /*/*/*/voice/previousCompletionStatusNewCcbId = 'precompletedCCM'" />

      <base:DataBufferWriter keyValue="targetInternetExists"
        sourceAttrName="
        '${#:newInternetMainAccess}' = 'true' and 
        (/*/*/*/internet/completionStatusNewCcbId = 'completedCCM' or 
         /*/*/*/internet/completionStatusNewCcbId = 'precompletedCCM' or 
         /*/*/*/internet/previousCompletionStatusNewCcbId = 'precompletedCCM')
        or
        '${#:newInternetMainAccess}' != 'true' and
        count(/*/*/*/internet) > 0 and
        (/*/*/*/internet/processingType != 'TERM' or
          '${#:terminateInternet}' != 'true' and 
          /*/*/*/internet/completionStatusOldCcbId != 'completedCCM' and 
          /*/*/*/internet/completionStatusOldCcbId != 'acknowledgedCCM')"/>
        
      <base:DataBufferWriter keyValue="noInternet"
        sourceAttrName="
        count(/*/*/*/internet) = 0 
        or
        '${#:newInternetMainAccess}' = 'true' and 
        (/*/*/*/internet/completionStatusNewCcbId = 'cancelledCCM' or /*/*/*/internet/completionStatusNewCcbId = 'cancelledOPM')
        or
        '${#:newInternetMainAccess}' != 'true' and
        /*/*/*/internet/processingType = 'TERM' and 
		(/*/*/*/internet/completionStatusOldCcbId = 'completedCCM' 
		  or /*/*/*/internet/completionStatusOldCcbId = 'completedOPM'
		  or /*/*/*/internet/completionStatusOldCcbId = 'acknowledgedCCM') "/>
        
      <base:DataBufferWriter keyValue="targetVoiceExists"
        sourceAttrName="
        '${#:newVoiceMainAccess}' = 'true' and 
        (/*/*/*/voice/completionStatusNewCcbId = 'completedCCM' or 
         /*/*/*/voice/completionStatusNewCcbId = 'precompletedCCM' or 
         /*/*/*/voice/previousCompletionStatusNewCcbId = 'precompletedCCM')
        or
        '${#:newVoiceMainAccess}' != 'true' and
        count(/*/*/*/voice) > 0 and
        (/*/*/*/voice/processingType != 'TERM' or 
          '${#:terminateVoice}' != 'true' and 
          /*/*/*/voice/completionStatusOldCcbId != 'completedCCM' and 
          /*/*/*/voice/completionStatusOldCcbId != 'acknowledgedCCM')"/>
        
      <base:DataBufferWriter keyValue="noVoice"
        sourceAttrName="
        count(/*/*/*/voice) = 0 
        or
        '${#:newVoiceMainAccess}' = 'true' and 
        (/*/*/*/voice/completionStatusNewCcbId = 'cancelledCCM' or /*/*/*/voice/completionStatusNewCcbId = 'cancelledOPM')
        or
        '${#:newVoiceMainAccess}' != 'true' and
        /*/*/*/voice/processingType = 'TERM' and 
		(/*/*/*/voice/completionStatusOldCcbId = 'completedCCM' 
		  or /*/*/*/voice/completionStatusOldCcbId = 'completedOPM'
		  or /*/*/*/voice/completionStatusOldCcbId = 'acknowledgedCCM') "/>
      
      <!-- indicates, if the resp. function will be terminated (or not existing at all) 
        after the current request has been processed -->
      <base:DataBufferWriter keyValue="existingVoiceTerminated"
        sourceAttrName="'${#:targetTechnology}' != 'sipTrunk' or
        '${#:terminateVoice}' = 'true' or
        count(/*/*/*/voice/ccbId[@type = 'S']/existing) = 0 or
        /*/*/*/voice/completionStatusOldCcbId = 'completedCCM' or
        /*/*/*/voice/completionStatusOldCcbId = 'noactionOPM' or
        /*/*/*/voice/completionStatusOldCcbId = 'noactionCOM' or
        /*/*/*/voice/completionStatusOldCcbId = 'acknowledgedCCM'"/>      


	  <!-- TODO
	  SIP-Trunk: 
	  - internet dependent on voice (with PPM-120389) - obsolete
	  - no restrictions (with PPM-189943)
	  OfficeNet: voice dependent on internet
	  BDSL-Only / BIR-Only: no restrictions
	   -->                                                      
      <base:DataBufferWriter keyValue="createInternet"
        sourceAttrName="'${#:newInternetMainAccess}' = 'true' and (
        /*/*/*/internet/completionStatusNewCcbId = 'completedOPM' and /*/*/*/internet/previousCompletionStatusNewCcbId != 'precompletedCCM'
        or /*/*/*/internet/completionStatusNewCcbId = 'precompletedOPM' and /*/*/*/internet/previousCompletionStatusNewCcbId != 'precompletedCCM')"/>

      <!-- indicates, that in this step, a new respective main access has to be created -->
      <base:DataBufferWriter keyValue="createVoiceHelper"
        sourceAttrName="
        '${#:newVoiceMainAccess}' = 'true' and 
        (/*/*/*/voice/completionStatusNewCcbId = 'completedOPM' and /*/*/*/voice/previousCompletionStatusNewCcbId != 'precompletedCCM'
        or /*/*/*/voice/completionStatusNewCcbId = 'precompletedOPM' and /*/*/*/voice/previousCompletionStatusNewCcbId != 'precompletedCCM'
        or '${#:targetTechnology}' = 'isdnS2M' and 
           (/*/*/*/voice/processingType = 'CHANGE' or /*/*/*/voice/processingType = 'ADD') and        
           (/*/*/*/voice/completionStatusNewCcbId = 'noactionOPM' or /*/*/*/voice/completionStatusNewCcbId = 'noactionCOM')) "/>              
      
      <base:DataBufferWriter keyValue="createVoice"
        sourceAttrName="
        ('${#:existingVoiceTerminated}' = 'true' or /*/relocation/relocationVariant = 'Parallel' and /*/relocation/keepFixedNumbersIndicator = 'false') 
        and        
        ('${#:targetTechnology}' != 'sipTrunk' and 
         '${#:createVoiceHelper}' = 'true' and 
         ('${#:createInternet}' = 'true' or '${#:targetInternetExists}' = 'true' or '${#:noInternet}' = 'true')
         or
         '${#:targetTechnology}' = 'sipTrunk' and '${#:createVoiceHelper}' = 'true') "/>
      
      
      <!-- indicates, that in this step, the respective main access has to be reconfigured -->
      <base:DataBufferWriter keyValue="reconfigureInternet"
        sourceAttrName="
        '${#:newInternetMainAccess}' = 'true' and 
        /*/*/*/internet/previousCompletionStatusNewCcbId = 'precompletedCCM' and 
        (/*/*/*/internet/completionStatusNewCcbId = 'completedOPM' or /*/*/*/internet/completionStatusNewCcbId = 'precompletedOPM')
        or
        '${#:newInternetMainAccess}' != 'true' and (
          /*/*/*/internet/completionStatusOldCcbId = 'completedOPM' and count(/*/*/*/internet/completionStatusNewCcbId) = 0
          or /*/*/*/internet/completionStatusOldCcbId = 'precompletedOPM' and count(/*/*/*/internet/completionStatusNewCcbId) = 0
          or /*/*/*/internet/completionStatusOldCcbId = 'completedOPM' and /*/*/*/internet/completionStatusNewCcbId = 'completedOPM'
          or /*/*/*/internet/completionStatusOldCcbId = 'completedCCM' and /*/*/*/internet/completionStatusNewCcbId = 'completedOPM')"/>
      
      <!-- indicates, that in case of one ccbId and two states internet is now reconfigured (IT-k-33552) -->
      <base:DataBufferWriter keyValue="reconfigurePrecompletedInternet"
        sourceAttrName="
        '${#:newInternetMainAccess}' != 'true' and 
        /*/*/*/internet/completionStatusNewCcbId = 'precompletedOPM' and
        count(/*/*/*/internet/completionStatusOldCcbId) > 0"/>

      <!-- indicates, that all dependent functions can now be created (i.e. the parent was already created) -->
      <base:DataBufferWriter keyValue="internetReadyForDependentFunctions"
        sourceAttrName="
        '${#:targetInternetExists}' = 'true' or
        '${#:createInternet}' = 'true'"/>
      
      <!-- indicates, that in this particular step, features of the respective function have to be created -->
      <base:DataBufferWriter keyValue="internetReadyForFeatures"
        sourceAttrName="
        '${#:newInternetMainAccess}' = 'true' and '${#:createInternet}' = 'true'
        or '${#:newInternetMainAccess}' != 'true' and '${#:reconfigureInternet}' = 'true'
        or 
        '${#:isOpenOPMOrder}' = 'false' and '${#:isOrderCancelled}' = 'false' and (
        /*/*/*/internet/processingStatus = 'noactionCOM' or /*/*/*/internet/processingStatus = 'noactionOPM')"/>      
        
      <!-- indicates, that in this step, the respective main access has to be reconfigured -->
      <base:DataBufferWriter keyValue="reconfigureVoice"
        sourceAttrName="
        '${#:newVoiceMainAccess}' = 'true' and (
        /*/*/*/voice/completionStatusNewCcbId = 'completedOPM' and /*/*/*/voice/previousCompletionStatusNewCcbId = 'precompletedCCM' or 
        /*/*/*/voice/completionStatusNewCcbId = 'precompletedOPM' and /*/*/*/voice/previousCompletionStatusNewCcbId = 'precompletedCCM')        
        or
        '${#:newVoiceMainAccess}' != 'true' and 
        /*/*/*/voice/processingType = 'CHANGE' and (
          /*/*/*/voice/completionStatusOldCcbId = 'completedOPM' and count(/*/*/*/voice/completionStatusNewCcbId) = 0
          or /*/*/*/voice/completionStatusOldCcbId = 'precompletedOPM' and count(/*/*/*/voice/completionStatusNewCcbId) = 0
          or /*/*/*/voice/completionStatusOldCcbId = 'completedOPM' and /*/*/*/voice/completionStatusNewCcbId = 'completedOPM')"/>
      
      <!-- indicates, that all dependent functions can now be created (i.e. the parent was already created) -->
      <base:DataBufferWriter keyValue="voiceReadyForDependentFunctions"
        sourceAttrName="
        '${#:targetVoiceExists}' = 'true' or
        '${#:createVoice}' = 'true'"/>
      
      <!-- indicates, that in this particular step, features of the respective function have to be created -->
      <base:DataBufferWriter keyValue="voiceReadyForFeatures"
        sourceAttrName="
        '${#:newVoiceMainAccess}' = 'true' and '${#:createVoice}' = 'true'
        or '${#:newVoiceMainAccess}' != 'true' and '${#:reconfigureVoice}' = 'true'
        or 
        '${#:isOpenOPMOrder}' = 'false' and '${#:isOrderCancelled}' = 'false' 
        and (/*/*/*/voice/processingStatus = 'noactionCOM' or /*/*/*/voice/processingStatus = 'noactionOPM')"/>      
      
      <base:DataBufferWriter keyValue="createNewInternetContract"
        sourceAttrName="count(/*/relocation) > 0 and '${#:newInternetMainAccess}' = 'true' 
        or count(/*/lineChange) > 0 and count(/*/*/*/internet/@targetAccessID) > 0 and /*/*/*/internet/@targetAccessID != /*/*/*/internet/@refAccessID 
        or count(/*/lineCreation) > 0
        or count(/*/contractPartnerChange) > 0" />
      
      <base:DataBufferWriter keyValue="createNewVoiceContract"
        sourceAttrName="count(/*/relocation) > 0 and '${#:newVoiceMainAccess}' = 'true' 
        or count(/*/lineChange) > 0 and count(/*/*/*/voice/@targetAccessID) > 0 and /*/*/*/voice/@targetAccessID != /*/*/*/voice/@refAccessID
        or count(/*/lineCreation) > 0
        or count(/*/contractPartnerChange) > 0" />
      
      <base:DataBufferWriter keyValue="downstreamBandwidthHelper"
        sourceAttrName="concat(
        count(/*/*/*/internet/*/DSLBandwidth/configured),
        count(/*/*/*/internet/*/DSLBandwidth[@action = 'remove']),
        count(/*/*/*/internet[processingType = 'TERM']))"
        decoding="'000', 'existing', '100', 'configured', 'nothing'" />
      <base:DataBufferWriter keyValue="upstreamBandwidthHelper"
        sourceAttrName="concat(
        count(/*/*/*/internet/*/upstreamBandwidth/configured),
        count(/*/*/*/internet/*/upstreamBandwidth[@action = 'remove']),
        count(/*/*/*/internet[processingType = 'TERM']))"
        decoding="'000', 'existing', '100', 'configured', 'nothing'" />
      
      <base:DataBufferWriter keyValue="currentBandwidth"
        sourceAttrName="/*/*/*/internet/*/DSLBandwidth/existing" />
      <base:DataBufferWriter keyValue="targetBandwidth"
        sourceAttrName="/*/*/*/internet/*/DSLBandwidth/${#:downstreamBandwidthHelper}" />
      
      <base:DataBufferWriter keyValue="currentUpstreamBandwidth"
        sourceAttrName="/*/*/*/internet/*/upstreamBandwidth/existing" />
      <base:DataBufferWriter keyValue="targetUpstreamBandwidth"
        sourceAttrName="/*/*/*/internet/*/upstreamBandwidth/${#:upstreamBandwidthHelper}" />
      
      <base:DataBufferWriter keyValue="isBandwidthChange"
        sourceAttrName="'${#:currentBandwidth}' != ''
        and '${#:targetBandwidth}' != '' 
        and '${#:currentBandwidth}' != '${#:targetBandwidth}'"/>
      <base:DataBufferWriter keyValue="isUpstreamBandwidthChange"
        sourceAttrName="'${#:currentUpstreamBandwidth}' != ''
        and '${#:targetUpstreamBandwidth}' != '' 
        and '${#:currentUpstreamBandwidth}' != '${#:targetUpstreamBandwidth}'"/>
      
      <base:DataBufferWriter keyValue="createUpstreamBandwidth"
        sourceAttrName="
        '${#:newInternetMainAccess}' = 'true' 
        and '${#:targetUpstreamBandwidth}' != 'Standard'
        and '${#:targetUpstreamBandwidth}' != ''
        or 
        '${#:newInternetMainAccess}' != 'true' 
        and (
        '${#:isBandwidthChange}' != 'true' 
        and '${#:isUpstreamBandwidthChange}' = 'true'  
        or '${#:isBandwidthChange}' = 'true' 
        and '${#:targetUpstreamBandwidth}' != 'Standard'
        and '${#:targetUpstreamBandwidth}' != '')"/>
        
        
      <base:Include fileIDRef="functionParameters" partIDRef="masterdataParameters"/>
      
      <!--  Allocate step  -->

      <!-- allocate for lineChanges
        1. processingType ADD always generates a new CCB id
        2. processingType CHANGE only generates a new CCB id, if the change will lead to new main access service
        3. In case of relocations, a new service is always created
      -->
      <RequestTemplate fif-request-name="allocateCcbId" sourceWorkingPath="
      	/*/relocation/functions/* | 
      	/*/lineChange/functions/* | 
      	/*/lineCreation/functions/* |
      	/*/contractPartnerChange/functions/*">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/*/*/transactionType" />
          <OrComposite>            
            <base:IsMember value="ADD" sourceAttrName="processingType" />
            <AndComposite>
              <base:IsMember value="internet" sourceAttrName="name(.)" />
              <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess" />
            </AndComposite>
            <AndComposite>
              <base:IsMember value="voice" sourceAttrName="name(.)" />
              <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess" />
            </AndComposite>
            <AndComposite>
              <base:IsMember value="seat" sourceAttrName="name(.)" />
              <base:IsMember value="CHANGE" sourceAttrName="processingType" />
              <OrComposite>
                <base:IsMember value="2" sourceAttrName="count(mobileSeatConfiguration|fixedSeatConfiguration|convergedSeatConfiguration)" />
                <base:IsExisting sourceAttrName="@targetAccessID" />
              </OrComposite>                
            </AndComposite>
            <AndComposite>
              <base:IsMember value="extraNumbers" sourceAttrName="name(.)" />
              <base:IsMember value="CHANGE" sourceAttrName="processingType" />
              <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess" />
            </AndComposite>
            <AndComposite>
              <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
              <OrComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                </AndComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                  <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
                </AndComposite>
                <AndComposite>
                  <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                  <base:IsExisting sourceAttrName="*/listedPhoneNumber/configured"/>
                  <OrComposite>
                    <base:IsMember value="true" sourceAttrName="*/listedPhoneNumber/configured/countryCode != */listedPhoneNumber/existing/countryCode"/>
                    <base:IsMember value="true" sourceAttrName="*/listedPhoneNumber/configured/localAreaCode != */listedPhoneNumber/existing/localAreaCode"/>
                    <base:IsMember value="true" sourceAttrName="*/listedPhoneNumber/configured/pilotNumber != */listedPhoneNumber/existing/pilotNumber"/>                    
                  </OrComposite>
                </AndComposite>
              </OrComposite>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="hardware" sourceAttrName="name(.)"/>
              <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              <base:IsNotMember value="TERM" sourceAttrName="processingType"/>
              <OrComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                  <OrComposite>
                  	<base:IsMember value="true" sourceAttrName="count(refFunctionID/configured) > 0 and name(../*[@ID = '${refFunctionID/configured}']) = 'voice'"/>
                  	<base:IsMember value="true" sourceAttrName="count(refFunctionID/configured) = 0 and name(../*[@ID = '${refFunctionID/existing}']) = 'voice'"/>
                  </OrComposite>
                </AndComposite>
                <AndComposite>
                  <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
                  <OrComposite>
                  	<base:IsMember value="true" sourceAttrName="count(refFunctionID/configured) > 0 and name(../*[@ID = '${refFunctionID/configured}']) = 'internet'"/>
                  	<base:IsMember value="true" sourceAttrName="count(refFunctionID/configured) = 0 and name(../*[@ID = '${refFunctionID/existing}']) = 'internet'"/>
                  </OrComposite>
                </AndComposite>
                <AndComposite>
                  <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess"/>
                  <base:IsMember value="true" sourceAttrName="
                  	  count (*/quantityOfPartiallyExchangedHardware) > 0 and 
                	  */quantityOfPartiallyExchangedHardware != */quantity/existing"/>
                </AndComposite>
              </OrComposite>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        
        <RPMapping staticValue="SERVSUB" targetName="type" />
        <RPMapping targetName="functionID" sourceAttrName="@ID" />
        <RPMapping targetName="systemID" sourceAttrName="${#:orderIdPath}" />
        <RPMapping staticValue="COM" targetName="systemType" />
      </RequestTemplate>
      
      <!-- sets the T flag on bundle items which are supposed to be terminated with this order -->
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/internet"
        extends="modifyBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/voice"
        extends="modifyBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/seat"
        extends="modifyBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
            <AndComposite>
              <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
              <base:IsMember value="true" sourceAttrName="
                /*/*/seatRelocationIndicator = 'true' or
                '${#:newVoiceMainAccess}' = 'true' and count(@targetAccessID) > 0 or
                count(mobileSeatConfiguration|fixedSeatConfiguration|convergedSeatConfiguration) > 1"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>            
      
      <!--
        IT-k-32460
        1) new trx validateAccessNumber
        - check if number exists and it's not to be terminated
        - check within order, if it's terminated
      -->
      <RequestTemplate fif-request-name="validateAccessNumbers" 
        sourceWorkingPath="/*/*/*/voice | /*/*/*/extraNumbers">
        <TemplateConditions>
          <base:IsNotMember value="false" sourceAttrName="internal/validateAccessNumbers"/>
          <base:IsMember value="true" sourceAttrName="
            count(*/portingAccessNumbers/*[starts-with(name(.), 'accessNumber')]/configured) > 0 or
            count(*/portingAccessNumberRanges/*[starts-with(name(.), 'accessNumberRange')]/configured) > 0"/>
          <base:IsNotMember value="LineChangeClone" sourceAttrName="../../../lineCreation/customerIntention" />
          <base:IsNotMember value="RelocationClone" sourceAttrName="../../../lineCreation/customerIntention" />
          <base:IsMember value="allocate" sourceAttrName="/*/*/transactionType" />
        </TemplateConditions>
        
        <RPListTemplate listName="accessNumbers">
          <RPListItemTemplate sourceWorkingPath="*/portingAccessNumbers/*[starts-with(name(.), 'accessNumber')]/configured">
            <TemplateConditions>
              <base:IsMember value="true" sourceAttrName="
                count(/*/*/functions/*/*/portingAccessNumbers/*[starts-with(name(.), 'accessNumber')]/existing[
                countryCode = '${countryCode}' and
                localAreaCode = '${localAreaCode}' and
                pilotNumber = '${pilotNumber}']) = 0"/>
            </TemplateConditions>            
            <RPMapping sourceAttrName="countryCode" targetName="countryCode" />              
            <RPMapping sourceAttrName="localAreaCode" targetName="areaCode" />              
            <RPMapping sourceAttrName="pilotNumber" targetName="localNumber" />              
          </RPListItemTemplate>
        </RPListTemplate>
        <RPListTemplate listName="accessNumberRanges">
          <RPListItemTemplate sourceWorkingPath="*/portingAccessNumberRanges/*[starts-with(name(.), 'accessNumberRange')]/configured">
            <TemplateConditions>
              <base:IsMember value="true" sourceAttrName="
                count(/*/*/functions/*/*/portingAccessNumberRanges/*[starts-with(name(.), 'accessNumberRange')]/existing[
                countryCode = '${countryCode}' and
                localAreaCode = '${localAreaCode}' and
                pilotNumber = '${pilotNumber}' and
                startNumber = '${startNumber}' and
                endNumber = '${endNumber}']) = 0"/>
            </TemplateConditions>            
            <RPMapping sourceAttrName="countryCode" targetName="countryCode" />              
            <RPMapping sourceAttrName="localAreaCode" targetName="areaCode" />              
            <RPMapping sourceAttrName="pilotNumber" targetName="localNumber" />    
            <RPMapping sourceAttrName="startNumber" targetName="beginNumber" />    
            <RPMapping sourceAttrName="endNumber" targetName="endNumber" />                
          </RPListItemTemplate>
        </RPListTemplate>
        <RPMapping targetName="desiredDate" 
          sourceAttrName="/order/*/desiredDate" 
          formatter="SOMToCCBDateFormatter" />
      </RequestTemplate>
      
      <!-- For RMS_172575_PPM_320858_GigaGemeinde -->
       <RequestTemplate fif-request-name="raiseError" sourceWorkingPath="/*/*/functions/internet">
        <TemplateConditions>
		 <base:IsMember value="internet" sourceAttrName="name(.)" />
         <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
		 <base:IsExisting sourceAttrName="fibreInternetConfiguration"/>
		 <base:IsNotExisting sourceAttrName="*/fibreFee/existing"/>
		 <base:IsNotExisting sourceAttrName="*/fibreFee/existing/featureServiceCode" />
         <base:IsNotExisting sourceAttrName="*/fibreFee/configured"/>
		 <base:IsNotExisting sourceAttrName="*/fibreFee/configured/featureServiceCode" />
        </TemplateConditions>
        <RPMapping targetName="errorMessage" staticValue="This Fiber configuration requires fibre fee" />
        <base:DataBufferWriter keyValue="errorRaised" staticValue="true" />
      </RequestTemplate> 
      <!-- For RMS_172575_PPM_320858_GigaGemeinde ended-->
      
      <RequestTemplate fif-request-name="validateReferenceData"
        sourceWorkingPath="/*/*/functions/hardware">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsNotMember value="false" sourceAttrName="internal/validateReferenceData"/>
          <OrComposite>
            <base:IsMember value="ADD" sourceAttrName="processingType" />
            <base:IsMember value="CHANGE" sourceAttrName="processingType" />
          </OrComposite>
          <base:IsMember value="true" sourceAttrName="count(*/conditionsList/*/*[conditionServiceType = 'HW']) > 0" />
          <base:IsMember value="false" sourceAttrName="*/conditionsList/@action = 'remove'" />
        </TemplateConditions>
        
        <RPMapping targetName="groupCode" staticValue="HW_ART_DES" />
        <RPMapping targetName="value" 
          sourceAttrName="*/articleNumber"
          method="configuredExisting" />
        <RPMapping targetName="errorText" sourceAttrName="concat(
          'Hardware ', @ID, ', which contains a hardware bundle service, has an articleNumber (', */articleNumber,  
          '), which is not defined for hardware bundle. See GENERAL_CODE_ITEM, GROUP_CODE = HW_ART_DES')" />
      </RequestTemplate>    
          
	<!--ITK-33592 Additional validation for fixedIPAddresstype in allocate step -->
	
	<RequestTemplate fif-request-name="validatePricingStructure" sourceWorkingPath="/*/*/functions/internet">
	  <TemplateConditions>
	    <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
	    <base:IsNotMember value="false" sourceAttrName="internal/validatePricingStructure"/> 
	    <!-- SPN-FIF-000133059 check existence of fixedIPAddressChangeType/configured tag -->
	    <OrComposite>
	    <AndComposite>
	    <base:IsExisting sourceAttrName="*/fixedIPAddressChangeType/configured"/>
	    <OrComposite>
	    <base:IsMember value="Add" sourceAttrName="*/fixedIPAddressChangeType/configured"/> 
	    <base:IsMember value="Change" sourceAttrName="*/fixedIPAddressChangeType/configured"/>
	    <base:IsMember value="Ignore" sourceAttrName="*/fixedIPAddressChangeType/configured"/>
	    <base:IsMember value="Replace" sourceAttrName="*/fixedIPAddressChangeType/configured"/>
	    </OrComposite>  
	    </AndComposite>
	    <AndComposite>
	    <base:IsExisting sourceAttrName="*/fixedIPAddress/existing"/>
	    <base:IsMember value="CHANGE" sourceAttrName="/*/*/functions/internet/processingType"/>
	    </AndComposite>
	    </OrComposite>
	    
	    <!-- SPN-FIF-000133059 check existence of fixedIPAddressChangeType/configured tag -->
	    <base:IsNotMember value="IGNORE" sourceAttrName="/*/*/functions/internet/processingType"/>      
	  </TemplateConditions>
	        
	  <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>        
	  <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
	  <RPMapping targetName="classification" sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/classification" method="configuredExisting" />
	  <RPMapping targetName="customerCategory" sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/customerCategory" method="configuredExisting" />
      <RPMapping targetName="pricingStructureCode" sourceAttrName="*/pricingStructureCode" method="configuredExisting" />   
	  <RPMapping targetName="targetServiceCode"  staticValue="I1222"/>
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	  <TransformationTemplate>
	    <TemplateConditions>
	      <base:IsNotExisting sourceAttrName="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/configured" />
	    </TemplateConditions>
	    <RPListTemplate listName="affinityGroupList">
	      <RPListItemTemplate sourceWorkingPath="/order/*/customer[ccbId[@type = 'C']/* = '${#:targetCustomerNumber}']/affinityGroupList/existing/affinityGroup">
	        <RPMapping sourceAttrName="." targetName="affinityGroup" />
	      </RPListItemTemplate>
	    </RPListTemplate>
	  </TransformationTemplate>
	</RequestTemplate>   
	<!-- ITK-33592 Additional validation for fixedIPAddresstype in allocate step --> 
	
	<!-- validate that all mentioned tariff options are of proper serviceType -->      
      <RequestTemplate fif-request-name="validateTariffOptions"
        sourceWorkingPath="/*/*/functions/voice">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsNotMember value="false" sourceAttrName="internal/validateTariffOptions"/>
          <OrComposite>
            <base:IsExisting sourceAttrName="*/tariffOptionsList/configured" />
            <AndComposite>
              <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              <base:IsExisting sourceAttrName="*/tariffOptionsList/existing" />
            </AndComposite>                  
          </OrComposite>                
        </TemplateConditions>
        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="*/tariffOptionsList/configured" />
          </TemplateConditions>
          <RPListTemplate listName="tariffOptionsList">
            <RPListItemTemplate sourceWorkingPath="*/tariffOptionsList/existing/tariffOption/serviceCode">
              <RPMapping sourceAttrName="." targetName="serviceCode" />                    
            </RPListItemTemplate>
          </RPListTemplate>          
        </TransformationTemplate>                  
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="*/tariffOptionsList/configured" />
          </TemplateConditions>
          <RPListTemplate listName="tariffOptionsList">
            <RPListItemTemplate sourceWorkingPath="*/tariffOptionsList/configured/tariffOption/serviceCode">
              <RPMapping sourceAttrName="." targetName="serviceCode" />                    
            </RPListItemTemplate>
          </RPListTemplate>          
        </TransformationTemplate>                          
      </RequestTemplate> 
      
		<!-- IT-k-33954  Change ManualFee to Manual -->
	  <RequestTemplate fif-request-name="modifyMethodOfPayment"  sourceWorkingPath="/order/relocation | /order/lineChange">
		<TemplateConditions>
			<base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
			<OrComposite>
			<AndComposite>
				<base:IsMember value="true" sourceAttrName="count(//methodOfPayment/paymentMethod/configured) > 0" />
				<base:IsMember value="MANUAL_FEE" sourceAttrName="/*/*/billingAccount[@ID='${/*/*/payerAllCharges/billingAccountNodeRefID}']/methodOfPayment/paymentMethod/configured"/>
			</AndComposite>
			<AndComposite>
				<base:IsMember value="true" sourceAttrName="count(//methodOfPayment/paymentMethod/existing) > 0 and count(//methodOfPayment/paymentMethod/configured)= 0" />
				<base:IsMember value="MANUAL_FEE" sourceAttrName="/*/*/billingAccount[@ID='${/*/*/payerAllCharges/billingAccountNodeRefID}']/methodOfPayment/paymentMethod/existing"/>
			</AndComposite>
			</OrComposite>
			<OrComposite>
			<AndComposite>
				<base:IsExisting sourceAttrName="/order/lineChange"/>
				<OrComposite>
					<base:IsMember value="LineChange" sourceAttrName="customerIntention"/>
					<base:IsMember value="Winback" sourceAttrName="customerIntention"/>
					<base:IsMember value="SetTariffOptions" sourceAttrName="customerIntention"/>
				</OrComposite>
			</AndComposite>
				<base:IsExisting sourceAttrName="/order/relocation"/>
			</OrComposite>
		</TemplateConditions>
			<RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber"/>
			<RPMapping targetName="accountNumber" sourceAttrName="#:targetAccountNumber"/>
			<RPMapping targetName="paymentMethod" staticValue="MANUAL"/>
	</RequestTemplate>
	<!-- End of IT-k-33954 -->
	
      <RequestTemplate fif-request-name="validateBlockingOrder"
        sourceWorkingPath="/*/*/functions/voice | /*/*/functions/internet | /*/*/functions/seat">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <base:IsNotMember value="false" sourceAttrName="internal/validateBlockingOrder"/>
          <base:IsExisting sourceAttrName="ccbId[@type = 'S']/existing" />
        </TemplateConditions>
          
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing" />                   

      </RequestTemplate>        

      <!-- 
        IT-k-32460
        2) check, if the seat phone numbers don't exceed the maximum length 
      -->
      <RequestTemplate fif-request-name="raiseError" 
        sourceWorkingPath="/*/*/*/seat/*/fixedAccessNumber/configured | /*/*/*/seat/*/mobileAccessNumber/configured">
        <TemplateConditions>         
          <base:IsNotMember value="false" sourceAttrName="internal/validateReferenceData"/>
          <base:IsMember value="allocate" sourceAttrName="/*/*/transactionType" />
          <base:IsMember value="true" 
            sourceAttrName="string-length(localAreaCode) + string-length(pilotNumber) > 11" />          
        </TemplateConditions>        
        <RPMapping targetName="errorCode" sourceAttrName="147001" />
        <RPMapping targetName="errorMessage" sourceAttrName="concat(
          'CCM7001 Seat ', ../../../@ID, ', ist mit der Rufnummer ', concat('0', localAreaCode, pilotNumber), ', konfiguriert, die die maximale Länge von 12 Stellen überschreitet.')" />
      </RequestTemplate>      
                  
      <RequestTemplate fif-request-name="getContractDates" 
        sourceWorkingPath="/*/*/functions/seat | /*/*/functions/voice | /*/*/functions/internet">
        <TemplateConditions>         
          <base:IsMember value="allocate" sourceAttrName="/*/*/transactionType" />
          <base:IsNotExisting sourceAttrName="*/contractExpirationDate/configured" />
        </TemplateConditions>
                
        <RPMapping targetName="functionID" sourceAttrName="@ID" />        
        <RPMapping targetName="minPeriodDurationValue"
          sourceAttrName="*/minimumDurationPeriod/value"
          method="configuredExisting" />
        <RPMapping targetName="minPeriodDurationUnit"
          sourceAttrName="*/minimumDurationPeriod/unit"
          method="configuredExisting" />
        <RPMapping targetName="autoExtentPeriodValue"
          sourceAttrName="*/autoExtension/value"
          method="configuredExisting" />
        <RPMapping targetName="autoExtentPeriodUnit"
          sourceAttrName="*/autoExtension/unit"
          method="configuredExisting" />
        <RPMapping targetName="autoExtensionInd"
          sourceAttrName="*/autoExtension/autoExtensionIndicator"
          method="configuredExisting"
          decoding="'true', 'Y', 'N'" />
        
        <!-- cases where createFunctions will be used
              - desiredDate, if startDate/configured is not provided -->
        <TransformationTemplate>
          <TemplateConditions>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="internet" sourceAttrName="name(.)"/>
                <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>              
              </AndComposite>
              <AndComposite>
                <base:IsMember value="voice" sourceAttrName="name(.)"/>
                <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>              
              </AndComposite>
              <AndComposite>
                <base:IsMember value="seat" sourceAttrName="name(.)" />
                <OrComposite>
                  <base:IsMember value="ADD" sourceAttrName="processingType" />
                  <base:IsMember value="true" sourceAttrName=" processingType = 'CHANGE' and )
                    count(mobileSeatConfiguration|fixedSeatConfiguration|convergedSeatConfiguration) = 2
                    or count(@targetAccessID) > 0)" />
                </OrComposite>
              </AndComposite>
            </OrComposite>
          </TemplateConditions>                   
          <TransformationTemplate>
            <TemplateConditions>
              <base:IsNotExisting sourceAttrName="*/minimumDurationPeriod/startDate/configured" />
            </TemplateConditions>
            <RPMapping targetName="minPeriodDurationStartDate" 
              sourceAttrName="../../desiredDate"
              formatter="SOMToCCBDateFormatter"/>                    
          </TransformationTemplate>
          <TransformationTemplate>
            <TemplateConditions>
              <base:IsExisting sourceAttrName="*/minimumDurationPeriod/startDate/configured" />
            </TemplateConditions>
            <RPMapping targetName="minPeriodDurationStartDate" 
              sourceAttrName="*/minimumDurationPeriod/startDate/configured"
              formatter="SOMToCCBDateFormatter"/>
          </TransformationTemplate>                  
        </TransformationTemplate>
          
        <!-- cases where modifyContract will be used -->          
        <TransformationTemplate>
          <TemplateConditions>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="internet" sourceAttrName="name(.)"/>
                <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess"/>              
              </AndComposite>
              <AndComposite>
                <base:IsMember value="voice" sourceAttrName="name(.)"/>
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>              
              </AndComposite>
              <AndComposite>
                <base:IsMember value="seat" sourceAttrName="name(.)" />
                <base:IsNotMember value="ADD" sourceAttrName="processingType" />
                <base:IsNotMember value="true" sourceAttrName=" processingType = 'CHANGE' and )
                    count(mobileSeatConfiguration|fixedSeatConfiguration|convergedSeatConfiguration) = 2
                    or count(@targetAccessID) > 0)" />
              </AndComposite>
            </OrComposite>
          </TemplateConditions>                   
          <TransformationTemplate>
            <TemplateConditions>
              <base:IsNotExisting sourceAttrName="*/minimumDurationPeriod/startDate/existing" />
              <base:IsNotExisting sourceAttrName="*/minimumDurationPeriod/startDate/configured" />
            </TemplateConditions>
            <RPMapping targetName="minPeriodDurationStartDate" staticValue="today"/>                    
          </TransformationTemplate>
          <TransformationTemplate>
            <TemplateConditions>
              <OrComposite>
	            <base:IsExisting sourceAttrName="*/minimumDurationPeriod/startDate/existing" />
	            <base:IsExisting sourceAttrName="*/minimumDurationPeriod/startDate/configured" />
              </OrComposite>
            </TemplateConditions>
            <RPMapping targetName="minPeriodDurationStartDate" 
              sourceAttrName="*/minimumDurationPeriod/startDate"
              method="configuredExisting"
              formatter="SOMToCCBDateFormatter"/>
          </TransformationTemplate>        
        </TransformationTemplate>
        
      </RequestTemplate>      
                  
      <!-- reset the bundle future indicator in case of a cancellation -->
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/internet"
        extends="resetBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
          </OrComposite>          
        </TemplateConditions>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/voice"
        extends="resetBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="modifyBundle"
        sourceWorkingPath="/*/*/functions/seat"
        extends="resetBundleTemplate">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="TERM" sourceAttrName="processingType"/>
            <AndComposite>
              <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
              <base:IsMember value="true" sourceAttrName="
                /*/*/seatRelocationIndicator = 'true' or
                '${#:newVoiceMainAccess}' = 'true' and count(@targetAccessID) > 0 or
                count(mobileSeatConfiguration|fixedSeatConfiguration|convergedSeatConfiguration) > 1"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
      </RequestTemplate>      

      <RequestTemplate fif-request-name="findBundle"
        sourceWorkingPath="/order/contractPartnerChange">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
        </TemplateConditions>
        <RPMapping targetName="bundleId" sourceAttrName="ccbId[@type = 'B']/configured" />        
        <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
        <RPMapping targetName="createBundle" staticValue="Y" />
      </RequestTemplate>
     
      <RequestTemplate fif-request-name="createOneNetSite"
        sourceWorkingPath="/order/contractPartnerChange/*/oneNetBusiness">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
        </TemplateConditions>
        <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />        
        <RPMapping targetName="oneNetId" sourceAttrName="*/oneNetId" method="configuredExisting" />
        <RPMapping targetName="siteId" sourceAttrName="*/siteID" method="configuredExisting" />
      </RequestTemplate>
      
      <!-- exeute step, which creates all the contracts and services in CCM -->
      <RequestTemplate fif-request-name="findBundle" 
        sourceWorkingPath="/order/relocation | /order/lineCreation | /order/lineChange | /order/termination">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="ADD" sourceAttrName="functions/*/processingType" />
            <base:IsMember value="CHANGE" sourceAttrName="functions/*/processingType" />
          </OrComposite>
          <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        </TemplateConditions>
        <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
        <RPMapping targetName="bundleId" 
          sourceAttrName="ccbId[@type = 'B']"
          method="configuredExisting" />        
        <RPMapping targetName="createBundle" 
          sourceAttrName="count(/*/*/functions/*/ccbId[@type = 'S']/configured) > 0" 
          decoding="'true', 'Y', 'N'" />
        
        <RPListTemplate listName="serviceList">
          <RPListItemTemplate sourceWorkingPath="
            accesses/*[@ID = '${functions/*/@targetAccessID}']/ccbId[@type='S']/existing">
            <RPMapping sourceAttrName="." targetName="serviceSubscriptionId" />
          </RPListItemTemplate>
          <RPListItemTemplate sourceWorkingPath="
            accesses/*[@ID = '${functions/*/@refAccessID}']/ccbId[@type='S']/existing">
            <RPMapping sourceAttrName="." targetName="serviceSubscriptionId" />
          </RPListItemTemplate>
          <RPListItemTemplate sourceWorkingPath="
            functions/*/ccbId[@type='S']/configured | 
            functions/voice/ccbId[@type='S']/existing |
            functions/internet/ccbId[@type='S']/existing">
            <RPMapping sourceAttrName="." targetName="serviceSubscriptionId" />
          </RPListItemTemplate>
        </RPListTemplate>      
        <base:Include fileIDRef="functionParameters" partIDRef="debugOutputParameters"/>  
        <base:Include fileIDRef="functionParameters" partIDRef="changeExternalOrder"/>
      </RequestTemplate>


      <RequestTemplate fif-request-name="findBundle"
        sourceWorkingPath="/order/contractPartnerChange">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        </TemplateConditions>
          
        <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
        <RPListTemplate listName="serviceList">
          <RPListItemTemplate sourceWorkingPath="functions/voice/ccbId[@type='S']/configured | functions/internet/ccbId[@type='S']/configured">
            <RPMapping sourceAttrName="." targetName="serviceSubscriptionId"/>
          </RPListItemTemplate>
        </RPListTemplate>
        
        <RPMapping targetName="bundleId" sourceAttrName="ccbId[@type = 'B']/configured" />        
        <RPMapping targetName="createBundle" 
          sourceAttrName="count(/*/*/functions/*/ccbId[@type = 'S']/configured) > 0" 
          decoding="'true', 'Y', 'N'" />
        
        <base:Include fileIDRef="functionParameters" partIDRef="changeExternalOrder"/>
        <base:Include fileIDRef="functionParameters" partIDRef="debugOutputParameters"/>
      </RequestTemplate>


      <!-- *********************** LINE CREATION START *********************** -->
      
      <!-- exeute step, which creates all the contracts and services in CCM -->
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/order/lineCreation/functions/internet" 
        extends="BusinessDSLCreation_template"/>

      <!-- fixed IP address, if desired -->
      <RequestTemplate fif-request-name="addChildService" 
        sourceWorkingPath="/order/lineCreation/functions/internet" 
        extends="fixedIPAdress_template"/>
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/order/lineCreation/functions/voice" 
        extends="VoiceCreation_template"/>
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/order/lineCreation/functions/voice" 
        extends="OP_ISDNS2MCreation_template"/>
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/order/lineCreation/functions/seat" 
        extends="IPCentrexSeatCreation_template"/>

      <RequestTemplate fif-request-name="addExtraNumberService" 
        sourceWorkingPath="/*/lineCreation/*/extraNumbers" 
        extends="extraNumbers_template"/>
      
      <!-- order refenence service, if applicable -->
      <RequestTemplate fif-request-name="addChildService" 
        sourceWorkingPath="/order/lineCreation/functions/voice" 
        extends="referenceOrder_template"/>
      
      <!-- features -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/seat" 
        extends="modifyFeaturesFeatures_template" />
      
      <!-- serviceLevel -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/seat" 
        extends="modifyFeaturesServiceLevel_template">
        <TemplateConditions>
          <base:IsNotMember value="sipTrunk" sourceAttrName="#:targetTechnology" />
        </TemplateConditions>
      </RequestTemplate>
      
      <!-- serviceLevel for SIP-Trunk -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice" 
        extends="modifyFeaturesServiceLevelSIPTrunk_template">
        <TemplateConditions>
          <base:IsMember value="sipTrunk" sourceAttrName="#:targetTechnology" />
        </TemplateConditions>
      </RequestTemplate>
      
      <!-- serviceLevelLegal -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/seat" 
        extends="modifyFeaturesServiceLevelLegal_template" />
      
      <!-- IPV6 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet"
        extends="modifyFeaturesIPV6_template"/>
        
      <!-- desired countries -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/seat" 
        extends="modifyFeaturesCountries_template" />
      
      <!-- tariff options -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/seat" 
        extends="modifyFeaturesTariffOptions_template" />
      
      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/seat" 
        extends="modifyFeaturesConditions_template" />
      
      <!-- blocking services -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/voice" 
        extends="modifyFeaturesBlockingServices_template" />
      
      <!-- licences -->
      <RequestTemplate fif-request-name="modifyOneNetBusinessServices" 
        sourceWorkingPath="/*/lineCreation/*/voice" 
        extends="modifyFeaturesLicences_template" />
      
      <!-- licenceOptions -->
      <RequestTemplate fif-request-name="modifyOneNetBusinessServices" 
        sourceWorkingPath="/*/lineCreation/*/voice" 
        extends="modifyFeaturesLicenceOptions_template" />
      
      <!-- charges and credits -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/seat" 
        extends="modifyFeaturesChargesAndCredits_template" />
      
      <!-- IT-27749 installation fees -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/voice | /*/lineCreation/*/seat" 
        extends="modifyFeaturesInstallationFees_template" />
      
      <!-- DSL bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet" 
        extends="modifyFeaturesDSLBandwidth_template"/>

      <!-- fibre fee -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineCreation/*/internet" 
        extends="modifyFeaturesFibreFee_template"/>

      <!-- upstream bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet" 
        extends="modifyFeaturesDSLUpstreamBandwidth_template"/>
      
      <!-- voice prioritization -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/internet" 
        extends="modifyFeaturesVoicePrioritization_template"/>

      <!-- safety package -->
      <RequestTemplate fif-request-name="createSafetyPackage" 
        sourceWorkingPath="/*/lineCreation/*/safetyPackage" 
        extends="standaloneContractFunctionCreation_template" />

      <!-- installation service -->
      <RequestTemplate fif-request-name="addInstallationService" 
        sourceWorkingPath="/*/lineCreation/*/installationSvc" 
        extends="installationService_template" />
      
      <!-- hardware service -->
      <RequestTemplate fif-request-name="addHardwareService" 
        sourceWorkingPath="/*/lineCreation/*/hardware" 
        extends="hardwareService_template" />
      
      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineCreation/*/hardware" 
        extends="modifyFeaturesConditions_template" />
      
      <!-- directory entry -->
      <RequestTemplate fif-request-name="createDirectoryEntry" 
        sourceWorkingPath="/*/lineCreation/*/directoryEntry" 
        extends="directoryEntry_template" >
      </RequestTemplate>
                        
      <!-- termination of precompleted line -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/lineCreation/*/internet"  
        extends="terminateFunction_template"/>   
        
     <!-- termination of precompleted line -->
     <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/lineCreation/*/voice"  
        extends="terminateFunction_template"/>          
            
      <!-- reconfiguration of voice function -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineCreation/*/voice" 
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* 
            | initialContractStartDate
            | ipCentrexSiteConfiguration/*
            | sipTrunkS2MConfiguration/*
            | voicePBXConfiguration/*
            | voiceONBConfiguration/*
            | */portingAccessNumbers/*
            | */portingAccessNumberRanges/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="sipTrunkStartDate"/>
          <base:Include fileIDRef="functionParameters" partIDRef="sipTrunkVoiceChannelsRange"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>
          <RPListItemTemplate>
              <RPMapping targetName="parameterName" staticValue="processingType"/>
              <RPMapping targetName="configuredValue" staticValue="COM"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineCreation/*/internet" 
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            adslInternetConfiguration/* | 
            sdslInternetConfiguration/* |
            fibreInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="technology"/>
            <RPMapping targetName="configuredValue" sourceAttrName="#:technology"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>

      <RequestTemplate fif-request-name="reconfigureFunction" 
          sourceWorkingPath="/*/lineCreation/*/internet | /*/lineCreation/*/directoryEntry | /*/lineCreation/*/voice" 
        extends="reconfigureFunctionPrecompleted_template">
      </RequestTemplate>
      
      <!-- reconfiguration of seat function -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineCreation/*/seat" 
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            mobileSeatConfiguration/* | 
            fixedSeatConfiguration/* | 
            convergedSeatConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
            
      <!-- activate the services without OP -->
      <RequestTemplate fif-request-name="activateCustomerOrder" sourceWorkingPath="/*/lineCreation/*/voice |
        /*/lineCreation/*/internet |
        /*/lineCreation/*/extraNumbers |
        /*/lineCreation/*/seat |
        /*/lineCreation/*/hardware |
        /*/lineCreation/*/installationSvc |
        /*/lineCreation/*/safetyPackage |
        /*/lineCreation/*/directoryEntry">
        <TemplateConditions>
          <OrComposite>
            <AndComposite>
              <base:IsMember value="ADD" sourceAttrName="processingType" />
            </AndComposite>
            <AndComposite>
              <base:IsMember value="completedCCM" sourceAttrName="processingStatus" />
              <base:IsMember value="true" sourceAttrName="internal/updateFunctionIndicator" />
            </AndComposite>
          </OrComposite>
          <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        </TemplateConditions>
        
        <RPMapping sourceAttrName="@ID" targetName="functionID" />
      </RequestTemplate>
      
      <!-- handle Busvoip access bundle -->
      <RequestTemplate fif-request-name="handleBusVoipAccessBundle" 
        sourceWorkingPath="/*/lineCreation/*/voice" 
        extends="referenceOrderBundle_template"/>

      <!-- *********************** LINE CREATION END *********************** -->
      
      <!-- *********************** LINE CHANGE START *********************** -->
            
      <!-- implicit termination, order position = lineChange -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/lineChange/*/internet | /*/lineChange/*/voice | /*/lineChange/*/seat | 
        /*/lineChange/*/safetyPackage | /*/lineChange/*/extraNumbers | /*/lineChange/*/directoryEntry"  
        extends="terminateFunction_template"/>
      
      <!-- contract change, will be called, if any contract parameter is changed -->
      <RequestTemplate fif-request-name="modifyContract" 
        sourceWorkingPath="/*/lineChange/*/internet"
        extends="modifyContract_template"/>
      
      <!-- create new PS, if needed -->
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/lineChange/functions/internet" 
        extends="BusinessDSLCreation_template"/>                        
                                    
      <!-- contract change, will be called, if any contract parameter is changed -->
      <RequestTemplate fif-request-name="modifyContract" 
        sourceWorkingPath="/*/lineChange/*/voice"
        extends="modifyContract_template"/>
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/lineChange/functions/voice" 
        extends="VoiceCreation_template" />
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/lineChange/functions/voice" 
        extends="OP_ISDNS2MCreation_template" />
      
      <RequestTemplate fif-request-name="addExtraNumberService" 
        sourceWorkingPath="/*/lineChange/*/extraNumbers" 
        extends="extraNumbers_template"/>
      
      <!-- reconfiguration of extraNumbers -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineChange/*/extraNumbers" 
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="singleNumberConfiguration/* | numberRangeConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- contract change, will be called, if any contract parameter is changed -->
      <RequestTemplate fif-request-name="modifyContract" 
        sourceWorkingPath="/*/lineChange/*/seat"
        extends="modifyContract_template"/>        
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/lineChange/functions/seat" 
        extends="IPCentrexSeatCreation_template" />

      <!-- reconfiguration of reference order -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineChange/*/voice" 
        extends="reconfigureFunction_template">

        <TemplateConditions>
          <base:IsExisting sourceAttrName="../../accesses/*/referenceOrder" />
          <OrComposite>
            <base:IsExisting sourceAttrName="../../accesses/*/referenceOrder/fixedIPAddress/configured" />
            <base:IsExisting sourceAttrName="../../accesses/*/referenceOrder/barcode" />
            <base:IsExisting sourceAttrName="../../accesses/*/referenceOrder/orderPositionNumber" />
            <base:IsExisting sourceAttrName="../../accesses/*/referenceOrder/staticAAAAccountName" />
          </OrComposite>
          <base:IsMember value="voice" sourceAttrName="name(.)" />
          <base:IsMember value="false" sourceAttrName="#:newVoiceMainAccess" />
          <base:IsMember value="CHANGE" sourceAttrName="processingType" />
        </TemplateConditions>

        <RPMapping staticValue="VI081" targetName="childServiceCode" />

        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="../../accesses/*/referenceOrder/*">
            <TransformationTemplate>
              <TemplateConditions>
                <OrComposite>
                  <base:IsMember value="fixedIPAddress" sourceAttrName="name(.)" />
                  <base:IsMember value="barcode" sourceAttrName="name(.)" />
                  <base:IsMember value="orderPositionNumber" sourceAttrName="name(.)" />
                  <base:IsMember value="staticAAAAccountName" sourceAttrName="name(.)" />
                </OrComposite>
              </TemplateConditions>
              <RPMapping sourceAttrName="name(.)" targetName="parameterName" />
              <TransformationTemplate>
                <TemplateConditions>
                  <base:IsExisting sourceAttrName="configured" />
                  <base:IsNotExisting sourceAttrName="configured/*" />
                </TemplateConditions>
                <RPMapping sourceAttrName="configured" targetName="configuredValue" />
              </TransformationTemplate>
              <TransformationTemplate>
                <TemplateConditions>
                  <base:IsExisting sourceAttrName="existing" />
                  <base:IsNotExisting sourceAttrName="existing/*" />
                </TemplateConditions>
                <RPMapping sourceAttrName="existing" targetName="existingValue" />
              </TransformationTemplate>
              <TransformationTemplate>
                <TemplateConditions>
                  <base:IsNotExisting sourceAttrName="configured" />
                  <base:IsNotExisting sourceAttrName="existing" />
                </TemplateConditions>
                <RPMapping sourceAttrName="." targetName="configuredValue" />
              </TransformationTemplate>
            </TransformationTemplate>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>

      <!-- replace monthly charge service in case of a change in subsidized hardware -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/seat" 
        extends="modifyFeatures_template">
        <TemplateConditions>
          <base:IsMember value="CHANGE" sourceAttrName="processingType" />
          <base:IsMember value="1" sourceAttrName="count(mobileSeatConfiguration|fixedSeatConfiguration|convergedSeatConfiguration)" />
          <base:IsNotExisting sourceAttrName="@targetAccessID" />
          <base:IsMember value="true" 
            sourceAttrName="count(*/subsidizedHardwareIndicator/configured) > 0 and
            */subsidizedHardwareIndicator/existing != */subsidizedHardwareIndicator/configured" />          
        </TemplateConditions>
        
        <RPListTemplate listName="existingServiceList">
          <RPListItemTemplate sourceWorkingPath=".">
            <RPMapping targetName="serviceCode" 
              sourceAttrName="concat(*/subsidizedHardwareIndicator/existing, name(*/subsidizedHardwareIndicator/existing/../..))"
              decoding="
              'falseconvergedSeatConfiguration', 'VI050',
              'trueconvergedSeatConfiguration', 'VI051',
              'falsefixedSeatConfiguration', 'VI052', 
              'truefixedSeatConfiguration', 'VI053', 
              'falsemobileSeatConfiguration', 'VI054', 
              'truemobileSeatConfiguration', 'VI055'" />
          </RPListItemTemplate>
        </RPListTemplate>
        <RPListTemplate listName="configuredServiceList">
          <RPListItemTemplate sourceWorkingPath=".">
            <RPMapping targetName="serviceCode" 
              sourceAttrName="concat(*/subsidizedHardwareIndicator/configured, name(*/subsidizedHardwareIndicator/existing/../..))"
              decoding="
              'falseconvergedSeatConfiguration', 'VI050',
              'trueconvergedSeatConfiguration', 'VI051',
              'falsefixedSeatConfiguration', 'VI052', 
              'truefixedSeatConfiguration', 'VI053', 
              'falsemobileSeatConfiguration', 'VI054', 
              'truemobileSeatConfiguration', 'VI055'" />
          </RPListItemTemplate>
        </RPListTemplate>
        <base:DataBufferWriter keyValue="listType" staticValue="DSLBandwidth" />
        <RPMapping targetName="listType" sourceAttrName="#:listType" />
        <base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>        
      </RequestTemplate>      
      
      <!-- reconfiguration of voice function -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineChange/*/voice" 
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/*
            | initialContractStartDate
            | ipCentrexSiteConfiguration/*
            | sipTrunkS2MConfiguration/*
            | voicePBXConfiguration/*
            | voiceONBConfiguration/*
            | */portingAccessNumbers/*
            | */portingAccessNumberRanges/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="sipTrunkStartDate"/>
          <base:Include fileIDRef="functionParameters" partIDRef="sipTrunkVoiceChannelsRange"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="processingType"/>
            <RPMapping targetName="configuredValue" staticValue="COM"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineChange/*/internet" 
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            adslInternetConfiguration/* | 
            sdslInternetConfiguration/* |
            fibreInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="technology"/>
            <RPMapping targetName="configuredValue" sourceAttrName="#:technology"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>

      <RequestTemplate fif-request-name="reconfigureFunction" 
          sourceWorkingPath="/*/lineChange/*/internet | /*/lineChange/*/directoryEntry | /*/lineChange/*/voice" 
        extends="reconfigureFunctionPrecompleted_template">
      </RequestTemplate>
      
      <!-- reconfiguration of seat function -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineChange/*/seat" 
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            mobileSeatConfiguration/* | 
            fixedSeatConfiguration/* | 
            convergedSeatConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>

      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/hardware" 
        extends="reconfigureFunction_template">
        <RPMapping targetName="serviceCode" sourceAttrName="*/hardwareServiceCode/existing"/>
        <RPMapping targetName="reason" staticValue="AEND"/>
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate
            sourceWorkingPath="hardwareConfiguration/*
            | hardwareConfiguration/hardwareDelivery/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>      
      
      <!-- removal of fixed IP address -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/internet" 
        extends="modifyFeatures_template" >        
        <TemplateConditions>
          <base:IsMember value="Remove" sourceAttrName="*/fixedIPAddressChangeType/configured" />
        </TemplateConditions>
        <RPMapping targetName="action" staticValue="remove" />
        <RPListTemplate listName="existingServiceList">
          <RPListItemTemplate sourceWorkingPath=".">
            <RPMapping targetName="serviceCode" staticValue="I1222" />
          </RPListItemTemplate>
        </RPListTemplate>
        <base:DataBufferWriter keyValue="listType" staticValue="fixedIPAddress" />
        <RPMapping targetName="listType" sourceAttrName="#:listType" />
        <base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>        
      </RequestTemplate>      

      <!-- fixed IP address, if desired -->
      <RequestTemplate fif-request-name="addChildService" 
        sourceWorkingPath="/order/lineChange/functions/internet" 
        extends="fixedIPAdress_template"/>      

      <!-- reconfiguration of fixed IP address -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineChange/*/internet" 
        extends="reconfigureFunction_template">
        
        <TemplateConditions>
          <base:IsMember value="false" sourceAttrName="#:newInternetMainAccess" />
          <base:IsMember value="CHANGE" sourceAttrName="processingType" />
          <base:IsMember value="Replace" sourceAttrName="*/fixedIPAddressChangeType/configured" />
        </TemplateConditions>
        <RPMapping staticValue="I1222" targetName="childServiceCode" />
        
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="*/*">
            <TransformationTemplate>
              <TemplateConditions>
                <OrComposite>
                  <base:IsMember value="fixedIPAddress" sourceAttrName="name(.)" />
                  <base:IsMember value="dialInAccountNameStatic" sourceAttrName="name(.)" />
                </OrComposite>
              </TemplateConditions>
              <RPMapping sourceAttrName="name(.)" targetName="parameterName" />
              <TransformationTemplate>
                <TemplateConditions>
                  <base:IsExisting sourceAttrName="configured" />
                  <base:IsNotExisting sourceAttrName="configured/*" />
                </TemplateConditions>
                <RPMapping sourceAttrName="configured" targetName="configuredValue" />
              </TransformationTemplate>
              <TransformationTemplate>
                <TemplateConditions>
                  <base:IsExisting sourceAttrName="existing" />
                  <base:IsNotExisting sourceAttrName="existing/*" />
                </TemplateConditions>
                <RPMapping sourceAttrName="existing" targetName="existingValue" />
              </TransformationTemplate>
            </TransformationTemplate>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- new objects from ADD -->

      <!-- safetyPackage -->
      <RequestTemplate fif-request-name="createSafetyPackage" sourceWorkingPath="/*/lineChange/*/safetyPackage" extends="standaloneContractFunctionCreation_template" />

      <!-- installation service -->
      <RequestTemplate fif-request-name="addInstallationService" sourceWorkingPath="/*/lineChange/*/installationSvc" extends="installationService_template" />

      <!-- hardware service -->
      <RequestTemplate fif-request-name="addHardwareService" sourceWorkingPath="/*/lineChange/*/hardware" extends="hardwareService_template" />

      <!-- reconfiguration for old hardware during partial HW exchange -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/hardware" >
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
          <base:IsMember value="completedOPM" sourceAttrName="processingStatus"/>
          <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
          <base:IsMember value="true" sourceAttrName="
          		count (*/quantityOfPartiallyExchangedHardware) > 0 and 
          		*/quantityOfPartiallyExchangedHardware != */quantity/existing"/>
        </TemplateConditions>
                
        <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing"/>
        <RPMapping targetName="processingStatus" staticValue="completedOPM" />
        <RPMapping targetName="functionID" sourceAttrName="@ID" />
        <RPMapping targetName="serviceCode" sourceAttrName="*/hardwareServiceCode/existing"/>
        <RPMapping targetName="reason" staticValue="AEND"/>
        <RPMapping targetName="providerTrackingNumber"
                sourceAttrName="providerTrackingNumber[@type='change']" method="configuredExisting"/>
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="quantity"/>
            <RPMapping targetName="configuredValue" sourceAttrName="*/quantity/existing - */quantityOfPartiallyExchangedHardware"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>

      <!-- reconfiguration for old hardware during partial HW exchange -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/hardware" >
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
          <base:IsMember value="completedOPM" sourceAttrName="processingStatus"/>
          <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
          <base:IsMember value="true" sourceAttrName="
          		count (*/quantityOfPartiallyExchangedHardware) > 0 and 
          		*/quantityOfPartiallyExchangedHardware != */quantity/existing"/>
          <base:IsExisting sourceAttrName="*/conditionsList/existing" />
        </TemplateConditions>
                
        <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>
        <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing"/>
        <RPMapping targetName="processingStatus" staticValue="completedOPM" />
        <RPMapping targetName="functionID" sourceAttrName="@ID" />
        <RPMapping targetName="childServiceCode" staticValue="V0850"/>
        <RPMapping targetName="reason" staticValue="AEND"/>
        <RPMapping targetName="providerTrackingNumber"
                sourceAttrName="providerTrackingNumber[@type='change']" method="configuredExisting"/>
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="quantity"/>
            <RPMapping targetName="configuredValue" sourceAttrName="*/quantity/existing - */quantityOfPartiallyExchangedHardware"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- features -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/seat" 
        extends="modifyFeaturesFeatures_template"/>
            
      <!-- serviceLevel -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/internet | /*/lineChange/*/voice | /*/lineChange/*/seat" 
        extends="modifyFeaturesServiceLevel_template">
        <TemplateConditions>
          <base:IsNotMember value="sipTrunk" sourceAttrName="#:targetTechnology" />
        </TemplateConditions>
      </RequestTemplate>
      
      <!-- serviceLevel for SIP-Trunk -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/internet | /*/lineChange/*/voice" 
        extends="modifyFeaturesServiceLevelSIPTrunk_template">
        <TemplateConditions>
          <base:IsMember value="sipTrunk" sourceAttrName="#:targetTechnology" />
        </TemplateConditions>
      </RequestTemplate>
      
      <!-- serviceLevelLegal -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/internet | /*/lineChange/*/voice | /*/lineChange/*/seat" 
        extends="modifyFeaturesServiceLevelLegal_template" />
      
      <!-- IPV6 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/internet"
        extends="modifyFeaturesIPV6_template"/>      
        
      <!-- desired countries -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/seat" 
        extends="modifyFeaturesCountries_template"/>
      
      <!-- tariff options -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/seat" 
        extends="modifyFeaturesTariffOptions_template"/>
            
      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/seat | /*/lineChange/*/hardware" 
        extends="modifyFeaturesConditions_template" />
      
      <!-- blocking services -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/voice" 
        extends="modifyFeaturesBlockingServices_template" />
      
      <!-- licences -->
      <RequestTemplate fif-request-name="modifyOneNetBusinessServices" 
        sourceWorkingPath="/*/lineChange/*/voice" 
        extends="modifyFeaturesLicences_template" />
      
      <!-- licenceOptions -->
      <RequestTemplate fif-request-name="modifyOneNetBusinessServices" 
        sourceWorkingPath="/*/lineChange/*/voice" 
        extends="modifyFeaturesLicenceOptions_template" />
      
      <!-- charges and credits -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/seat" 
        extends="modifyFeaturesChargesAndCredits_template"/>
      
      <!-- IT-27749 installation fees -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/voice | /*/lineChange/*/internet | /*/lineChange/*/seat" 
        extends="modifyFeaturesInstallationFees_template" />
      
      <!-- DSL bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/internet | /*/lineChange/*/voice" 
        extends="modifyFeaturesDSLBandwidth_template"/>

      <!-- fibre fee -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/lineChange/*/internet" 
        extends="modifyFeaturesFibreFee_template"/>

      <!-- upstream bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/internet | /*/lineChange/*/voice" 
        extends="modifyFeaturesDSLUpstreamBandwidth_template"/>
            
      <!-- voice prioritization -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/lineChange/*/internet" 
        extends="modifyFeaturesVoicePrioritization_template"/>
            
      <!-- change of voiceChannel on the tariff options V1091 and V1092 -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineChange/*/voice" 
        extends="reconfigureFunction_template">
        <TemplateConditions>
          <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess" />
          <base:IsMember value="true" sourceAttrName="
            count(../../accesses/*[@ID = '${@refAccessID}']/*/sipTrunkVoiceChannels/configured) > 0 and
            ../../accesses/*[@ID = '${@refAccessID}']/*/sipTrunkVoiceChannels/configured != ../../accesses/*[@ID = '${@refAccessID}']/*/sipTrunkVoiceChannels/existing" />
          <base:IsMember value="true" sourceAttrName="
            count(*/tariffOptionsList/existing/tariffOption[serviceCode = 'V1091']) > 0 and
            count(*/tariffOptionsList[@action = 'remove']) = 0 and (
            count(*/tariffOptionsList/configured) = 0 or
            count(*/tariffOptionsList/configured/tariffOption[serviceCode = 'V1091']) > 0)" />
        </TemplateConditions>
        <RPMapping targetName="childServiceCode" staticValue="V1091"/>
        <RPMapping targetName="scenarioInformation" staticValue="Änderung Sprachkanäle für Tarifoption"/>
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="phoneSystemType" />
            <RPMapping targetName="existingValue" staticValue="S2M" />            
          </RPListItemTemplate>
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="sipTrunkVoiceChannels" />
            <RPMapping targetName="configuredValue" sourceAttrName="../../accesses/*[@ID = '${@refAccessID}']/*/sipTrunkVoiceChannels/configured" />            
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>      
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/lineChange/*/voice" 
        extends="reconfigureFunction_template">
        <TemplateConditions>
          <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess" />
          <base:IsMember value="true" sourceAttrName="
            count(../../accesses/*[@ID = '${@refAccessID}']/*/sipTrunkVoiceChannels/configured) > 0 and
            ../../accesses/*[@ID = '${@refAccessID}']/*/sipTrunkVoiceChannels/configured != ../../accesses/*[@ID = '${@refAccessID}']/*/sipTrunkVoiceChannels/existing" />
          <base:IsMember value="true" sourceAttrName="
            count(*/tariffOptionsList/existing/tariffOption[serviceCode = 'V1092']) > 0 and
            count(*/tariffOptionsList[@action = 'remove']) = 0 and (
            count(*/tariffOptionsList/configured) = 0 or
            count(*/tariffOptionsList/configured/tariffOption[serviceCode = 'V1092']) > 0)" />
        </TemplateConditions>
        <RPMapping targetName="childServiceCode" staticValue="V1092"/>
        <RPMapping targetName="scenarioInformation" staticValue="Änderung Sprachkanäle für Tarifoption"/>
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="phoneSystemType" />
            <RPMapping targetName="existingValue" staticValue="S2M" />            
          </RPListItemTemplate>
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="sipTrunkVoiceChannels" />
            <RPMapping targetName="configuredValue" sourceAttrName="../../accesses/*[@ID = '${@refAccessID}']/*/sipTrunkVoiceChannels/configured" />            
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>      
      
      <!-- directory entry -->
      <RequestTemplate fif-request-name="createDirectoryEntry" 
        sourceWorkingPath="/*/lineChange/*/directoryEntry" 
        extends="directoryEntry_template" />
      
      <!-- reconfiguration of directory entry -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/lineChange/*/directoryEntry" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="directoryEntryConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- contract change, will be called, if any contract parameter is changed -->
      <RequestTemplate fif-request-name="modifyContractApply" 
        sourceWorkingPath="/*/lineChange/*/internet | /*/lineChange/*/voice | /*/lineChange/*/seat"
        extends="modifyContract_template"/>
      
                  
      <!-- contributingItems for desiredCountries after a tariffChange, which can only be created after apply -->
      <RequestTemplate fif-request-name="createContributingItems"
        sourceWorkingPath="/*/lineChange/*/voice"
        extends="modifyFeaturesCountries_template">
        <TemplateConditions>
			<base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess" />
			<base:IsMember value="true" sourceAttrName="*/pricingStructureCode/existing != */pricingStructureCode/configured" />
        </TemplateConditions>
      </RequestTemplate>

      <!-- contributingItems for tariff options after a tariffChange, which can only be created after apply -->
      <RequestTemplate fif-request-name="createContributingItems"
        sourceWorkingPath="/*/lineChange/*/voice"
        extends="modifyFeaturesTariffOptions_template">
        <TemplateConditions>
			<base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess" />
			<base:IsMember value="true" sourceAttrName="*/pricingStructureCode/existing != */pricingStructureCode/configured" />
        </TemplateConditions>
      </RequestTemplate>
      
      <!-- activations of customer orders -->
      <RequestTemplate fif-request-name="activateCustomerOrder" sourceWorkingPath="/*/lineChange/*/voice | 
        /*/lineChange/*/internet | 
        /*/lineChange/*/seat |
        /*/lineChange/*/extraNumbers |
        /*/lineChange/*/hardware |
        /*/lineChange/*/installationSvc |
        /*/lineChange/*/safetyPackage |
        /*/lineChange/*/directoryEntry">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="voice" sourceAttrName="name(.)" />
            <base:IsMember value="ADD" sourceAttrName="processingType" />
            <base:IsMember value="CHANGE" sourceAttrName="processingType" />
            <base:IsMember value="TERM" sourceAttrName="processingType" />
            <AndComposite>
              <base:IsMember value="noactionCOM" sourceAttrName="processingStatus" />
              <base:IsMember value="IGNORE" sourceAttrName="processingType" />
              <base:IsExisting sourceAttrName="refFunctionID" />
            </AndComposite>
          </OrComposite>                    
          <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        </TemplateConditions>
        <RPMapping sourceAttrName="@ID" targetName="functionID" />
      </RequestTemplate>

      <!-- handle Busvoip access bundle -->
      <RequestTemplate fif-request-name="handleBusVoipAccessBundle" 
        sourceWorkingPath="/*/lineChange/*/voice" 
        extends="referenceOrderBundle_template"/>

      <!-- LINE CHANGE END ********************************************************************************************** -->

      <!-- RELOCATION START ********************************************************************************************** -->
      
      
      <!-- implicit termination in site relocation, order position = relocation -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/relocation/*/internet" 
        extends="terminateFunction_template">
        <TemplateConditions>
          <base:IsNotMember value="true" sourceAttrName="../../seatRelocationIndicator" />
        </TemplateConditions>
        <RPMapping staticValue="Y" targetName="isMovedService" />
      </RequestTemplate>      
      
      <RequestTemplate fif-request-name="modifyContract" 
        sourceWorkingPath="/*/relocation/*/internet"
        extends="modifyContract_template"/>                    
      
      <!-- exeute step, which creates all the contracts and services in CCM -->
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/relocation/*/internet" 
        extends="BusinessDSLCreation_template">        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess" />
          </TemplateConditions>
        </TransformationTemplate>        
      </RequestTemplate>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/relocation/*/internet" 
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            adslInternetConfiguration/* | 
            sdslInternetConfiguration/* |
            fibreInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="technology"/>
            <RPMapping targetName="configuredValue" sourceAttrName="#:technology"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>         
      
      <RequestTemplate fif-request-name="reconfigureFunction" 
          sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/directoryEntry | /*/relocation/*/voice" 
        extends="reconfigureFunctionPrecompleted_template">
      </RequestTemplate>
      
      <!-- fixed IP address, if desired -->
      <RequestTemplate fif-request-name="addChildService" 
        sourceWorkingPath="/*/relocation/*/internet" 
        extends="fixedIPAdress_template"/>      
      
      <!-- implicit termination in site relocation, order position = relocation -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/relocation/*/voice" 
        extends="terminateFunction_template">
        <TemplateConditions>
          <base:IsNotMember value="true" sourceAttrName="../../seatRelocationIndicator" />
        </TemplateConditions>
        <RPMapping staticValue="Y" targetName="isMovedService" />
      </RequestTemplate>      
      
      <RequestTemplate fif-request-name="modifyContract" 
        sourceWorkingPath="/*/relocation/*/voice"
        extends="modifyContract_template"/>        
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/relocation/*/voice" 
        extends="VoiceCreation_template">
      </RequestTemplate>
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/relocation/*/voice" 
        extends="OP_ISDNS2MCreation_template">
      </RequestTemplate>
      
      <!-- reconfiguration of voice function -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/relocation/*/voice" 
        extends="reconfigureFunction_template">
        <TemplateConditions>
          <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess" />
        </TemplateConditions>
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/*
            | initialContractStartDate
            | ipCentrexSiteConfiguration/*
            | sipTrunkS2MConfiguration/*
            | voicePBXConfiguration/*
            | voiceONBConfiguration/*
            | */portingAccessNumbers/*
            | */portingAccessNumberRanges/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="sipTrunkStartDate"/>
          <base:Include fileIDRef="functionParameters" partIDRef="sipTrunkVoiceChannelsRange"/>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="processingType"/>
            <RPMapping targetName="configuredValue" staticValue="COM"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
      
      <!-- order refenence service, if applicable -->
      <RequestTemplate fif-request-name="addChildService" 
        sourceWorkingPath="/order/relocation/functions/voice" 
        extends="referenceOrder_template"/>
      
      <RequestTemplate fif-request-name="addExtraNumberService" 
        sourceWorkingPath="/*/relocation/*/extraNumbers" 
        extends="extraNumbers_template"/>            
      
      <!-- implicit termination, order position = relocation, only one customer involved -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/relocation/*/seat" 
        extends="terminateFunction_template">
        <TemplateConditions>
          <base:IsMember value="true" sourceAttrName="../../seatRelocationIndicator" />
          <base:IsMember value="true" sourceAttrName="'${#:currentCustomerNumber}' = '${#:targetCustomerNumber}'" />
        </TemplateConditions>        
      </RequestTemplate>      
      
      <!-- implicit termination, order position = relocation, two customers involved -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/relocation/*/seat" 
        extends="terminateFunction_template">
        <TemplateConditions>
          <OrComposite>
            <base:IsNotMember value="true" sourceAttrName="../../seatRelocationIndicator" />
            <AndComposite>
              <base:IsMember value="true" sourceAttrName="../../seatRelocationIndicator" />
              <base:IsNotMember value="true" sourceAttrName="'${#:currentCustomerNumber}' = '${#:targetCustomerNumber}'" />
            </AndComposite>
          </OrComposite>
        </TemplateConditions>        
        <RPMapping staticValue="Y" targetName="isMovedService" />
      </RequestTemplate>      
            
      <!-- contract change, will be called, if any contract parameter is changed -->
      <RequestTemplate fif-request-name="modifyContract" 
        sourceWorkingPath="/*/relocation/*/seat"
        extends="modifyContract_template"/>        
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/relocation/*/seat" 
        extends="IPCentrexSeatCreation_template"/>
         
      <!-- reconfiguration of seat function -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/relocation/*/seat" 
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            mobileSeatConfiguration/* | 
            fixedSeatConfiguration/* | 
            convergedSeatConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
            
      <!-- features -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice | /*/relocation/*/seat" 
        extends="modifyFeaturesFeatures_template" />
      
      <!-- serviceLevel -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice | /*/relocation/*/seat" 
        extends="modifyFeaturesServiceLevel_template">
        <TemplateConditions>
          <base:IsNotMember value="sipTrunk" sourceAttrName="#:targetTechnology" />
        </TemplateConditions>
      </RequestTemplate>
      
      <!-- serviceLevel for SIP-Trunk -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice" 
        extends="modifyFeaturesServiceLevelSIPTrunk_template">
        <TemplateConditions>
          <base:IsMember value="sipTrunk" sourceAttrName="#:targetTechnology" />
        </TemplateConditions>
      </RequestTemplate>

      <!-- serviceLevelLegal -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice | /*/relocation/*/seat" 
        extends="modifyFeaturesServiceLevelLegal_template" />
      
      <!-- IPV6 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/internet"
        extends="modifyFeaturesIPV6_template"/>      
        
      <!-- desired countries -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice | /*/relocation/*/seat" 
        extends="modifyFeaturesCountries_template" />
      
      <!-- tariff options -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice | /*/relocation/*/seat" 
        extends="modifyFeaturesTariffOptions_template" />
      
      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice | /*/relocation/*/seat" 
        extends="modifyFeaturesConditions_template" />
            
      <!-- blocking services -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/voice" 
        extends="modifyFeaturesBlockingServices_template" />
      
      <!-- licences -->
      <RequestTemplate fif-request-name="modifyOneNetBusinessServices" 
        sourceWorkingPath="/*/relocation/*/voice" 
        extends="modifyFeaturesLicences_template" />
      
      <!-- licenceOptions -->
      <RequestTemplate fif-request-name="modifyOneNetBusinessServices" 
        sourceWorkingPath="/*/relocation/*/voice" 
        extends="modifyFeaturesLicenceOptions_template" />
      
      <!-- charges and credits -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice | /*/relocation/*/seat" 
        extends="modifyFeaturesChargesAndCredits_template" />
      
      <!-- installation fee for new seats -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/seat" 
        extends="modifyFeaturesInstallationFees_template" />
      
      <!-- DSL bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice" 
        extends="modifyFeaturesDSLBandwidth_template"/>
        
      <!-- fibre fee -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/relocation/*/internet" 
        extends="modifyFeaturesFibreFee_template"/>

      <!-- upstream bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice" 
        extends="modifyFeaturesDSLUpstreamBandwidth_template"/>
      
      <!-- voice prioritization -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/internet" 
        extends="modifyFeaturesVoicePrioritization_template"/>

      <!-- installation service -->
      <RequestTemplate fif-request-name="addInstallationService" 
        sourceWorkingPath="/*/relocation/*/installationSvc" 
        extends="installationService_template" />
      
      <!-- hardware service -->
      <RequestTemplate fif-request-name="addHardwareService" 
        sourceWorkingPath="/*/relocation/*/hardware" 
        extends="hardwareService_template" />
      
      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/relocation/*/hardware" 
        extends="modifyFeaturesConditions_template" />
                  
      <!-- directory entry -->
      <RequestTemplate fif-request-name="createDirectoryEntry" 
        sourceWorkingPath="/*/relocation/*/directoryEntry" 
        extends="directoryEntry_template" >
      </RequestTemplate>
      
      <!-- reconfiguration of directory entry -->
      <RequestTemplate fif-request-name="reconfigureFunction"
        sourceWorkingPath="/*/relocation/*/directoryEntry" extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="directoryEntryConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>      
      
      <RequestTemplate fif-request-name="modifyContractApply" 
        sourceWorkingPath="/*/relocation/*/internet"
        extends="modifyContract_template"/>        
                  
      <RequestTemplate fif-request-name="modifyContractApply" 
        sourceWorkingPath="/*/relocation/*/voice"
        extends="modifyContract_template"/>        
      
      <!-- contract change, will be called, if any contract parameter is changed -->
      <RequestTemplate fif-request-name="modifyContractApply" 
        sourceWorkingPath="/*/relocation/*/seat"
        extends="modifyContract_template"/>        
      
      <RequestTemplate fif-request-name="activateCustomerOrder" 
        sourceWorkingPath="/*/relocation/*/voice |
        /*/relocation/*/internet |
        /*/relocation/*/extraNumbers |
        /*/relocation/*/seat |
        /*/relocation/*/hardware |
        /*/relocation/*/installationSvc |
        /*/relocation/*/safetyPackage |
        /*/relocation/*/directoryEntry" >
        <TemplateConditions>
          <OrComposite>
            <base:IsNotMember value="completedCCM" sourceAttrName="completionStatusNewCcbId" />
            <base:IsNotMember value="completedCCM" sourceAttrName="completionStatusOldCcbId" />
            <AndComposite>
              <base:IsMember value="noactionCOM" sourceAttrName="processingStatus" />
              <base:IsMember value="IGNORE" sourceAttrName="processingType" />
              <base:IsExisting sourceAttrName="refFunctionID" />
            </AndComposite>
          </OrComposite>          
          <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        </TemplateConditions>
        
        <RPMapping sourceAttrName="@ID" targetName="functionID" />
      </RequestTemplate>
      
      <!-- activate the services without OP -->
      <RequestTemplate fif-request-name="activateCustomerOrder" 
        sourceWorkingPath="/*/relocation/*/internet | /*/relocation/*/voice | /*/relocation/*/seat" >
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="CHANGE" sourceAttrName="processingType" />
            <base:IsMember value="TERM" sourceAttrName="processingType" />
          </OrComposite>
          <OrComposite>
            <base:IsMember value="precompletedOPM" sourceAttrName="completionStatusOldCcbId" />
            <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId" />
            <base:IsMember value="cancelledOPM" sourceAttrName="completionStatusOldCcbId" />
            <base:IsMember value="precompletedOPM" sourceAttrName="completionStatusNewCcbId" />
            <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId" />
            <base:IsMember value="cancelledOPM" sourceAttrName="completionStatusNewCcbId" />
          </OrComposite>
          <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        </TemplateConditions>
        <RPMapping staticValue="Y" targetName="isMovedService" />
        <RPMapping sourceAttrName="@ID" targetName="functionID" />
      </RequestTemplate>
      
      <!-- handle Busvoip access bundle -->
      <RequestTemplate fif-request-name="handleBusVoipAccessBundle" 
        sourceWorkingPath="/*/relocation/*/voice" 
        extends="referenceOrderBundle_template"/>


      <!-- RELOCATION END ********************************************************************************************** -->

      <!-- *********************** CONTRACT PARTNER CHANGE START *********************** -->
            
      <!-- implicit termination, order position = contractPartnerChange -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice"  
        extends="terminateFunction_template"/>
            
      <!-- implicit termination, order position = contractPartnerChange -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/contractPartnerChange/*/internet"  
        extends="terminateFunction_template"/>
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice" 
        extends="VoiceCreation_template" />
      
      <RequestTemplate fif-request-name="createFunctions" 
        sourceWorkingPath="/*/contractPartnerChange/*/internet" 
        extends="BusinessDSLCreation_template" />

      <RequestTemplate fif-request-name="addExtraNumberService" 
        sourceWorkingPath="/*/contractPartnerChange/*/extraNumbers" 
        extends="extraNumbers_template"/>
                  
      <!-- order refenence service, if applicable -->
      <RequestTemplate fif-request-name="addChildService" 
        sourceWorkingPath="/order/contractPartnerChange/functions/voice" 
        extends="referenceOrder_template"/>
      
      <!-- reconfiguration of internet function -->
      <RequestTemplate fif-request-name="reconfigureFunction" 
        sourceWorkingPath="/*/contractPartnerChange/*/internet" 
        extends="reconfigureFunction_template">
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/* |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
            adslInternetConfiguration/* | 
            sdslInternetConfiguration/* |
            fibreInternetConfiguration/*">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
          <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>
          <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="technology"/>
            <RPMapping targetName="configuredValue" sourceAttrName="#:technology"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </RequestTemplate>
            
      <RequestTemplate fif-request-name="reconfigureFunction" 
          sourceWorkingPath="/*/contractPartnerChange/*/directoryEntry | /*/contractPartnerChange/*/internet" 
        extends="reconfigureFunctionPrecompleted_template">
      </RequestTemplate>
      
      <!-- fixed IP address, if desired -->
      <RequestTemplate fif-request-name="addChildService" 
        sourceWorkingPath="/*/contractPartnerChange/*/internet" 
        extends="fixedIPAdress_template"/>   
      
      <!-- installation service -->
      <RequestTemplate fif-request-name="addInstallationService" sourceWorkingPath="/*/contractPartnerChange/*/installationSvc" extends="installationService_template" />

      <!-- hardware service -->
      <RequestTemplate fif-request-name="addHardwareService" sourceWorkingPath="/*/contractPartnerChange/*/hardware" extends="hardwareService_template" />

      <!-- features -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet" 
        extends="modifyFeaturesFeatures_template"/>
            
      <!-- serviceLevel -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet" 
        extends="modifyFeaturesServiceLevel_template">
      </RequestTemplate>
      
      <!-- serviceLevelLegal -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice" 
        extends="modifyFeaturesServiceLevelLegal_template" />
      
      <!-- desired countries -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice" 
        extends="modifyFeaturesCountries_template"/>
      
      <!-- tariff options -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice" 
        extends="modifyFeaturesTariffOptions_template"/>
            
      <!-- conditions -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet | /*/contractPartnerChange/*/hardware" 
        extends="modifyFeaturesConditions_template" />
      
      <!-- blocking services -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice" 
        extends="modifyFeaturesBlockingServices_template" />
      
      <!-- licences -->
      <RequestTemplate fif-request-name="modifyOneNetBusinessServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice" 
        extends="modifyFeaturesLicences_template" />
      
      <!-- licenceOptions -->
      <RequestTemplate fif-request-name="modifyOneNetBusinessServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice" 
        extends="modifyFeaturesLicenceOptions_template" />
      
      <!-- charges and credits -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet" 
        extends="modifyFeaturesChargesAndCredits_template"/>
            
      <!-- DSL bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/internet" 
        extends="modifyFeaturesDSLBandwidth_template"/>

      <!-- fibre fee -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/internet" 
        extends="modifyFeaturesFibreFee_template"/>

      <!-- upstream bandwidth -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/internet" 
        extends="modifyFeaturesDSLUpstreamBandwidth_template"/>
      
      <!-- IPV6 -->
      <RequestTemplate fif-request-name="modifyFeatureServices"
        sourceWorkingPath="/*/contractPartnerChange/*/internet"
        extends="modifyFeaturesIPV6_template"/>      
        
      <!-- voice prioritization -->
      <RequestTemplate fif-request-name="modifyFeatureServices" 
        sourceWorkingPath="/*/contractPartnerChange/*/internet" 
        extends="modifyFeaturesVoicePrioritization_template"/>

      <!-- directory entry -->
      <RequestTemplate fif-request-name="createDirectoryEntry" 
        sourceWorkingPath="/*/contractPartnerChange/*/directoryEntry" 
        extends="directoryEntry_template" />

      <!-- activations of customer orders termination -->
      <RequestTemplate fif-request-name="activateCustomerOrder"
        sourceWorkingPath="/*/contractPartnerChange/*/voice | /*/contractPartnerChange/*/internet" >
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        </TemplateConditions>
        <RPMapping sourceAttrName="@ID" targetName="functionID" />
        <RPMapping staticValue="Y" targetName="isMovedService"/>
      </RequestTemplate>

      <!-- activations of customer orders -->
      <RequestTemplate fif-request-name="activateCustomerOrder" sourceWorkingPath="/*/contractPartnerChange/*/voice | 
        /*/contractPartnerChange/*/internet |
        /*/contractPartnerChange/*/extraNumbers |
        /*/contractPartnerChange/*/hardware |
        /*/contractPartnerChange/*/installationSvc |
        /*/contractPartnerChange/*/directoryEntry">
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)" />
            <base:IsMember value="ADD" sourceAttrName="processingType" />
            <base:IsMember value="CHANGE" sourceAttrName="processingType" />
            <base:IsMember value="TERM" sourceAttrName="processingType" />
            <AndComposite>
              <base:IsMember value="noactionCOM" sourceAttrName="processingStatus" />
              <base:IsMember value="IGNORE" sourceAttrName="processingType" />
              <base:IsExisting sourceAttrName="refFunctionID" />
            </AndComposite>
          </OrComposite>                    
          <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        </TemplateConditions>
        <RPMapping sourceAttrName="@ID" targetName="functionID" />
      </RequestTemplate>
      
      <!-- handle Busvoip access bundle -->
      <RequestTemplate fif-request-name="handleBusVoipAccessBundle" 
        sourceWorkingPath="/*/contractPartnerChange/*/voice" 
        extends="referenceOrderBundle_template"/>

      <!-- CONTRACT PARTNER CHANGE END ********************************************************************************************** -->

      <!-- TERMINATIONS START -->

      <!-- real termination, order position = termination -->
      <RequestTemplate fif-request-name="terminateFunction" 
        sourceWorkingPath="/*/termination/*/internet | /*/termination/*/voice | /*/termination/*/seat | /*/termination/*/safetyPackage"  
        extends="terminateFunction_template">
      </RequestTemplate>

      <!-- activation of termination of a function -->
      <RequestTemplate fif-request-name="activateCustomerOrder" 
        sourceWorkingPath="/*/termination/*/internet | /*/termination/*/voice | /*/termination/*/seat | /*/termination/*/safetyPackage">
        <TemplateConditions>
          <base:IsMember value="TERM" sourceAttrName="processingType" />
          <base:IsMember value="completedOPM" sourceAttrName="processingStatus" />
          <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        </TemplateConditions>
        <RPMapping sourceAttrName="@ID" targetName="functionID" />
      </RequestTemplate>

      <!-- TERMINATIONS END -->

      <!-- contactRole creation -->
      <RequestTemplate fif-request-name="createContactRoleReference" 
        sourceWorkingPath="/*/*/accesses/*/*/contactRoleRef/configured">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType" />
          <base:IsNotMember value="completedCCM" sourceAttrName="../changeStatus"/>
          <base:IsNotMember value="SHIPPING_CONTACT"
          sourceAttrName="/order/customerData/contactRole[@ID ='${.}']/contactRoleTypeRd/*"/> 
          <!-- IT-k-31846 ignore INSTALLATION contactRoles which are order specific parameters only and
            won't be created in CCM -->        
          <base:IsMember value="true" 
            sourceAttrName="count(
            /*/*/contactRole[@ID = '${.}']/ccbId[@type= 'R']/configured | 
            /*/*/contactRole[@ID = '${.}']/ccbId[@type= 'R']/existing) > 0
            or /*/*/contactRole[@ID = '${.}']/contactRoleTypeRd/* != 'INSTALLATION'"/>        
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="
              name(../../..) = 'ipBitstream' and '${#:internetReadyForFeatures}' = 'true'" />
            <base:IsMember value="true" sourceAttrName="
              name(../../..) = 'businessDSL' and '${#:internetReadyForFeatures}' = 'true'" />
            <base:IsMember value="true" sourceAttrName="
              name(../../..) = 'businessDSLProfi' and '${#:internetReadyForFeatures}' = 'true'" />
            <base:IsMember value="true" sourceAttrName="
              (name(../../..) = 'ipCentrex' or name(../../..) = 'sipTrunk' or name(../../..) = 'isdnS2M') and '${#:voiceReadyForFeatures}' = 'true'" />              
          </OrComposite>
        </TemplateConditions>
        
        <RPMapping targetName="parentSomElementID" sourceAttrName="../../../@ID" />
        <RPMapping targetName="somElementID" sourceAttrName="." />        
        <RPMapping targetName="contactRoleEntityId" 
          sourceAttrName="/*/*/contactRole[@ID = '${.}']/ccbId[@type= 'R']"
          method="configuredExisting"/>
        <RPMapping targetName="supportedObjectTypeRd" 
          staticValue="SERVICE_SUBS" />        
        <RPMapping targetName="supportedObjectId" 
          sourceAttrName="../../../ccbId[@type = 'S']"
          method="configuredExisting"/>
      </RequestTemplate>
      
      <!-- contactRole creation -->
      <RequestTemplate fif-request-name="createContactRoleReference" 
        sourceWorkingPath="/*/*/functions/*/*/contactRoleRef/configured">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType" />
          <base:IsNotMember value="completedCCM" sourceAttrName="../changeStatus"/>
          <base:IsNotMember value="SHIPPING_CONTACT"
          sourceAttrName="/order/customerData/contactRole[@ID ='${.}']/contactRoleTypeRd/*"/> 
          <!-- IT-k-31846 ignore INSTALLATION contactRoles which are order specific parameters only and
            won't be created in CCM -->        
          <base:IsMember value="true" 
            sourceAttrName="count(
            /*/*/contactRole[@ID = '${.}']/ccbId[@type= 'R']/configured | 
            /*/*/contactRole[@ID = '${.}']/ccbId[@type= 'R']/existing) > 0
            or /*/*/contactRole[@ID = '${.}']/contactRoleTypeRd/* != 'INSTALLATION'"/>        
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="
              name(../../..) = 'internet' and '${#:internetReadyForFeatures}' = 'true'" />
            <base:IsMember value="true" sourceAttrName="
              name(../../..) = 'voice' and '${#:voiceReadyForFeatures}' = 'true'" />              
          </OrComposite>
        </TemplateConditions>
        
        <RPMapping targetName="parentSomElementID" sourceAttrName="../../../@ID" />
        <RPMapping targetName="somElementID" sourceAttrName="." />        
        <RPMapping targetName="contactRoleEntityId" 
          sourceAttrName="/*/*/contactRole[@ID = '${.}']/ccbId[@type= 'R']"
          method="configuredExisting"/>
        <RPMapping targetName="supportedObjectTypeRd" 
          staticValue="SERVICE_SUBS" />        
        <RPMapping targetName="supportedObjectId" 
          sourceAttrName="../../../ccbId[@type = 'S']"
          method="configuredExisting"/>
      </RequestTemplate>      
      
      <!-- indicates, if an OfficeNet order is incomplete still and COM will have to loop again -->
      <RequestTemplate fif-request-name="incompleteOfficeNetOrder" 
        sourceWorkingPath="/order">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="*/transactionType" />
          <base:IsMember value="true" sourceAttrName="@relevantFunctionsRemoved" />
        </TemplateConditions>
        <RPMapping targetName="dummy" staticValue="dummy"/>
      </RequestTemplate>            
      
      <!-- tell the front end, whenever FIF has nothing left to process -->      
      <RequestTemplate fif-request-name="fifOrderComplete"
        sourceWorkingPath="/order">
        <TemplateConditions>
          <base:IsNotMember value="true" sourceAttrName="#:isOpenOPMOrder"/>
          <base:IsNotMember value="true" sourceAttrName="@relevantFunctionsRemoved" />
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        </TemplateConditions>
        <RPMapping targetName="dummy" staticValue="dummy"/>
      </RequestTemplate>
      
      <!-- tell the front end, whenever FIF has nothing left to process -->      
      <RequestTemplate fif-request-name="finalizeCustomerOrder"
        sourceWorkingPath="/*/*/functions/voice | /*/*/functions/internet">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <OrComposite>
            <AndComposite>                
              <base:IsMember value="voice" sourceAttrName="name(.)"/>
              <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions"/>
            </AndComposite>
            <AndComposite>                
              <base:IsMember value="internet" sourceAttrName="name(.)"/>
              <base:IsMember value="true" sourceAttrName="#:internetReadyForDependentFunctions"/>
            </AndComposite>
          </OrComposite>
          <OrComposite>
            <AndComposite>                
              <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
              <base:IsMember value="false" sourceAttrName="billingEnabledIndicatorNewCcbId/existing"/>
              <base:IsMember value="true" sourceAttrName="billingEnabledIndicatorNewCcbId/configured"/>
            </AndComposite>
            <AndComposite>  
              <base:IsNotExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
              <base:IsMember value="false" sourceAttrName="billingEnabledIndicatorOldCcbId/existing"/>
              <base:IsMember value="true" sourceAttrName="billingEnabledIndicatorOldCcbId/configured"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="functionID" sourceAttrName="@ID" />
        <RPMapping targetName="serviceSubscriptionId" 
          sourceAttrName="ccbId[@type = 'S']" 
          method="configuredExisting"/>      
      </RequestTemplate>
      
      <!-- creation of adjustments -->
      <RequestTemplate fif-request-name="createAdjustment"
        sourceWorkingPath="/*/*/adjustment">
        <TemplateConditions>
          <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
          <OrComposite>
            <AndComposite>
              <base:IsMember value="false" sourceAttrName="#:newVoiceMainAccess"/>
              <OrComposite>
                <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
                <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              </OrComposite>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="false" sourceAttrName="#:newInternetMainAccess"/>
              <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology"/>
              <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <base:Include fileIDRef="functionParameters" partIDRef="adjustmentParameters"/>
      </RequestTemplate>      

      <!-- creation of adjustments -->
      <RequestTemplate fif-request-name="createAdjustment"
        sourceWorkingPath="/*/*/adjustment">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <OrComposite>
            <AndComposite>
              <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              <OrComposite>
                <base:IsMember value="ISDN" sourceAttrName="#:targetTechnology"/>
                <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
              </OrComposite>
            </AndComposite>
            <AndComposite>
              <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess"/>
              <base:IsNotMember value="ISDN" sourceAttrName="#:targetTechnology"/>
              <base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <base:Include fileIDRef="functionParameters" partIDRef="adjustmentParameters"/>
      </RequestTemplate>      

      <!-- create provider change log entry for a change from SIP-Trunk to ISDN-S2M -->
      <RequestTemplate fif-request-name="createProviderChangeLog"
        sourceWorkingPath="/*/termination/*/voice">
        <TemplateConditions>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <base:IsExisting sourceAttrName="../../../superCustomerTrackingId" />
          <base:IsMember value="TERM" sourceAttrName="processingType"/>
          <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
          <base:IsMember value="true" sourceAttrName="#:terminateVoice"/>
          <OrComposite>
            <base:IsMember value="RelocationDeact" sourceAttrName="../../customerIntention"/>
            <base:IsMember value="LineChangeDeact" sourceAttrName="../../customerIntention"/>
          </OrComposite>
          <base:IsMember value="sipTrunk" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])"/>
        </TemplateConditions>
        <RPMapping targetName="termServiceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing"/>
        <RPMapping targetName="reasonRd" staticValue="TERMINATION"/>   
        <RPMapping targetName="customerIntention" sourceAttrName="../../customerIntention" />
        <RPMapping targetName="parentBarcode" sourceAttrName="../../../superCustomerTrackingId" />
      </RequestTemplate>

      <!-- create provider change log entry -->
      <RequestTemplate fif-request-name="createProviderChangeLog"
        sourceWorkingPath="/*/contractPartnerChange/*/voice">
        <TemplateConditions>
          <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
          <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
          <base:IsExisting sourceAttrName="ccbId[@type='S']/configured" />
          <base:IsExisting sourceAttrName="ccbId[@type='S']/existing" />
          <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions"/>          
          <OrComposite>
            <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>
            <base:IsMember value="completedCCM" sourceAttrName="completionStatusNewCcbId"/>
          </OrComposite>
          <OrComposite>
            <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
            <base:IsMember value="completedCCM" sourceAttrName="completionStatusOldCcbId"/>
          </OrComposite>
          <OrComposite>
            <base:IsNotMember value="completedCCM" sourceAttrName="completionStatusNewCcbId"/>
            <base:IsNotMember value="completedCCM" sourceAttrName="completionStatusOldCcbId"/>
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="actServiceSubscriptionId" sourceAttrName="ccbId[@type='S']/configured"/>
        <RPMapping targetName="termServiceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing"/>
        <RPMapping staticValue="CUST_REQUEST" targetName="reasonRd"/>                
      </RequestTemplate>
      
      
    </RequestListTemplate>

  </RootTemplate>

  <BaseTemplates>

    <AbstractTransformationTemplate ID="terminateFunction_template">
      <TemplateConditions>
        <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        <OrComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:terminateInternet" />
          </AndComposite>
          <AndComposite>
                <base:IsMember value="voice" sourceAttrName="name(.)" />
                <base:IsMember value="true" sourceAttrName="#:terminateVoice" />
          </AndComposite>
          <AndComposite>
            <base:IsNotExisting sourceAttrName="refFunctionID" />
            <base:IsMember value="TERM" sourceAttrName="processingType" />
          </AndComposite>
          <AndComposite>
            <base:IsExisting sourceAttrName="refFunctionID/existing" />
            <base:IsMember value="TERM" sourceAttrName="processingType" />
            <base:IsNotMember value="TERM" sourceAttrName="../*[@ID = '${refFunctionID/existing}']/processingType"/>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="refFunctionID/existing = ../voice/@ID" />
                <base:IsNotMember value="true" sourceAttrName="'${#:newVoiceMainAccess}' = 'true'"/>
              </AndComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="refFunctionID/existing = ../internet/@ID" />
                <base:IsNotMember value="true" sourceAttrName="'${#:newInternetMainAccess}' = 'true'"/>
              </AndComposite>
            </OrComposite>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="relocation" sourceAttrName="name(../..)" />
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess" />
            <base:IsMember value="true" sourceAttrName="#:terminateInternet" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="relocation" sourceAttrName="name(../..)" />
            <base:IsMember value="voice" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess" />
            <base:IsMember value="true" sourceAttrName="#:terminateVoice" />
          </AndComposite>
          <AndComposite>
            <base:IsNotMember value="relocation" sourceAttrName="name(../..)" />
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess" />
            <base:IsMember value="true" sourceAttrName="#:terminateInternet" />
            <base:IsMember value="true" sourceAttrName="#:internetReadyForDependentFunctions" />
          </AndComposite>
          <AndComposite>
            <base:IsNotMember value="relocation" sourceAttrName="name(../..)" />
            <base:IsMember value="voice" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess" />
            <base:IsMember value="true" sourceAttrName="#:terminateVoice" />
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="seat" sourceAttrName="name(.)" />
            <base:IsMember value="CHANGE" sourceAttrName="processingType" />
            <base:IsNotExisting sourceAttrName="@targetAccessID" />
            <base:IsMember value="2" sourceAttrName="count(mobileSeatConfiguration|fixedSeatConfiguration|convergedSeatConfiguration)" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="seat" sourceAttrName="name(.)" />
            <base:IsMember value="CHANGE" sourceAttrName="processingType" />
            <base:IsExisting sourceAttrName="@targetAccessID" />
            <base:IsMember value="true" sourceAttrName="@targetAccessID != @refAccessID" />
          </AndComposite>
          <!-- termination of directoryEntry in case of changed directoryEntry -->          
          <AndComposite>
            <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
            <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
            <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
            <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
            <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
          </AndComposite>          
        </OrComposite>          
        <OrComposite>        
          <AndComposite>
            <base:IsMember value="completedOPM" sourceAttrName="processingStatus" />
            <base:IsNotExisting sourceAttrName="completionStatusOldCcbId" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId" />
            <base:IsExisting sourceAttrName="completionStatusOldCcbId" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:terminateInternet" />
          </AndComposite> 
            <AndComposite>
                <base:IsMember value="voice" sourceAttrName="name(.)" />
                <base:IsMember value="true" sourceAttrName="#:terminateVoice" />
            </AndComposite>          
            
        </OrComposite>
      </TemplateConditions>

      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)" />
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="seat" sourceAttrName="name(.)" />
            <base:IsMember value="safetyPackage" sourceAttrName="name(.)" />
            <base:IsMember value="tvCenter" sourceAttrName="name(.)" />
            <base:IsMember value="vod" sourceAttrName="name(.)" />
            <base:IsMember value="iptv" sourceAttrName="name(.)" />
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="isContractFunction" staticValue="Y" />
      </TransformationTemplate>      
      
      <!-- termination because of a cancellation of a precompleted line -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="cancelledOPM" sourceAttrName="completionStatusNewCcbId"/>
          <base:IsMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
        </TemplateConditions>
        <RPMapping sourceAttrName="ccbId[@type='S']/configured" targetName="serviceSubscriptionId"/>
        
        <!-- population terminationReason from cancellationReasonCodeNewCcbId -->
        <TransformationTemplate>
          <TemplateConditions>
            <OrComposite>
              <base:IsMember value="" sourceAttrName="cancellationReasonCodeNewCcbId"/>
              <base:IsNotExisting sourceAttrName="cancellationReasonCodeNewCcbId"/>
            </OrComposite>
          </TemplateConditions>
          <RPMapping targetName="terminationReason" staticValue="SON"/> 
        </TransformationTemplate> 
        
        <TransformationTemplate>
          <TemplateConditions>
            <AndComposite>
              <base:IsNotMember value="" sourceAttrName="cancellationReasonCodeNewCcbId"/>
              <base:IsExisting sourceAttrName="cancellationReasonCodeNewCcbId"/>
            </AndComposite>
          </TemplateConditions>
          <RPMapping targetName="terminationReason" sourceAttrName="cancellationReasonCodeNewCcbId"/>
        </TransformationTemplate>
        
      </TransformationTemplate>
      
      <!-- regular termination -->
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:IsNotMember value="cancelledOPM" sourceAttrName="completionStatusNewCcbId"/>
            <base:IsNotMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
          </OrComposite>
        </TemplateConditions>
        <RPMapping sourceAttrName="ccbId[@type='S']/existing" targetName="serviceSubscriptionId"/>
        
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsExisting sourceAttrName="terminationReasonCode" />
          </TemplateConditions>
          <RPMapping targetName="terminationReason" sourceAttrName="terminationReasonCode" />        
        </TransformationTemplate>                
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="terminationReasonCode" />
            <base:IsMember value="termination" sourceAttrName="name(../..)"/>
          </TemplateConditions>
          <RPMapping targetName="terminationReason" sourceAttrName="../../terminationReasonCode"/>
        </TransformationTemplate>
        <TransformationTemplate>
          <TemplateConditions>
            <base:IsNotExisting sourceAttrName="terminationReasonCode" />
            <base:IsNotMember value="termination" sourceAttrName="name(../..)"/>
          </TemplateConditions>
          <RPMapping targetName="terminationReason"
            sourceAttrName="#:scenarioType"
            decoding="
            'relocation', 'UMZ', 
            'contractPartnerChange', 'VPW', 
            'technologyChange', 'AGKTW', 
            'productTypeChangeToBasis', 'AGKTW', 
            'productTypeChangeToPremium', 'AGKTW', 
            'simple', 'SON',
            'SON'"/>
        </TransformationTemplate>
        <base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberTermination"/>        
      </TransformationTemplate>
      
      <RPMapping targetName="terminateContract" sourceAttrName="processingType" decoding="'TERM', 'Y', 'N'"/>            
      <RPMapping targetName="processingStatus" staticValue="completedOPM" />      
      <RPMapping sourceAttrName="@ID" targetName="functionID" />      
      <RPMapping sourceAttrName="/order/*/orderReceivedDate" targetName="noticePeriodStartDate" formatter="SOMToCCBDateFormatter" />
      <!-- Termination fee -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="*/earlyTerminationFeeServiceCode/*" />
        </TemplateConditions>
        <RPMapping targetName="earlyTerminationFeeServiceCode" 
          sourceAttrName="*/earlyTerminationFeeServiceCode/configured"/>
      </TransformationTemplate>       
    
      <TransformationTemplate>
        <TemplateConditions>
            <base:IsMember value="contractPartnerChange" sourceAttrName="name(../..)" />
        </TemplateConditions>
        <RPMapping targetName="isMovedService" staticValue="Y" />
      </TransformationTemplate>      
    
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="reconfigureFunction_template"
      extends="reconfigureFunctionBase_template">
      <TemplateConditions>
        <OrComposite>
          <base:IsNotMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>    
          <base:IsNotMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>
        </OrComposite>    
      </TemplateConditions>      
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="reconfigureFunctionPrecompleted_template"
      extends="reconfigureFunctionBase_template">
      <TemplateConditions>
        <base:IsMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>    
        <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>    
      </TemplateConditions>
      
      <!-- businessDSL -->
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
          </OrComposite>
        </TemplateConditions>        
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="
            ../../accesses/*[@ID = '${@refAccessID}']/*/*[starts-with(name(.), 'DTAG')] |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/*[starts-with(name(.), 'DTAG')] |
            ../../accesses/*[@ID = '${@refAccessID}']/*/*[starts-with(name(.), 'provider')] |
            ../../accesses/*[@ID = '${@targetAccessID}']/*/*[starts-with(name(.), 'provider')]">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>        
      </TransformationTemplate>
      <!-- directoryEntry -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
        </TemplateConditions>        
        <RPListTemplate listName="parameterList">
          <RPListItemTemplate sourceWorkingPath="*/dtagId">
            <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
          </RPListItemTemplate>
        </RPListTemplate>        
      </TransformationTemplate>
      <!-- voice -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="voice" sourceAttrName="name(.)"/>
        </TemplateConditions>        
        <RPMapping targetName="skipReconfiguration" staticValue="Y" />        
      </TransformationTemplate>
      
    </AbstractTransformationTemplate>    

    <AbstractTransformationTemplate ID="reconfigureFunctionBase_template">
      <TemplateConditions>
        <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        <OrComposite>
          <AndComposite>
            <base:IsMember value="hardware" sourceAttrName="name(.)"/>
            <base:IsMember value="completedOPM" sourceAttrName="processingStatus"/>
            <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
            <base:IsNotMember value="true" sourceAttrName="
          		count (*/quantityOfPartiallyExchangedHardware) > 0 and 
          		*/quantityOfPartiallyExchangedHardware != */quantity/existing"/>
            <OrComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="
                  '${name(/*/*/functions/*[@ID='${refFunctionID/existing}'])}' = 'voice'"/>                
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
              </AndComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="
                  '${name(/*/*/functions/*[@ID='${refFunctionID/existing}'])}' = 'internet'"/>                
                <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess"/>
              </AndComposite>
            </OrComposite>
          </AndComposite>          
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:reconfigureVoice"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)"/>
            <OrComposite>
              <base:IsMember value="true" sourceAttrName="#:reconfigureInternet"/>
              <base:IsMember value="true" sourceAttrName="#:reconfigurePrecompletedInternet"/>
            </OrComposite>
          </AndComposite>
          <AndComposite>          
            <base:IsMember value="seat" sourceAttrName="name(.)"/>        
            <base:IsNotExisting sourceAttrName="@targetAccessID" />
            <base:IsMember value="1" sourceAttrName="count(mobileSeatConfiguration | fixedSeatConfiguration | convergedSeatConfiguration)" />
            <OrComposite>
              <AndComposite>
                <base:IsMember value="CHANGE" sourceAttrName="processingType" />
                <base:IsMember value="completedOPM" sourceAttrName="processingStatus" />
              </AndComposite>
              <AndComposite>
                <OrComposite>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType" />
                  <base:IsMember value="ADD" sourceAttrName="processingType" />
                </OrComposite>
                <base:IsMember value="completedCCM" sourceAttrName="processingStatus" />
                <base:IsMember value="true" sourceAttrName="internal/updateFunctionIndicator" />
              </AndComposite>
            </OrComposite>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="extraNumbers" sourceAttrName="name(.)"/>
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions"/>
            <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
            <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
            <OrComposite>
              <!-- message from DTAG with DTAG-ID -->
              <AndComposite>
                <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId"/>
                <base:IsMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId"/>
              </AndComposite>
              <!-- changed directoryEntry (IT-31476) -->
              <AndComposite>
                <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                <base:IsNotExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
                <OrComposite>
                  <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId"/>
                  <base:IsMember value="precompletedOPM" sourceAttrName="completionStatusOldCcbId"/>
                </OrComposite>
              </AndComposite>              
            </OrComposite>
          </AndComposite>
        </OrComposite>
      </TemplateConditions>

      <!-- 
        1) avoid setting PTN for create/reconfigure scenario in case of precompleted orders
        2) don't set PTN in the scenario of two sets of states for only one ccbId (IT-k-33552)
      -->
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsNotExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
	      <OrComposite>
        	<base:IsNotMember value="true" sourceAttrName="#:reconfigurePrecompletedInternet"/>
        	<base:IsNotMember value="internet" sourceAttrName="name(.)"/>
		  </OrComposite>
        </TemplateConditions>
        <base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberTermination"/>
      </TransformationTemplate>
                  
      <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>
      
      <RPMapping targetName="serviceSubscriptionId"
        sourceAttrName="ccbId[@type='S']"         
        method="configuredExisting"/>
      <RPMapping targetName="processingStatus" staticValue="completedOPM" />
      <RPMapping sourceAttrName="@ID" targetName="functionID" />
      <RPMapping targetName="activationDate" sourceAttrName="resultDate" formatter="SOMToCCBDateFormatter" />
      <RPMapping targetName="productCode" sourceAttrName="*/productCode/*" />
      
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="completedCCM" sourceAttrName="processingStatus" />
          <base:IsMember value="true" sourceAttrName="internal/updateFunctionIndicator" />
          <base:IsExisting sourceAttrName="internal/updatedByReferenceOrder" />
        </TemplateConditions>
        <RPMapping targetName="OMTSOrderID" sourceAttrName="internal/updatedByReferenceOrder" />
      </TransformationTemplate>  
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="true" sourceAttrName="'oneNetBusiness' = substring-before(name(../../accesses/*[@ID = '${@refAccessID}']/*[contains(name(.), 'Configuration')]), 'Configuration')" />
          <base:IsMember value="true" sourceAttrName="count(../../accesses/*[@ID = '${@refAccessID}']/*/voiceChannelType/configured) > 0" />
          <OrComposite>
            <base:IsMember value="true" sourceAttrName="../../accesses/*[@ID = '${@refAccessID}']/*/voiceChannelType/existing != ../../accesses/*[@ID = '${@refAccessID}']/*/voiceChannelType/configured" />
            <base:IsNotExisting sourceAttrName="../../accesses/*[@ID = '${@refAccessID}']/*/voiceChannelType/existing" />
          </OrComposite>
        </TemplateConditions>
        <RPMapping targetName="reason" staticValue="NOT_RELEVANT" />
      </TransformationTemplate>  
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="modifyFeaturesInstallationFees_template" extends="modifyFeatures_template">
      <TemplateConditions>
        <base:IsNotExisting sourceAttrName="ccbId[@type='S']/existing" />
        <OrComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="businessDSL" sourceAttrName="#:targetInternetAccess" />
            <base:IsMember value="MONTH" sourceAttrName="*/minimumDurationPeriod/unit/configured" />
            <OrComposite>
              <base:IsMember value="12" sourceAttrName="*/minimumDurationPeriod/value/configured" />
              <base:IsMember value="24" sourceAttrName="*/minimumDurationPeriod/value/configured" />
              <base:IsMember value="36" sourceAttrName="*/minimumDurationPeriod/value/configured" />
            </OrComposite>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="ipBitstream" sourceAttrName="#:targetInternetAccess" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)" />
            <base:IsMember value="ipCentrex" sourceAttrName="#:technology" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="seat" sourceAttrName="name(.)" />
            <base:IsMember value="MONTH" sourceAttrName="*/minimumDurationPeriod/unit/configured" />
            <base:IsMember value="24" sourceAttrName="*/minimumDurationPeriod/value/configured" />
          </AndComposite>
        </OrComposite>
      </TemplateConditions>
      
      <base:DataBufferWriter keyValue="listType" staticValue="installationFees" />
      <RPMapping targetName="listType" sourceAttrName="#:listType" />
      <base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>
      <RPMapping targetName="ignoreDuplicates" staticValue="Y" />
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="internet" sourceAttrName="name(.)" />
          <base:IsMember value="businessDSL" sourceAttrName="#:targetInternetAccess" />
          <base:IsNotExisting sourceAttrName="./fibreInternetConfiguration" />
        </TemplateConditions>
        <RPListTemplate listName="configuredServiceList">
          <RPListItemTemplate sourceWorkingPath="*/minimumDurationPeriod/value/configured">
            <RPMapping sourceAttrName="." targetName="serviceCode" 
              decoding="'12', 'I121B', '24', 'I121D', '36', 'I121F'"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </TransformationTemplate>
      
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="internet" sourceAttrName="name(.)" />
          <base:IsMember value="businessDSL" sourceAttrName="#:targetInternetAccess" />
          <base:IsExisting sourceAttrName="./fibreInternetConfiguration" />
        </TemplateConditions>
        <RPListTemplate listName="configuredServiceList">
          <RPListItemTemplate>
            <RPMapping staticValue="I1452" targetName="serviceCode" />
            <RPListTemplate listName="additionalInfo">
                <RPListItemTemplate>
                    <RPMapping targetName="serviceCharCode" staticValue="I153D" />
                    <RPMapping targetName="value" sourceAttrName="*/minimumDurationPeriod/value/configured" />
                </RPListItemTemplate>
            </RPListTemplate>
          </RPListItemTemplate>
        </RPListTemplate>
      </TransformationTemplate>
      
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="internet" sourceAttrName="name(.)" />
          <base:IsMember value="ipBitstream" sourceAttrName="#:targetInternetAccess" />
          <base:IsExisting sourceAttrName="../../accesses/ipBitstream/ipBitstreamConfiguration" />
        </TemplateConditions>
        <RPListTemplate listName="configuredServiceList">
          <RPListItemTemplate>
            <RPMapping staticValue="V0083" targetName="serviceCode" />
          </RPListItemTemplate>
        </RPListTemplate>
      </TransformationTemplate>
      
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="internet" sourceAttrName="name(.)" />
          <base:IsMember value="ipBitstream" sourceAttrName="#:targetInternetAccess" />
          <base:IsExisting sourceAttrName="../../accesses/ipBitstream/businessIpBitstreamConfiguration" />
        </TemplateConditions>
        <RPListTemplate listName="configuredServiceList">
          <RPListItemTemplate>
            <RPMapping staticValue="I121H" targetName="serviceCode" />
            <RPListTemplate listName="additionalInfo">
                <RPListItemTemplate>
                    <RPMapping targetName="serviceCharCode" staticValue="I153D" />
                    <RPMapping targetName="value" sourceAttrName="*/minimumDurationPeriod/value/configured" />
                </RPListItemTemplate>
            </RPListTemplate>
            
          </RPListItemTemplate>
        </RPListTemplate>
      </TransformationTemplate>
      
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="voice" sourceAttrName="name(.)" />
          <base:IsMember value="ipCentrex" sourceAttrName="#:technology" />
        </TemplateConditions>
        <RPListTemplate listName="configuredServiceList">
          <RPListItemTemplate sourceWorkingPath="*/minimumDurationPeriod/value/configured">
            <RPMapping sourceAttrName="." targetName="minPeriodDurationValue"/>
            <RPMapping staticValue="VI059" targetName="serviceCode"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </TransformationTemplate>
      
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="seat" sourceAttrName="name(.)" />          
        </TemplateConditions>
        <RPListTemplate listName="configuredServiceList">
          <RPListItemTemplate sourceWorkingPath="*/minimumDurationPeriod/value/configured">
            <RPMapping staticValue="VI058" targetName="serviceCode"/>
          </RPListItemTemplate>
        </RPListTemplate>
      </TransformationTemplate>
    </AbstractTransformationTemplate>    
    
    <base:Include fileIDRef="functionParameters" partIDRef="featuresTemplates"/>
        
	<AbstractTransformationTemplate ID="modifyFeaturesLicences_template" extends="modifyFeatures_template">
	    <TemplateConditions>
	        <base:IsExisting sourceAttrName="*/licencesList/*/*" />
	        <OrComposite>
	            <base:IsNotMember value="true" sourceAttrName="#:isWF12" />
	            <base:IsNotMember value="IGNORE" sourceAttrName="processingType"/>
	            <base:IsNotMember value="noactionCOM" sourceAttrName="processingStatus"/>
	            <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
	        </OrComposite>                
	        <OrComposite>
	            <base:IsExisting sourceAttrName="*/licencesList/configured" />
	            <base:IsMember value="remove" sourceAttrName="*/licencesList/@action" />
	            <base:Include fileIDRef="functionParameters" partIDRef="isMovedService"/>                  
	        </OrComposite>                
	    </TemplateConditions>
	    <RPMapping targetName="action" sourceAttrName="*/licencesList/@action" />
	    <RPMapping targetName="addSetupFee" 
	    	sourceAttrName="count(
	    		*/chargesAndCreditsList/configured[featureServiceCode = 'VI034'] |
	    		*/chargesAndCreditsList/configured/featureService[featureServiceCode = 'VI034']) > 0" 
	    	decoding="'true', 'Y', 'N'" />
	    <RPListTemplate listName="configuredServiceList">
	        <RPListItemTemplate sourceWorkingPath="*/licencesList/configured/licence">
	            <RPMapping sourceAttrName="serviceCode" targetName="serviceCode" />                    
	            <RPMapping sourceAttrName="quantity" targetName="quantity" />                    
	        </RPListItemTemplate>
	    </RPListTemplate>
	    <RPListTemplate listName="existingServiceList">
	        <RPListItemTemplate sourceWorkingPath="*/licencesList/existing/licence">
	            <RPMapping sourceAttrName="serviceCode" targetName="serviceCode" />                    
	            <RPMapping sourceAttrName="quantity" targetName="quantity" />                    
	        </RPListItemTemplate>
	    </RPListTemplate>
		<base:DataBufferWriter keyValue="listType" staticValue="licencesList" />
		<RPMapping targetName="listType" sourceAttrName="#:listType" />

		<base:DataBufferWriter keyValue="featureServicesProcessingStatus" 
			sourceAttrName="concat('${#:newVoiceMainAccess}', ';', processingStatus = 'completedOPM')"
			decoding="
				'true;true', 'completedOPM',
				'true;false', 'completedOPM',
				'false;true', 'completedOPM',
				'false;false', ''"/>

		<TransformationTemplate>
		    <TemplateConditions>
		        <base:IsMember value="completedOPM" sourceAttrName="#:featureServicesProcessingStatus" />
		        <base:IsNotMember value="true" sourceAttrName="#:isProductSubscriptionCreationScenario" />                        
		    </TemplateConditions>            
		    <RPMapping targetName="reason" staticValue="COM_BW_CHANGE" />
		</TransformationTemplate>                
		<TransformationTemplate>
		    <TemplateConditions>
		        <OrComposite>
		            <base:IsNotMember value="completedOPM" sourceAttrName="#:featureServicesProcessingStatus" />
		            <base:IsMember value="true" sourceAttrName="#:isProductSubscriptionCreationScenario" />
		        </OrComposite>
		    </TemplateConditions>            
		    <base:Include fileIDRef="functionParameters" partIDRef="reason"/>
		    <TransformationTemplate>
		        <TemplateConditions>
		            <base:IsMember value="" sourceAttrName="#:reasonHelper" />
		        </TemplateConditions>
		        <RPMapping targetName="reason" staticValue="MODIFY_FEATURES" />
		    </TransformationTemplate>
		</TransformationTemplate>                

		<TransformationTemplate>
			<TemplateConditions>
				<base:IsExisting sourceAttrName="ccbId[@type='S']/configured"/>
			</TemplateConditions>
			<base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberCreation"/>
		</TransformationTemplate>
		<TransformationTemplate>
			<TemplateConditions>
				<base:IsNotExisting sourceAttrName="ccbId[@type='S']/configured"/>
			</TemplateConditions>
			<base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberTermination"/>
		</TransformationTemplate>      
	</AbstractTransformationTemplate>
        
	<AbstractTransformationTemplate ID="modifyFeaturesLicenceOptions_template" extends="modifyFeatures_template">
	    <TemplateConditions>
	        <base:IsExisting sourceAttrName="*/licenceOptionsList/*/*" />
	        <OrComposite>
	            <base:IsNotMember value="true" sourceAttrName="#:isWF12" />
	            <base:IsNotMember value="IGNORE" sourceAttrName="processingType"/>
	            <base:IsNotMember value="noactionCOM" sourceAttrName="processingStatus"/>
	            <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
	        </OrComposite>                
	        <OrComposite>
	            <base:IsExisting sourceAttrName="*/licenceOptionsList/configured" />
	            <base:IsMember value="remove" sourceAttrName="*/licenceOptionsList/@action" />
	            <base:Include fileIDRef="functionParameters" partIDRef="isMovedService"/>                  
	        </OrComposite>                
	    </TemplateConditions>
	    <RPMapping targetName="action" sourceAttrName="*/licenceOptionsList/@action" />
	    <RPListTemplate listName="configuredServiceList">
	        <RPListItemTemplate sourceWorkingPath="*/licenceOptionsList/configured/licenceOption">
	            <RPMapping sourceAttrName="serviceCode" targetName="serviceCode" />                    
	            <RPMapping sourceAttrName="quantity" targetName="quantity" />                    
	        </RPListItemTemplate>
	    </RPListTemplate>
	    <RPListTemplate listName="existingServiceList">
	        <RPListItemTemplate sourceWorkingPath="*/licenceOptionsList/existing/licenceOption">
	            <RPMapping sourceAttrName="serviceCode" targetName="serviceCode" />                    
	            <RPMapping sourceAttrName="quantity" targetName="quantity" />                    
	        </RPListItemTemplate>
	    </RPListTemplate>
		<base:DataBufferWriter keyValue="listType" staticValue="licenceOptionsList" />
		<RPMapping targetName="listType" sourceAttrName="#:listType" />
		
		<base:DataBufferWriter keyValue="featureServicesProcessingStatus" 
			sourceAttrName="concat('${#:newVoiceMainAccess}', ';', processingStatus = 'completedOPM')"
			decoding="
				'true;true', 'completedOPM',
				'true;false', 'completedOPM',
				'false;true', 'completedOPM',
				'false;false', ''"/>

		<TransformationTemplate>
		    <TemplateConditions>
		        <base:IsMember value="completedOPM" sourceAttrName="#:featureServicesProcessingStatus" />
		        <base:IsNotMember value="true" sourceAttrName="#:isProductSubscriptionCreationScenario" />                        
		    </TemplateConditions>            
		    <RPMapping targetName="reason" staticValue="COM_BW_CHANGE" />
		</TransformationTemplate>                
		<TransformationTemplate>
		    <TemplateConditions>
		        <OrComposite>
		            <base:IsNotMember value="completedOPM" sourceAttrName="#:featureServicesProcessingStatus" />
		            <base:IsMember value="true" sourceAttrName="#:isProductSubscriptionCreationScenario" />
		        </OrComposite>
		    </TemplateConditions>            
		    <base:Include fileIDRef="functionParameters" partIDRef="reason"/>
		    <TransformationTemplate>
		        <TemplateConditions>
		            <base:IsMember value="" sourceAttrName="#:reasonHelper" />
		        </TemplateConditions>
		        <RPMapping targetName="reason" staticValue="MODIFY_FEATURES" />
		    </TransformationTemplate>
		</TransformationTemplate>                

		<TransformationTemplate>
			<TemplateConditions>
				<base:IsExisting sourceAttrName="ccbId[@type='S']/configured"/>
			</TemplateConditions>
			<base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberCreation"/>
		</TransformationTemplate>
		<TransformationTemplate>
			<TemplateConditions>
				<base:IsNotExisting sourceAttrName="ccbId[@type='S']/configured"/>
			</TemplateConditions>
			<base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberTermination"/>
		</TransformationTemplate>      
		
	</AbstractTransformationTemplate>
    
    
    <AbstractTransformationTemplate ID="modifyFeatures_template">
      <TemplateConditions>
        <!-- make sure for lineCreation that internet is completed before or with voice and 
          voice is completed before or with seat -->
        
        <OrComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="hardware" sourceAttrName="name(.)" />
            <OrComposite>
	            <AndComposite>
		            <base:Include fileIDRef="functionParameters" partIDRef="parentFunctionIsInternet"/>
		            <base:IsMember value="true" sourceAttrName="#:internetReadyForDependentFunctions" />
		        </AndComposite>            
	            <AndComposite>
		            <base:Include fileIDRef="functionParameters" partIDRef="parentFunctionIsVoice"/>
		            <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions" />
		        </AndComposite>            
            </OrComposite>
            <OrComposite>
              <base:IsMember value="completedOPM" sourceAttrName="processingStatus" />                           
              <AndComposite>
              	<OrComposite>
              		<base:IsMember value="noactionCOM" sourceAttrName="processingStatus" />
              		<base:IsMember value="noactionOPM" sourceAttrName="processingStatus" />
              	</OrComposite>
              	<OrComposite>
              		<base:IsMember value="IGNORE" sourceAttrName="processingType" />
              		<base:IsMember value="CHANGE" sourceAttrName="processingType" />
              	</OrComposite>
              </AndComposite>
            </OrComposite>
          </AndComposite>
          <AndComposite>
            <base:IsNotMember value="voice" sourceAttrName="name(.)" />
            <base:IsNotMember value="internet" sourceAttrName="name(.)" />
            <base:IsNotMember value="hardware" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions" />
            <OrComposite>
              <AndComposite>
                <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured" />
                <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId" />
              </AndComposite>
              <AndComposite>
                <base:IsNotExisting sourceAttrName="ccbId[@type = 'S']/configured" />
                <base:IsMember value="completedOPM" sourceAttrName="completionStatusOldCcbId" />
              </AndComposite>
            </OrComposite>
          </AndComposite>
        </OrComposite>
        
        <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />

      </TemplateConditions>

      <RPMapping targetName="serviceSubscriptionId" 
        sourceAttrName="ccbId[@type='S']"
        method="configuredExisting"/>

      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <base:Include fileIDRef="functionParameters" partIDRef="isMovedService"/>
          </OrComposite>
        </TemplateConditions>
        <RPMapping staticValue="Y" targetName="isMovedService"/>
      </TransformationTemplate>      
            
      <RPMapping sourceAttrName="@ID" targetName="functionID" />
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="modifyFeaturesServiceLevelSIPTrunk_template" extends="modifyFeatures_template">
        <TemplateConditions>
            <base:IsExisting sourceAttrName="../voice/*/serviceLevel" />
            <OrComposite>
                <base:IsNotMember value="IGNORE" sourceAttrName="../internet/processingType"/>
                <base:IsNotMember value="IGNORE" sourceAttrName="../voice/processingType"/>
                <base:IsNotMember value="noactionCOM" sourceAttrName="../internet/processingStatus"/>
                <base:IsNotMember value="noactionCOM" sourceAttrName="../voice/processingStatus"/>
                <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
            </OrComposite>                
            <OrComposite>
                <base:IsExisting sourceAttrName="../voice/*/serviceLevel" />
                <base:Include fileIDRef="functionParameters" partIDRef="isMovedService"/>                  
            </OrComposite>                
        </TemplateConditions>         
        <RPMapping targetName="action" sourceAttrName="../voice/*/serviceLevel/@action" />
        <RPMapping targetName="ignoreDuplicates" staticValue="Y" />        
        <RPListTemplate listName="existingServiceList">
            <RPListItemTemplate sourceWorkingPath="*/serviceLevel/existing">
                <RPMapping sourceAttrName="serviceCode" targetName="serviceCode" />
                <RPListTemplate listName="additionalInfo">
                    <RPListItemTemplate sourceWorkingPath="additionalInfo">
                        <RPMapping sourceAttrName="key" targetName="serviceCharCode" />
                        <RPMapping sourceAttrName="value" targetName="value" />
                    </RPListItemTemplate>                        
                </RPListTemplate>
            </RPListItemTemplate>
        </RPListTemplate>
        
		<base:DataBufferWriter keyValue="voiceHasConfiguredServiceLevel" 
           	sourceAttrName="count(../voice/*/serviceLevel/configured) > 0" />
        
        <TransformationTemplate>
			<TemplateConditions>
				<OrComposite>
					<base:IsMember value="voice" sourceAttrName="name(.)" />        
					<base:IsMember value="true" sourceAttrName="#:voiceHasConfiguredServiceLevel" />        
	        	</OrComposite>
	        </TemplateConditions>
	        <RPListTemplate listName="configuredServiceList">
	            <RPListItemTemplate sourceWorkingPath="../voice/*/serviceLevel/configured">
	                <RPMapping sourceAttrName="serviceCode" targetName="serviceCode" />
	                <RPListTemplate listName="additionalInfo">
	                    <RPListItemTemplate sourceWorkingPath="additionalInfo">
	                        <RPMapping sourceAttrName="key" targetName="serviceCharCode" />
	                        <RPMapping sourceAttrName="value" targetName="value" />
	                    </RPListItemTemplate>                        
	                </RPListTemplate>            
	            </RPListItemTemplate>
			</RPListTemplate>
		</TransformationTemplate>

        <TransformationTemplate>
			<TemplateConditions>
				<base:IsMember value="internet" sourceAttrName="name(.)" />        
				<base:IsNotMember value="true" sourceAttrName="#:voiceHasConfiguredServiceLevel" />        
	        </TemplateConditions>
	        <RPListTemplate listName="configuredServiceList">
	            <RPListItemTemplate sourceWorkingPath="../voice/*/serviceLevel/existing">
	                <RPMapping sourceAttrName="serviceCode" targetName="serviceCode" />
	                <RPListTemplate listName="additionalInfo">
	                    <RPListItemTemplate sourceWorkingPath="additionalInfo">
	                        <RPMapping sourceAttrName="key" targetName="serviceCharCode" />
	                        <RPMapping sourceAttrName="value" targetName="value" />
	                    </RPListItemTemplate>                        
	                </RPListTemplate>            
	            </RPListItemTemplate>
			</RPListTemplate>
		</TransformationTemplate>
		
		<base:DataBufferWriter keyValue="listType" staticValue="serviceLevel" />
		<RPMapping targetName="listType" sourceAttrName="#:listType" />
		<base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>
    </AbstractTransformationTemplate>        
    

   <AbstractTransformationTemplate ID="modifyFeaturesVoicePrioritization_template" extends="modifyFeatures_template">
      <TemplateConditions>
        <base:IsExisting sourceAttrName="../../accesses/*/*/voicePrioritization" />
        <OrComposite>
          <AndComposite>
             <base:IsExisting sourceAttrName="../../accesses/*/*/accessTechnology/configured" />
             <base:IsNotMember value="SDSL" sourceAttrName="../../accesses/*/*/accessTechnology/configured" />
          </AndComposite>
          <AndComposite>
             <base:IsNotExisting sourceAttrName="../../accesses/*/*/accessTechnology/configured" />
             <base:IsExisting sourceAttrName="../../accesses/*/*/accessTechnology/existing" />
             <base:IsNotMember value="SDSL" sourceAttrName="../../accesses/*/*/accessTechnology/existing" />
          </AndComposite>
          <base:IsNotExisting sourceAttrName="../../accesses/*/*/accessTechnology" />
          <AndComposite>
             <base:IsExisting sourceAttrName="../../accesses/*/*/accessTechnology" />
             <base:IsNotExisting sourceAttrName="../../accesses/*/*/accessTechnology/configured" />
             <base:IsNotExisting sourceAttrName="../../accesses/*/*/accessTechnology/existing" />
          </AndComposite>
        </OrComposite>
        <OrComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="businessDSL" sourceAttrName="#:targetInternetAccess" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="ipBitstream" sourceAttrName="#:targetInternetAccess" />
          </AndComposite>
        </OrComposite>
      </TemplateConditions>
      
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="true" sourceAttrName="../../accesses/*/*/voicePrioritization/configured" /> 
        </TemplateConditions>
        <RPListTemplate listName="configuredServiceList">
          <RPListItemTemplate>
            <RPMapping staticValue="I0192" targetName="serviceCode" />
          </RPListItemTemplate>
        </RPListTemplate>
      </TransformationTemplate>

      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="true" sourceAttrName="../../accesses/*/*/voicePrioritization/existing" /> 
          <base:IsMember value="false" sourceAttrName="../../accesses/*/*/voicePrioritization/configured" /> 
        </TemplateConditions>
        <RPMapping targetName="action" staticValue="remove" />
      </TransformationTemplate>

      <TransformationTemplate>
        <TemplateConditions>
          <base:IsMember value="true" sourceAttrName="../../accesses/*/*/voicePrioritization/existing" /> 
        </TemplateConditions>
        <RPListTemplate listName="existingServiceList">
          <RPListItemTemplate>
            <RPMapping staticValue="I0192" targetName="serviceCode" />
          </RPListItemTemplate>
        </RPListTemplate>
      </TransformationTemplate>

      <base:DataBufferWriter keyValue="listType" staticValue="voicePrio" /> <!--used in featureServicesProcessingStatus in FunctionParameters.xml -->
      <RPMapping targetName="listType" sourceAttrName="#:listType" />
      <base:Include fileIDRef="functionParameters" partIDRef="reasonPTNProcessingStatusForFeatures"/>
      <RPMapping targetName="ignoreDuplicates" staticValue="Y" />        

    </AbstractTransformationTemplate>



    <!-- ****************************************************************** -->

    <!-- standalone functions (functions with an own contract) START -->
    <AbstractTransformationTemplate ID="standaloneContractFunctionCreation_template" extends="baseFunctionCreation_template">
      <TemplateConditions>        
        <!-- make sure for lineCreation or lineChange from POS that internet is completed 
          before or with voice and voice is completed before or with seat -->
        <OrComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:createInternet" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:createVoice" />
          </AndComposite>
          <AndComposite>
            <base:IsNotMember value="voice" sourceAttrName="name(.)" />
            <base:IsNotMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions" />
          </AndComposite>
        </OrComposite>
      </TemplateConditions>

      <RPMapping targetName="processingStatus" sourceAttrName="completionStatusNewCcbId"
        decoding="'noactionOPM', '', 'noactionCOM', '', 'completedOPM'" />
      
      <RPMapping targetName="futureIndicator" staticValue="Y" />
      <base:Include fileIDRef="functionParameters" partIDRef="contractFunctionParameters"/>
    </AbstractTransformationTemplate>
    <!-- standalone functions (functions with an own contract) END -->

    <!-- ****************************************************************** -->

    <!-- IPCentrexSeat creation START -->
    <AbstractTransformationTemplate ID="IPCentrexSeatCreation_template" extends="standaloneContractFunctionCreation_template">
      
      <!-- characteristics for seats -->
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate sourceWorkingPath="
          mobileSeatConfiguration/* | 
          fixedSeatConfiguration/* | 
          convergedSeatConfiguration/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
      </RPListTemplate>

    </AbstractTransformationTemplate>
    <!-- IPCentrexSeat creation END -->

    <!-- ISDN S2M creation START -->
    <AbstractTransformationTemplate ID="OP_ISDNS2MCreation_template" extends="standaloneContractFunctionCreation_template">
      <TemplateConditions>
        <OrComposite>
          <AndComposite>
            <base:IsMember value="CHANGE" sourceAttrName="processingType" />
            <base:IsMember value="isdnS2M" sourceAttrName="name(../../accesses/*[@ID = '${@targetAccessID}'])" />            
          </AndComposite>
          <AndComposite>
            <base:IsMember value="ADD" sourceAttrName="processingType" />
            <base:IsMember value="isdnS2M" sourceAttrName="name(../../accesses/*[@ID = '${@refAccessID}'])" />                        
          </AndComposite>
        </OrComposite>
        <OrComposite>
          <base:IsMember value="noactionOPM" sourceAttrName="completionStatusNewCcbId" />
          <base:IsMember value="noactionCOM" sourceAttrName="completionStatusNewCcbId" />
        </OrComposite>
      </TemplateConditions>
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate sourceWorkingPath="
          ../../accesses/*[@ID = '${@refAccessID}']/*/* |
          ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
          voicePBXConfiguration/* |
          voicePBXConfiguration/portingAccessNumbers/* |
          voicePBXConfiguration/portingAccessNumberRanges/* |
          ipCentrexSiteConfiguration/* |
          ipCentrexSiteConfiguration/portingAccessNumbers/* |
          ipCentrexSiteConfiguration/portingAccessNumberRanges/* |
          sipTrunkS2MConfiguration/* |
          sipTrunkS2MConfiguration/portingAccessNumbers/* |
          sipTrunkS2MConfiguration/portingAccessNumberRanges/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
        <RPListItemTemplate>
          <RPMapping targetName="parameterName" staticValue="desiredDate"/>
          <RPMapping targetName="configuredValue" 
            sourceAttrName="../../desiredDate"/>          
        </RPListItemTemplate>
        <RPListItemTemplate>
          <RPMapping targetName="parameterName" staticValue="opProcessingType"/>
          <RPMapping targetName="configuredValue" staticValue="mit OP"/>          
        </RPListItemTemplate>
        <RPListItemTemplate>
          <RPMapping targetName="parameterName" staticValue="processingType"/>
          <RPMapping targetName="configuredValue" staticValue="TAL"/>          
        </RPListItemTemplate>
        <RPListItemTemplate>
          <RPMapping targetName="parameterName" staticValue="activationTime"/>
          <RPMapping targetName="configuredValue" staticValue="12:00"/>          
        </RPListItemTemplate>
        <RPListItemTemplate>
          <RPMapping targetName="parameterName" staticValue="oldLocalExchangeCarrierOP"/>
          <RPMapping targetName="configuredValue" staticValue="D009"/>          
        </RPListItemTemplate>
        <RPListItemTemplate>
          <RPMapping targetName="parameterName" staticValue="lineTypeOP"/>
          <RPMapping targetName="configuredValue" staticValue="TAL"/>          
        </RPListItemTemplate>
        <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>
      </RPListTemplate>
      
      <RPMapping targetName="validateDuplicateAccessNumbers" 
        sourceAttrName="../../../lineCreation/customerIntention"
        decoding="'LineChangeClone', 'N', 'RelocationClone', 'N', 'Y'" />
      
    </AbstractTransformationTemplate>
    <!-- ISDN S2M creation END -->
    
    <!-- IPCentrexSite creation START -->
    <AbstractTransformationTemplate ID="VoiceCreation_template" extends="standaloneContractFunctionCreation_template">
      <TemplateConditions>
        <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess" />
        <base:IsNotMember value="noactionOPM" sourceAttrName="completionStatusNewCcbId" />
        <base:IsNotMember value="noactionCOM" sourceAttrName="completionStatusNewCcbId" />
      </TemplateConditions>
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate sourceWorkingPath="
          ../../accesses/*[@ID = '${@refAccessID}']/*/* |
          ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
          initialContractStartDate |
          voicePBXConfiguration/* |
          voicePBXConfiguration/portingAccessNumbers/* |
          voicePBXConfiguration/portingAccessNumberRanges/* |
          voiceONBConfiguration/* |
          voiceONBConfiguration/portingAccessNumbers/* |
          voiceONBConfiguration/portingAccessNumberRanges/* |
          ipCentrexSiteConfiguration/* |
          ipCentrexSiteConfiguration/portingAccessNumbers/* |
          ipCentrexSiteConfiguration/portingAccessNumberRanges/* |
          sipTrunkS2MConfiguration/* |
          sipTrunkS2MConfiguration/portingAccessNumbers/* |
          sipTrunkS2MConfiguration/portingAccessNumberRanges/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
        <base:Include fileIDRef="functionParameters" partIDRef="sipTrunkStartDate"/>
        <base:Include fileIDRef="functionParameters" partIDRef="sipTrunkVoiceChannelsRange"/>
        <RPListItemTemplate>
	      <TemplateConditions>
	        <base:IsNotExisting sourceAttrName="*/newAccessNumberType" />
	      </TemplateConditions>
          <RPMapping targetName="parameterName" staticValue="newAccessNumberType"/>
          <RPMapping targetName="configuredValue" 
            sourceAttrName="count(*/portingAccessNumbers) > 0"
            decoding="'true', 'Einzelrufnummern', 'false', 'Block'"/>          
        </RPListItemTemplate>
        <base:Include fileIDRef="functionParameters" partIDRef="isdnInternetParameters"/>  
        <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>   
      </RPListTemplate>
      
    </AbstractTransformationTemplate>
    <!-- IPCentrexSite creation END -->
    
    <!-- BusinessDSL creation START -->
    <AbstractTransformationTemplate ID="BusinessDSLCreation_template" extends="standaloneContractFunctionCreation_template">
      <TemplateConditions>
        <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess" />
      </TemplateConditions>
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate sourceWorkingPath="
          ../../accesses/*[@ID = '${@refAccessID}']/*/* |
          ../../accesses/*[@ID = '${@targetAccessID}']/*/* |
          adslInternetConfiguration/* | 
          sdslInternetConfiguration/* |
          fibreInternetConfiguration/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
        <RPListItemTemplate>
            <RPMapping targetName="parameterName" staticValue="technology"/>
            <RPMapping targetName="configuredValue" sourceAttrName="#:technology"/>
        </RPListItemTemplate>
        <RPListItemTemplate>
          <TemplateConditions>
            <OrComposite>
              <base:IsMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
            </OrComposite>
            <base:IsNotExisting sourceAttrName="*/mailboxAccountName/configured"/>
          </TemplateConditions>
          <RPMapping targetName="parameterName" staticValue="mailboxAccountName"/>
          <RPMapping targetName="configuredValue" staticValue="nicht angelegt"/>
        </RPListItemTemplate>
        <base:Include fileIDRef="functionParameters" partIDRef="billingAccountNumberForconfiguration"/>
      </RPListTemplate>
    </AbstractTransformationTemplate>
    <!-- BusinessDSL creation END -->

    <!-- base template for dependent functions like TBE, installation service and hardware -->
    <AbstractTransformationTemplate ID="dependentFunctionCreation_template" extends="baseFunctionCreation_template">      
      <TemplateConditions>
        <OrComposite>
          <AndComposite>
            <base:Include fileIDRef="functionParameters" partIDRef="parentFunctionIsInternet"/>
            <base:IsMember value="true" sourceAttrName="#:internetReadyForDependentFunctions" />
            <OrComposite>
              <base:IsMember value="ADD" sourceAttrName="processingType" />
              <AndComposite>
                <base:IsMember value="hardware" sourceAttrName="name(.)"/>
                <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess"/>
                <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
                <base:IsMember value="true" sourceAttrName="
                	count (*/quantityOfPartiallyExchangedHardware) > 0 and 
                	*/quantityOfPartiallyExchangedHardware != */quantity/existing"/>
              </AndComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess" />
                <OrComposite>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType" />
                  <AndComposite>
                    <base:IsMember value="IGNORE" sourceAttrName="processingType" />
                    <OrComposite>
                      <base:IsMember value="hardware" sourceAttrName="name(.)" />
                      <base:IsMember value="directoryEntry" sourceAttrName="name(.)" />
                    </OrComposite>
                  </AndComposite>
                </OrComposite>
              </AndComposite>
            </OrComposite>                                                                                                                  
          </AndComposite>
          <AndComposite>
            <base:Include fileIDRef="functionParameters" partIDRef="parentFunctionIsVoice"/>
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions" />
            <OrComposite>
              <base:IsMember value="ADD" sourceAttrName="processingType" />
              <!-- changed directoryEntry (IT-31476) -->
              <AndComposite>
                <base:IsMember value="directoryEntry" sourceAttrName="name(.)"/>
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
              </AndComposite>
              <AndComposite>
                <base:IsMember value="hardware" sourceAttrName="name(.)"/>
                <base:IsNotMember value="true" sourceAttrName="#:newVoiceMainAccess"/>
                <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
                <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured"/>
                <base:IsMember value="true" sourceAttrName="
                	count (*/quantityOfPartiallyExchangedHardware) > 0 and 
                	*/quantityOfPartiallyExchangedHardware != */quantity/existing"/>
              </AndComposite>
              <AndComposite>
                <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess" />
                <OrComposite>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType" />
                  <AndComposite>
                    <base:IsMember value="IGNORE" sourceAttrName="processingType" />
                    <OrComposite>
                      <base:IsMember value="hardware" sourceAttrName="name(.)" />
                      <base:IsMember value="directoryEntry" sourceAttrName="name(.)" />
                      <base:IsMember value="extraNumbers" sourceAttrName="name(.)" />
                    </OrComposite>
                  </AndComposite>
                </OrComposite>
              </AndComposite>
            </OrComposite>
          </AndComposite>
          <!-- dependent functions for seats -->
          <AndComposite>
            <!-- check if parent is seat -->
            <OrComposite>
              <AndComposite>
                <base:IsExisting sourceAttrName="refFunctionID/configured" />            
                <base:IsMember value="seat" sourceAttrName="name(/*/*/functions/*[@ID='${refFunctionID/configured}'])" />          
              </AndComposite>                              
              <AndComposite>
                <base:IsNotExisting sourceAttrName="refFunctionID/configured" />            
                <base:IsMember value="seat" sourceAttrName="name(/*/*/functions/*[@ID='${refFunctionID/existing}'])" />          
              </AndComposite>
            </OrComposite>
            <!-- check, if the voice function is not blocking this one -->
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForDependentFunctions" />
            <!-- check the status of the parent -->
            <base:IsMember value="true" sourceAttrName="
                count(refFunctionID/configured) > 0 
                and (/*/*/functions/*[@ID='${refFunctionID/configured}']/processingStatus = 'completedOPM'
                    or /*/*/functions/*[@ID='${refFunctionID/configured}']/processingStatus = 'completedCCM'
                    or /*/*/functions/*[@ID='${refFunctionID/configured}']/processingType = 'IGNORE')
                or
                count(refFunctionID/configured) = 0 
                and (/*/*/functions/*[@ID='${refFunctionID/existing}']/processingStatus = 'completedOPM'
                    or /*/*/functions/*[@ID='${refFunctionID/existing}']/processingStatus = 'completedCCM'
                    or /*/*/functions/*[@ID='${refFunctionID/existing}']/processingType = 'IGNORE')" />              
            <!-- check processing type -->
            <OrComposite>
              <!-- for new functions always create them --> 
              <base:IsMember value="ADD" sourceAttrName="processingType" />
              <!-- changed and ignored functions are only taken over, if the main access is recreated -->
              <AndComposite>
                <OrComposite>
                  <base:IsMember value="CHANGE" sourceAttrName="processingType" />
                  <AndComposite>
                    <base:IsMember value="IGNORE" sourceAttrName="processingType" />
                    <OrComposite>
                      <base:IsMember value="hardware" sourceAttrName="name(.)" />
                      <base:IsMember value="directoryEntry" sourceAttrName="name(.)" />
                    </OrComposite>
                  </AndComposite>
                </OrComposite>
                <base:IsExisting sourceAttrName="../*[@ID = '${refFunctionID/existing}']/ccbId[@type='S']/configured" />
              </AndComposite>
            </OrComposite>
          </AndComposite>
        </OrComposite>
      </TemplateConditions>
            
		<RPMapping targetName="processingStatus" staticValue="completedOPM" />

		<RPMapping targetName="serviceSubscriptionId" 
			sourceAttrName="/*/*/functions/*[@ID='${#:refFunctionID}']/ccbId[@type='S']" 
			method="configuredExisting" />
      
    </AbstractTransformationTemplate>

    <!-- base template for all kind of functions, contract and dependent functions -->
    <AbstractTransformationTemplate ID="baseFunctionCreation_template">
      <TemplateConditions>
        <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        <OrComposite>
          <base:IsMember value="ADD" sourceAttrName="processingType" />
          <base:IsMember value="CHANGE" sourceAttrName="processingType" />
          <base:IsMember value="IGNORE" sourceAttrName="processingType" />
        </OrComposite>
        <OrComposite>
          <AndComposite>
            <base:IsNotMember value="IGNORE" sourceAttrName="processingType" />
            <base:IsExisting sourceAttrName="ccbId[@type='S']/configured" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="IGNORE" sourceAttrName="processingType" />
            <base:IsExisting sourceAttrName="refFunctionID" />
          </AndComposite>
        </OrComposite>
        <OrComposite>
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:createVoice" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="#:createInternet" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="directoryEntry" sourceAttrName="name(.)" />
            <OrComposite>
              <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId" />
              <base:IsMember value="precompletedOPM" sourceAttrName="completionStatusNewCcbId" />
          	  <base:IsMember value="noactionOPM" sourceAttrName="processingStatus" />
          	  <base:IsMember value="noactionCOM" sourceAttrName="processingStatus" />
            </OrComposite>
            <base:IsNotMember value="precompletedCCM" sourceAttrName="previousCompletionStatusNewCcbId" />
          </AndComposite>
          <AndComposite>
            <base:IsNotMember value="internet" sourceAttrName="name(.)" />
            <base:IsNotMember value="voice" sourceAttrName="name(.)" />
            <base:IsNotMember value="directoryEntry" sourceAttrName="name(.)" />
            <OrComposite>
              <base:IsMember value="completedOPM" sourceAttrName="completionStatusNewCcbId" />
              <base:IsMember value="noactionOPM" sourceAttrName="processingStatus" />
              <base:IsMember value="noactionCOM" sourceAttrName="processingStatus" />              
            </OrComposite>
          </AndComposite>
          <AndComposite>
            <base:IsMember value="hardware" sourceAttrName="name(.)" />
            <base:IsMember value="true" sourceAttrName="
              	count (*/quantityOfPartiallyExchangedHardware) > 0 and 
               	*/quantityOfPartiallyExchangedHardware != */quantity/existing"/>
            <base:IsMember value="completedOPM" sourceAttrName="processingStatus" />
          </AndComposite>
        </OrComposite>
      </TemplateConditions>

      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="refFunctionID" />
        </TemplateConditions>
        <base:DataBufferWriter keyValue="whichRefFunction"
          sourceAttrName="count(refFunctionID/configured) > 0"
          decoding="'true', 'configured', 'existing'" />
        
        <base:DataBufferWriter keyValue="refFunctionID"
          sourceAttrName="refFunctionID/${#:whichRefFunction}" />
        
        <base:DataBufferWriter keyValue="refFunctionName"
          sourceAttrName="name(/*/*/functions/*[@ID='${#:refFunctionID}'])" />            
      </TransformationTemplate>
      
      <RPMapping targetName="accountNumber" sourceAttrName="#:targetAccountNumber" />
      <RPMapping targetName="customerNumber" sourceAttrName="#:targetCustomerNumber" />
      
      <!-- populate existingServiceSubscriptionId only, if access of the function doesnt change 
        existingServiceSubscriptionId indicates, if an existing contract can be reused for 
        creating a new product subscription.
      -->
      <TransformationTemplate>
        <TemplateConditions>
          <OrComposite>
            <AndComposite>
              <base:IsNotMember value="true" sourceAttrName="#:createNewInternetContract"/>
              <base:IsMember value="internet" sourceAttrName="name(.)"/>
            </AndComposite>
            <AndComposite>
              <base:IsNotMember value="true" sourceAttrName="#:createNewVoiceContract"/>
              <base:IsMember value="voice" sourceAttrName="name(.)"/>
            </AndComposite>
            <AndComposite>
              <base:IsNotMember value="relocation" sourceAttrName="name(../..)"/>
              <base:IsMember value="seat" sourceAttrName="name(.)"/>
            </AndComposite>
          </OrComposite>
        </TemplateConditions>
        <!-- if existingServiceSubscriptionId is set, the trx will not create a new contract -->
        <RPMapping targetName="existingServiceSubscriptionId" sourceAttrName="ccbId[@type='S']/existing" />        
      </TransformationTemplate>      

      <TransformationTemplate>
          <TemplateConditions>
            <base:IsMember value="relocation" sourceAttrName="name(../..)"/>
          </TemplateConditions>
          <TransformationTemplate>
              <TemplateConditions>
                  <base:IsNotMember value="kombin. Schaltg." sourceAttrName="/*/*/relocationVariant"/>
              </TemplateConditions>
              <RPMapping targetName="reason" staticValue="RELOCATION" />
          </TransformationTemplate>   
          <TransformationTemplate>
              <TemplateConditions>
                  <base:IsMember value="kombin. Schaltg." sourceAttrName="/*/*/relocationVariant"/>
              </TemplateConditions>
              <RPMapping targetName="reason" staticValue="COM_BW_CHANGE" />
          </TransformationTemplate>   
      </TransformationTemplate>      

      <TransformationTemplate>
          <TemplateConditions>
            <base:IsMember value="lineChange" sourceAttrName="name(../..)"/>
            <base:IsMember value="coordinated" sourceAttrName="/*/*/technologyChangeVariant"/>
          </TemplateConditions>
          <RPMapping targetName="reason" staticValue="COM_BW_CHANGE" />
      </TransformationTemplate>      

            
      <RPMapping targetName="allocatedServiceSubscriptionId" sourceAttrName="ccbId[@type='S']/configured" />
      <RPMapping targetName="functionID" sourceAttrName="@ID" />
      
      <RPMapping targetName="activationDate" sourceAttrName="resultDate" formatter="SOMToCCBDateFormatter" />
      <base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberCreation"/>   
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="installationService_template" extends="dependentFunctionCreation_template">
      <base:Include fileIDRef="functionParameters" partIDRef="installationServiceParameters"/>     
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="hardwareService_template" extends="dependentFunctionCreation_template">            
      <TemplateConditions>
      	<base:IsNotMember value="0" sourceAttrName="*/quantity/configured"/>
        <OrComposite>
          <base:IsMember value="ADD" sourceAttrName="processingType"/>
          <AndComposite>
            <OrComposite>
              <base:IsMember value="CHANGE" sourceAttrName="processingType"/>
              <base:IsMember value="IGNORE" sourceAttrName="processingType"/>
            </OrComposite>
            <OrComposite>
              <base:IsMember value="true" sourceAttrName="
                	count (*/quantityOfPartiallyExchangedHardware) > 0 and 
                	*/quantityOfPartiallyExchangedHardware != */quantity/existing"/>
              <base:IsExisting sourceAttrName="*/hardwareServiceCode/configured"/>
              <base:IsExisting sourceAttrName="refFunctionID/configured"/>
              <AndComposite>
              	<base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
                <base:IsMember value="internet" sourceAttrName="name(../*[@ID = '${refFunctionID/existing}'])"/>
                <OrComposite>
                  <base:IsMember value="I1223" sourceAttrName="*/hardwareServiceCode/existing"/>
                  <base:IsMember value="V011A" sourceAttrName="*/hardwareServiceCode/existing"/> 
                  <base:IsMember value="V0114" sourceAttrName="*/hardwareServiceCode/existing"/>                 
                </OrComposite>
              </AndComposite>                
              <AndComposite>
              	<base:IsNotMember value="ISDNP2P" sourceAttrName="#:targetTechnology"/>
                <base:IsMember value="voice" sourceAttrName="name(../*[@ID = '${refFunctionID/existing}'])"/>
                <OrComposite>
                  <base:IsMember value="V0335" sourceAttrName="*/hardwareServiceCode/existing"/>
                  <base:IsMember value="VI057" sourceAttrName="*/hardwareServiceCode/existing"/>
                  <base:IsMember value="VI041" sourceAttrName="*/hardwareServiceCode/existing"/>
                </OrComposite>
              </AndComposite>
            </OrComposite>
          </AndComposite>
        </OrComposite>          
      </TemplateConditions>
      
      <base:Include fileIDRef="functionParameters" partIDRef="hardwareParameters"/>              
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="fixedIPAdress_template"
      extends="childService_template">
      <TemplateConditions>
        <OrComposite>
          <AndComposite>
            <base:IsNotMember value="true" sourceAttrName="#:newInternetMainAccess" />
            <base:IsMember value="Add" sourceAttrName="*/fixedIPAddressChangeType/configured" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="true" sourceAttrName="#:newInternetMainAccess" />
            <OrComposite>
              <base:IsMember value="Add" sourceAttrName="*/fixedIPAddressChangeType/configured" />
              <base:IsMember value="Replace" sourceAttrName="*/fixedIPAddressChangeType/configured" />
              <AndComposite>
                <base:IsNotMember value="Remove" sourceAttrName="*/fixedIPAddressChangeType/configured" />
                <base:IsExisting sourceAttrName="*/fixedIPAddress/existing" />
              </AndComposite>
            </OrComposite>
          </AndComposite>
        </OrComposite>   
      </TemplateConditions>
      <RPMapping staticValue="I1222" targetName="serviceCode" />
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate sourceWorkingPath="*/*">
          <TransformationTemplate>
            <TemplateConditions>
              <OrComposite>
                <base:IsMember value="fixedIPAddress" sourceAttrName="name(.)" />
                <base:IsMember value="dialInAccountNameStatic" sourceAttrName="name(.)" />
              </OrComposite>
            </TemplateConditions>
            <RPMapping sourceAttrName="name(.)" targetName="parameterName" />
            <TransformationTemplate>
              <TemplateConditions>
                <base:IsExisting sourceAttrName="configured" />
                <base:IsNotExisting sourceAttrName="configured/*" />
              </TemplateConditions>
              <RPMapping sourceAttrName="configured" targetName="configuredValue" />
            </TransformationTemplate>
            <TransformationTemplate>
              <TemplateConditions>
                <base:IsExisting sourceAttrName="existing" />
                <base:IsNotExisting sourceAttrName="existing/*" />
              </TemplateConditions>
              <RPMapping sourceAttrName="existing" targetName="existingValue" />
            </TransformationTemplate>
          </TransformationTemplate>
        </RPListItemTemplate>
      </RPListTemplate>
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="referenceOrder_template"
      extends="childService_template">

      <TemplateConditions>
        <base:IsExisting sourceAttrName="../../accesses/*/referenceOrder" />
        <base:IsMember value="voice" sourceAttrName="name(.)" />
      </TemplateConditions>

      <RPMapping staticValue="VI081" targetName="serviceCode" />
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate sourceWorkingPath="../../accesses/*/referenceOrder/*">
          <TransformationTemplate>
            <TemplateConditions>
              <OrComposite>
                <base:IsMember value="fixedIPAddress" sourceAttrName="name(.)" />
                <base:IsMember value="barcode" sourceAttrName="name(.)" />
                <base:IsMember value="orderPositionNumber" sourceAttrName="name(.)" />
                <base:IsMember value="staticAAAAccountName" sourceAttrName="name(.)" />
              </OrComposite>
            </TemplateConditions>
            <RPMapping sourceAttrName="name(.)" targetName="parameterName" />
            <TransformationTemplate>
              <TemplateConditions>
                <base:IsExisting sourceAttrName="configured" />
                <base:IsNotExisting sourceAttrName="configured/*" />
              </TemplateConditions>
              <RPMapping sourceAttrName="configured" targetName="configuredValue" />
            </TransformationTemplate>
            <TransformationTemplate>
              <TemplateConditions>
                <base:IsExisting sourceAttrName="existing" />
                <base:IsNotExisting sourceAttrName="existing/*" />
              </TemplateConditions>
              <RPMapping sourceAttrName="existing" targetName="existingValue" />
            </TransformationTemplate>
            <TransformationTemplate>
              <TemplateConditions>
                <base:IsNotExisting sourceAttrName="configured" />
                <base:IsNotExisting sourceAttrName="existing" />
              </TemplateConditions>
              <RPMapping sourceAttrName="." targetName="configuredValue" />
            </TransformationTemplate>
          </TransformationTemplate>
        </RPListItemTemplate>
      </RPListTemplate>
    </AbstractTransformationTemplate>


    <AbstractTransformationTemplate ID="referenceOrderBundle_template">
      <TemplateConditions>
        <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        <base:IsMember value="voice" sourceAttrName="name(.)" />
        <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures" />
        <base:IsExisting sourceAttrName="../../accesses/*/referenceOrder/fixedIPAddress[existing|configured]" />
        <OrComposite>
          <base:IsMember value="ADD" sourceAttrName="processingType" />
          <base:IsMember value="CHANGE" sourceAttrName="processingType" />
        </OrComposite>
      </TemplateConditions>

      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="ccbId[@type='S']/existing" />
          <base:IsExisting sourceAttrName="ccbId[@type='S']/configured" />
        </TemplateConditions>
         <RPMapping targetName="serviceSubscriptionIdOld" sourceAttrName="ccbId[@type='S']/existing"/>
      </TransformationTemplate>

      <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type='S']" method="configuredExisting"/>
      <RPMapping targetName="fixedIPAddress" sourceAttrName="../../accesses/*/referenceOrder/fixedIPAddress" method="configuredExisting"/>

    </AbstractTransformationTemplate>


    <AbstractTransformationTemplate ID="childService_template">
      <TemplateConditions>
        <OrComposite>
          <base:IsMember value="ADD" sourceAttrName="processingType" />
          <base:IsMember value="CHANGE" sourceAttrName="processingType" />
        </OrComposite>
        <OrComposite>
           <AndComposite>
              <base:IsMember value="internet" sourceAttrName="name(.)" />
              <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures" />
           </AndComposite>
           <AndComposite>
              <base:IsMember value="voice" sourceAttrName="name(.)" />
              <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures" />
           </AndComposite>
        </OrComposite>
        <base:IsMember value="execute" sourceAttrName="/*/*/transactionType" />
        <!-- nur wenn Status = OPM schon fertig -->
      </TemplateConditions>
      <RPMapping targetName="serviceSubscriptionId" 
        sourceAttrName="ccbId[@type='S']" 
        method="configuredExisting" />
      <RPMapping targetName="functionID" sourceAttrName="@ID" />
      <RPMapping targetName="processingStatus" staticValue="completedOPM" />
      <RPMapping targetName="activationDate" sourceAttrName="resultDate" formatter="SOMToCCBDateFormatter" />
      <base:Include fileIDRef="functionParameters" partIDRef="providerTrackingNumberCreation"/>
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="directoryEntry_template" extends="dependentFunctionCreation_template">      
      <base:Include fileIDRef="functionParameters" partIDRef="directoryEntryParameters"/>
    </AbstractTransformationTemplate>

    <AbstractTransformationTemplate ID="extraNumbers_template" 
      extends="dependentFunctionCreation_template">
      <TemplateConditions>
        <OrComposite>
          <base:IsMember value="ADD" sourceAttrName="processingType" />
          <AndComposite>
            <base:IsMember value="CHANGE" sourceAttrName="processingType" />
            <base:IsMember value="true" sourceAttrName="#:newVoiceMainAccess" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="IGNORE" sourceAttrName="processingType" />
            <base:IsNotMember value="true" sourceAttrName="../../seatRelocationIndicator" />            
            <base:IsMember value="true" sourceAttrName="../../keepFixedNumbersIndicator" />
          </AndComposite>
        </OrComposite>
      </TemplateConditions>          
      <RPMapping targetName="createCustomerOrder" staticValue="Y" />
      
      <base:Include fileIDRef="functionParameters" partIDRef="serviceType"/>
      
      <RPListTemplate listName="parameterList">
        <RPListItemTemplate sourceWorkingPath="singleNumberConfiguration/* | numberRangeConfiguration/*">
          <base:Include fileIDRef="functionParameters" partIDRef="parameterList"/>
        </RPListItemTemplate>
      </RPListTemplate>
      
    </AbstractTransformationTemplate>
       
    <AbstractTransformationTemplate ID="modifyContract_template"
      extends="modifyContract_BaseTemplate">
      <TemplateConditions>
        <OrComposite>
          <AndComposite>
            <base:IsMember value="internet" sourceAttrName="name(.)" />
            <base:IsNotMember value="true" sourceAttrName="#:createNewInternetContract" />
            <base:IsMember value="true" sourceAttrName="#:internetReadyForFeatures" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="voice" sourceAttrName="name(.)" />            
            <base:IsNotMember value="true" sourceAttrName="#:createNewVoiceContract" />
            <base:IsMember value="true" sourceAttrName="#:voiceReadyForFeatures" />
          </AndComposite>
          <AndComposite>
            <base:IsMember value="seat" sourceAttrName="name(.)" />            
            <base:IsNotMember value="relocation" sourceAttrName="name(../..)"/>
            <OrComposite>
                <base:IsMember value="completedOPM" sourceAttrName="processingStatus" />
                <base:IsMember value="noactionCOM" sourceAttrName="processingStatus" />
                <base:IsMember value="noactionOPM" sourceAttrName="processingStatus" />
            </OrComposite>
          </AndComposite>          
        </OrComposite>              
      </TemplateConditions>
      <TransformationTemplate>
        <TemplateConditions>
          <base:IsExisting sourceAttrName="ccbId[@type = 'S']/configured" />
        </TemplateConditions>
        <RPMapping targetName="functionStatus" staticValue="SUCCESS" />
      </TransformationTemplate>
    </AbstractTransformationTemplate>
    
    <!-- seperate template, because modifyContractParameters contains additional conditions -->
    <AbstractTransformationTemplate ID="modifyContract_BaseTemplate">      
      <base:Include fileIDRef="functionParameters" partIDRef="modifyContractParameters"/>
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="modifyBundleTemplate">
      <TemplateConditions>
        <base:IsMember value="allocate" sourceAttrName="/order/*/transactionType"/>
        <base:IsExisting sourceAttrName="ccbId[@type = 'S']/existing"/>
      </TemplateConditions>
      <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type = 'S']/existing" />
      <RPMapping targetName="bundleFutureIndicator" staticValue="T" />
    </AbstractTransformationTemplate>
    
    <AbstractTransformationTemplate ID="resetBundleTemplate">
      <TemplateConditions>
        <base:IsMember value="execute" sourceAttrName="/order/*/transactionType"/>
        <base:IsExisting sourceAttrName="ccbId[@type = 'S']/existing"/>
        <base:IsMember value="cancelledOPM" sourceAttrName="completionStatusOldCcbId"/>
        <base:IsNotMember value="completedCCM" sourceAttrName="previousCompletionStatusOldCcbId"/>
      </TemplateConditions>
      <RPMapping targetName="serviceSubscriptionId" sourceAttrName="ccbId[@type = 'S']/existing" />
      <RPMapping targetName="bundleFutureIndicator" staticValue="N" />
    </AbstractTransformationTemplate>
    
  </BaseTemplates>
</TransformationRepository>
