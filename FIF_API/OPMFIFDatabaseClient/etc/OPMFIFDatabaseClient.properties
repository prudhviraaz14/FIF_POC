###############################################################################
#
# Configuration file for the CCM-FIF DatabaseClient application
#
# @author Olivier Goethals
#
###############################################################################


SynchronousFifClient.NumberOfRequestReceivers=1
SynchronousFifClient.NumberOfRequestHandlers=1
SynchronousFifClient.NumberOfRecycleHandlers=0
SynchronousFifClient.ClientType=OPM
SynchronousFifClient.ClientId=OPM1
SynchronousFifClient.FifTransaction.DBAlias=requestdb
SynchronousFifClient.FailedRequestNotification.DBAlias=requestdb
SynchronousFifClient.CreateFailedRequestNotification=false
SynchronousFifClient.CreateFailedRequestNotification.ActionNames=modifyContract
SynchronousFifClient.DeleteAfterCompletion=false
SynchronousFifClient.DeleteAfterCompletion.ActionNames=createExternalOrder,closeExternalOrder
SynchronousFifClient.BlockActionNames=false
SynchronousFifClient.BlockActionNames.ActionNames=modifyContract
SynchronousFifClient.BlockActionNames.Delay=5

SynchronousFifClient.FailedResponseHandling=true
SynchronousFifClient.FailedResponseHandling.MaxRetries=3
SynchronousFifClient.FailedResponseHandling.BatchSize=10
SynchronousFifClient.FailedResponseHandling.SleepTime=1
SynchronousFifClient.FailedResponseHandling.ResendDelay=5

SynchronousFifClient.HangingRequestHandling=true
SynchronousFifClient.HangingRequestHandling.BatchSize=10
SynchronousFifClient.HangingRequestHandling.RequestAge=120

ServerHandler.SimulateServer=false
ServerHandler.SimulateServerCrash=false
ServerHandler.SimulatedReplyFileName=xml/test.xml
ServerHandler.ServerProcessName=/pkginf01/home/schwarje/dev/bin/CcmFifInterface_dev_schwarje
ServerHandler.ServerInstanceBase=OPM_
ServerHandler.ServerArguments=



SynchronousDatabaseClient.BatchSize=50
SynchronousDatabaseClient.EnableDependentTransactions=false
SynchronousDatabaseClient.EnableTransactionLists=false
SynchronousDatabaseClient.EnableTransactionResults=true
SynchronousDatabaseClient.EnableParameterLists=false
SynchronousDatabaseClient.MaxErrorLength=4000
SynchronousDatabaseClient.WrapRequestInTransactionList=true
SynchronousDatabaseClient.ArtificialListName=artificial-list
SynchronousDatabaseClient.PopulateOmtsOrderId=true
SynchronousDatabaseClient.DefaultOmtsOrderIdParameterName=OMTS_ORDER_ID
SynchronousDatabaseClient.RequestSleepTime=1
SynchronousDatabaseClient.DatabaseAlias=requestdb

# Indicates whether messages sent to FIF should be written to an output file
# (true/false)
SynchronousFifClient.WriteSentMessages=true

# The directory to store messages sent to FIF in (only used if WriteSentMessages
# is set to true)
SynchronousFifClient.SentOutputDir=SLSFIFDatabaseClient/fif-request

# Indicates whether the reply messages from FIF should be written to an output file
# (true/false)
SynchronousFifClient.WriteReplyMessages=true

# The directory to store the reply messages from FIF in (only used if WriteReplyMessages
# is set to true)
SynchronousFifClient.ReplyOutputDir=SLSFIFDatabaseClient/fif-reply

# The directory to store the invalid reply messages from FIF in.
# A reply is invalid if it cannot be interpreted by the message receiver.
# This usually means that FIF is sending incorrect data as a reply.
SynchronousFifClient.InvalidReplyOutputDir=SLSFIFDatabaseClient/fif-invalid-reply



RequestHandler.SelectInterval=60
RequestHandler.BatchSize=5

RequestHandler.RecycledErrorsDBAlias=requestdb

RequestHandler.EnableRecycling=false
RequestHandler.MaxRecycleStage=2
RequestHandler.RecycleDelay.Stage1=1
RequestHandler.RecycleDelay.Stage2=1
#RequestHandler.RecycleDelay.Stage3=1
#RequestHandler.RecycleDelay.Stage4=72000
RequestHandler.RetrieveRecycledErrorStmt=select value from general_code_item where group_code = 'ERR_REF'


# strings for the FIF states in the database table
databaseclient.RequestStatusNotStarted=100
databaseclient.RequestStatusInProgress=102
databaseclient.RequestStatusCompleted=104
databaseclient.RequestStatusFailed=253
databaseclient.RequestStatusNotExecuted=NOT_RELEVANT
databaseclient.RequestStatusCanceled=NOT_RELEVANT

# data type of the status field (VARCHAR / NUMBER)
databaseclient.RequestStatusDataType=VARCHAR

##################
# SQL STATEMENTS #
##################


#############################
# MESSAGE CREATION SETTINGS #
#############################

#--- GENERAL MESSAGECREATOR SETTINGS --#

# The directory where the metadata file is stored
messagecreator.MetaDataDir=SLSFIFDatabaseClient/etc/

# The name of the XML metadata file
messagecreator.MetaDataFile=opm-fif-databaseclient-metadata.xml

# Indicates whether the produced XML messages should also be written
# as a file in the output directory
messagecreator.WriteOutputFiles=false

# The directory to store the output XML files in
messagecreator.OutputDir=SLSFIFDatabaseClient/output

# Indicates whether the use of reference data should be supported by the client.
messagecreator.EnableReferenceDataSupport=false

# The name of the database alias to use for retrieving reference data
messagecreator.ReferenceDataDBAlias=requestdb


#--- XSQL SETTINGS ---#

# The directory where the XSQL files are located
messagecreator.XSQL.Directory=SLSFIFDatabaseClient/xsqls


#--- XSLT SETTINGS ---#

# The directory where the XSQL files are located
messagecreator.XSLT.Directory=SLSFIFDatabaseClient/xslt

# Indicates whether the XML representation of a request should be
# written as a file.
messagecreator.XSLT.WriteIntermediateFiles=false

# The directory where the intermediate XML files should be written
messagecreator.XSLT.IntermediateDir=SLSFIFDatabaseClient/intermediate



###################
# LOGGER SETTINGS #
###################

#
# The FIF Message Creator uses the Apache log4j framework for logging.
# The following entries configure log4j.
# Please refer to http://jakarta.apache.org/log4j/docs/index.html for
# detailed instructions.
#
# The log file name is specified in the log4j.appender.File.File key.
#

# Definition of the logging level and the appenders
log4j.rootLogger=DEBUG, File, Console

# Console Appender configuration
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d | %-5p | [%t] | %m%n

# File Appender configuration
log4j.appender.File=net.arcor.fif.common.DatedRollingFileAppender
log4j.appender.File.File=../LOG/OPMFIFDatabaseClient.log
log4j.appender.File.Append=true
log4j.appender.File.MaxFileSize=10MB
log4j.appender.File.DateFormat=.yyyy.MM.dd.HH.mm.ss
log4j.appender.File.layout=org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern=%d | %-5p | [%t] | %m%n



#####################
# DATABASE SETTINGS #
#####################

# The list of database aliases that are being used by the application
# An alias maps to a specific set of database configuration settings
# The DatabaseClient only needs one database alias and this alias should
# be called requestdb
db.aliases=requestdb

# The name of the database driver to use
db.requestdb.Driver=oracle.jdbc.driver.OracleDriver

# The connection string to use to connect to the database
db.requestdb.ConnectString=jdbc:oracle:thin:@pkgifddb:1610:d1ccb

# The user name to use to connect to the database
db.requestdb.User=ccm_user

# The password to use to connect to the database (encrypted in CCB format)
db.requestdb.Password=ernirnlihlrieppg

# The encryption key that was used to encrypt the password
db.requestdb.EncryptionKey=pshsodoehseffjlhsohedqfpnpfssmpleggfqpprnlhjhess

# The maximum number of minutes that a connection can remain active (in minutes)
db.requestdb.MaximumConnectionLifeTime=240

# The minimum number of open connections in the pool
db.requestdb.MinimumConnectionCount=0

# The maximum number of open connections in the pool
db.requestdb.MaximumConnectionCount=30

# The number of minutes to wait between connection cleanup runs
db.requestdb.HouseKeepingSleepTime=1



SynchronousDatabaseClient.FifRequest.FetchFifRequestById=\
SELECT EXT_SYS_WO_ID, WO_STATUS, \
DUE_DATE, INTERFACE_START_DATE, INTERFACE_END_DATE, ACTION_NAME \
FROM XML_REQUEST \
WHERE EXT_SYS_ID = 'FIF' AND EXT_SYS_WO_ID = ?

SynchronousDatabaseClient.FifRequest.FetchFifRequestParam=\
SELECT PARAM, VALUE FROM XML_REQUEST_VALUE WHERE EXT_SYS_WO_ID=?

SynchronousDatabaseClient.FifRequest.FetchPendingFifRequests=\
SELECT EXT_SYS_WO_ID FROM XML_REQUEST \
WHERE EXT_SYS_ID = 'FIF' \
AND WO_STATUS = 100 \
AND ROWNUM <= ? \
ORDER BY EXT_SYS_WO_ID

SynchronousDatabaseClient.FifRequest.LockFifRequest=\
SELECT 1 FROM XML_REQUEST WHERE EXT_SYS_WO_ID = ? \
AND WO_STATUS = 100 FOR UPDATE

SynchronousDatabaseClient.FifRequest.UpdateFifRequest=\
UPDATE XML_REQUEST SET \
DUE_DATE = ?, INTERFACE_START_DATE = ?, INTERFACE_END_DATE = ?, \
WO_STATUS = ?, ERROR_TEXT = ? \
WHERE EXT_SYS_WO_ID = ?

SynchronousDatabaseClient.FifRequest.InsertFifRequestResult=\
INSERT INTO XML_REQUEST_RESULT (EXT_SYS_WO_ID, RETURN_PARAM, RETURN_VALUE) \
VALUES (?, ?, ?)



# The select statement recycle transaction by ID 
SynchronousFifClient.FifTransaction.RetrieveFifTransactionsById= \
select * from fif_transaction where transaction_id = ? and client_type = ?

# The select statement to retrieve pending transactions
SynchronousFifClient.FifTransaction.RetrievePendingFifTransactions= \
select * from fif_transaction \
where status = ? and client_id = ? \
and due_date <= sysdate \
and rownum <= ?

# The select statement to retrieve completed requests with failed responses
SynchronousFifClient.FifTransaction.RetrieveFailedResponses= \
select * from fif_transaction \
where status = ? \
and client_id = ? \
and audit_update_date_time <= ? \
and response_retry_count < ? \
and rownum <= ?

# The delete statement recycle transaction
SynchronousFifClient.FifTransaction.DeleteFifTransaction= \
delete from fif_transaction where transaction_id = ? and client_type = ?

# The update statement recycle transaction
SynchronousFifClient.FifTransaction.UpdateFifTransaction= \
update fif_transaction set \
due_date = ?, end_date = ?, status = ?, recycle_stage = ?, client_response = ?, \
customer_number = ?, audit_update_user_id = ?, audit_update_date_time = sysdate, response_retry_count = ? \
where transaction_id = ? and client_type = ?

# The insert statement recycle transaction
SynchronousFifClient.FifTransaction.InsertFifTransaction= \
insert into fif_transaction \
(transaction_id, client_type, client_id, client_request, client_response, due_date, entry_date, \
status, recycle_stage, customer_number, audit_update_user_id, response_retry_count, audit_update_date_time) \
values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate)



# parameters for creating notifications for failed fif requests   
SynchronousFifClient.FailedRequestNotification.GetTransactionID.Statement=\
select 'FR-'||lpad(fif_transaction_id_seq.nextval, 15, '0') from dual

SynchronousFifClient.FailedRequestNotification.InsertRequest.Statement=\
insert into ccm_fif_request (transaction_id, target_client, status, action_name, \
   due_date, priority, creation_date, audit_update_user_id) \
values (?, 'CCM', 'NOT_STARTED', 'handleFailedFifRequest', sysdate, 0, sysdate, 'FIF-API')

SynchronousFifClient.FailedRequestNotification.InsertRequestParam.Statement=\
insert into ccm_fif_request_param (transaction_id, param, value) \
values (?, ?, ?)   

SynchronousFifClient.FailedRequestNotification.InsertRequestParamList.Statement=\
insert into ccm_fif_request_param_list (transaction_id, param_list, list_item_number, param, value) \
values (?, ?, ?, ?, ?)   

